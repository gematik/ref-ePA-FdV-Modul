package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class AuditMessage extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public EventIdentificationType EventIdentification;
    
    public ArrayList< AuditMessage_ActiveParticipant> ActiveParticipant =new ArrayList<AuditMessage_ActiveParticipant >();
    
    public ArrayList< AuditSourceIdentificationType> AuditSourceIdentification =new ArrayList<AuditSourceIdentificationType >();
    
    public ArrayList< ParticipantObjectIdentificationType> ParticipantObjectIdentification =new ArrayList<ParticipantObjectIdentificationType >();
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("EventIdentification"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.EventIdentification = (EventIdentificationType)__envelope.get(j,EventIdentificationType.class,false);
            }
            return true;
        }
        if (info.name.equals("ActiveParticipant"))
        {
            if(obj!=null)
            {
if(this.ActiveParticipant==null)
                {
                    this.ActiveParticipant = new java.util.ArrayList< AuditMessage_ActiveParticipant>();
                }
                java.lang.Object j =obj;
                AuditMessage_ActiveParticipant j1= (AuditMessage_ActiveParticipant)__envelope.get(j,AuditMessage_ActiveParticipant.class,false);
                this.ActiveParticipant.add(j1);            }
            return true;
        }
        if (info.name.equals("AuditSourceIdentification"))
        {
            if(obj!=null)
            {
if(this.AuditSourceIdentification==null)
                {
                    this.AuditSourceIdentification = new java.util.ArrayList< AuditSourceIdentificationType>();
                }
                java.lang.Object j =obj;
                AuditSourceIdentificationType j1= (AuditSourceIdentificationType)__envelope.get(j,AuditSourceIdentificationType.class,false);
                this.AuditSourceIdentification.add(j1);            }
            return true;
        }
        if (info.name.equals("ParticipantObjectIdentification"))
        {
            if(obj!=null)
            {
if(this.ParticipantObjectIdentification==null)
                {
                    this.ParticipantObjectIdentification = new java.util.ArrayList< ParticipantObjectIdentificationType>();
                }
                java.lang.Object j =obj;
                ParticipantObjectIdentificationType j1= (ParticipantObjectIdentificationType)__envelope.get(j,ParticipantObjectIdentificationType.class,false);
                this.ParticipantObjectIdentification.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return EventIdentification;
        }
        if(propertyIndex>=1 && propertyIndex < 1+this.ActiveParticipant.size())
        {
                java.lang.Object ActiveParticipant = this.ActiveParticipant.get(propertyIndex-(1));
                return ActiveParticipant!=null?ActiveParticipant:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=1+this.ActiveParticipant.size() && propertyIndex < 1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size())
        {
                java.lang.Object AuditSourceIdentification = this.AuditSourceIdentification.get(propertyIndex-(1+this.ActiveParticipant.size()));
                return AuditSourceIdentification!=null?AuditSourceIdentification:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size() && propertyIndex < 1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size()+this.ParticipantObjectIdentification.size())
        {
                java.lang.Object ParticipantObjectIdentification = this.ParticipantObjectIdentification.get(propertyIndex-(1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size()));
                return ParticipantObjectIdentification!=null?ParticipantObjectIdentification:SoapPrimitive.NullNilElement;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1+ActiveParticipant.size()+AuditSourceIdentification.size()+ParticipantObjectIdentification.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = EventIdentificationType.class;
            info.name = "EventIdentification";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex>=1 && propertyIndex < 1+this.ActiveParticipant.size())
        {
            info.type = AuditMessage_ActiveParticipant.class;
            info.name = "ActiveParticipant";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex>=1+this.ActiveParticipant.size() && propertyIndex < 1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size())
        {
            info.type = AuditSourceIdentificationType.class;
            info.name = "AuditSourceIdentification";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex>=1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size() && propertyIndex < 1+this.ActiveParticipant.size()+this.AuditSourceIdentification.size()+this.ParticipantObjectIdentification.size())
        {
            info.type = ParticipantObjectIdentificationType.class;
            info.name = "ParticipantObjectIdentification";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
