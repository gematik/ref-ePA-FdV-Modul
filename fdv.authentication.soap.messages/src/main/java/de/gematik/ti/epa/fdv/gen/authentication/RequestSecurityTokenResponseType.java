package de.gematik.ti.epa.fdv.gen.authentication;
// ----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development
//
// ---------------------------------------------------

import java.util.Hashtable;

import org.ksoap2.serialization.*;

/**
 * Actual content model is non-deterministic, hence wildcard. The following shows intended content model:
 * 
 * <xs:element ref='wst:TokenType' minOccurs='0' /> <xs:element ref='wst:RequestType' /> <xs:element ref='wst:RequestedSecurityToken' minOccurs='0' />
 * <xs:element ref='wsp:AppliesTo' minOccurs='0' /> <xs:element ref='wst:RequestedAttachedReference' minOccurs='0' />
 * <xs:element ref='wst:RequestedUnattachedReference' minOccurs='0' /> <xs:element ref='wst:RequestedProofToken' minOccurs='0' />
 * <xs:element ref='wst:Entropy' minOccurs='0' /> <xs:element ref='wst:Lifetime' minOccurs='0' /> <xs:element ref='wst:Status' minOccurs='0' />
 * <xs:element ref='wst:AllowPostdating' minOccurs='0' /> <xs:element ref='wst:Renewing' minOccurs='0' /> <xs:element ref='wst:OnBehalfOf' minOccurs='0' />
 * <xs:element ref='wst:Issuer' minOccurs='0' /> <xs:element ref='wst:AuthenticationType' minOccurs='0' /> <xs:element ref='wst:Authenticator' minOccurs='0' />
 * <xs:element ref='wst:KeyType' minOccurs='0' /> <xs:element ref='wst:KeySize' minOccurs='0' /> <xs:element ref='wst:SignatureAlgorithm' minOccurs='0' />
 * <xs:element ref='wst:Encryption' minOccurs='0' /> <xs:element ref='wst:EncryptionAlgorithm' minOccurs='0' />
 * <xs:element ref='wst:CanonicalizationAlgorithm' minOccurs='0' /> <xs:element ref='wst:ProofEncryption' minOccurs='0' />
 * <xs:element ref='wst:UseKey' minOccurs='0' /> <xs:element ref='wst:SignWith' minOccurs='0' /> <xs:element ref='wst:EncryptWith' minOccurs='0' />
 * <xs:element ref='wst:DelegateTo' minOccurs='0' /> <xs:element ref='wst:Forwardable' minOccurs='0' /> <xs:element ref='wst:Delegatable' minOccurs='0' />
 * <xs:element ref='wsp:Policy' minOccurs='0' /> <xs:element ref='wsp:PolicyReference' minOccurs='0' />
 * <xs:any namespace='##other' processContents='lax' minOccurs='0' maxOccurs='unbounded' />
 */
public class RequestSecurityTokenResponseType extends AttributeContainer implements KvmSerializable, java.io.Serializable {

    private static final long serialVersionUID = 3675144091403082470L;
    public String Context;

    public java.util.ArrayList<PropertyInfo> any = new java.util.ArrayList<>();

    private transient java.lang.Object __source;

    public void loadFromSoap(final java.lang.Object paramObj, final ExtendedSoapSerializationEnvelope __envelope) {
        if (paramObj == null) {
            return;
        }
        final AttributeContainer inObj = (AttributeContainer) paramObj;
        __source = inObj;

        if (inObj instanceof SoapObject) {
            final SoapObject soapObject = (SoapObject) inObj;
            final int size = soapObject.getPropertyCount();
            for (int i0 = 0; i0 < size; i0++) {
                PropertyInfo info = soapObject.getPropertyInfo(i0);
                if (!loadProperty(info, soapObject, __envelope)) {
                    info = __envelope.getAny(info);
                    any.add(info);
                }
            }
        }

        if (inObj.hasAttribute("Context")) {
            final java.lang.Object j = inObj.getAttribute("Context");
            if (j != null) {
                Context = j.toString();
            }
        }

    }

    protected boolean loadProperty(final PropertyInfo info, final SoapObject soapObject, final ExtendedSoapSerializationEnvelope __envelope) {
        final java.lang.Object obj = info.getValue();
        return false;
    }

    public java.lang.Object getOriginalXmlSource() {
        return __source;
    }

    @Override
    public java.lang.Object getProperty(final int propertyIndex) {
        // !!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        // !!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if (propertyIndex >= 0 && propertyIndex < 0 + any.size()) {
            return any.get(propertyIndex - (0)).getValue();
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 0 + any.size();
    }

    @Override
    public void getPropertyInfo(final int propertyIndex, final Hashtable arg1, final PropertyInfo info) {
        if (propertyIndex >= 0 && propertyIndex < 0 + any.size()) {
            final PropertyInfo j = any.get(propertyIndex - (0));
            info.type = j.type;
            info.name = j.name;
            info.namespace = j.namespace;
        }
    }

    @Override
    public void setProperty(final int arg0, final java.lang.Object arg1) {
    }

    @Override
    public int getAttributeCount() {
        return 1;
    }

    @Override
    public void getAttributeInfo(final int index, final AttributeInfo info) {
        if (index == 0) {
            info.name = "Context";
            info.namespace = "";
            if (Context != null) {
                info.setValue(Context);
            }

        }
    }

    @Override
    public void getAttribute(final int i, final AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(final AttributeInfo attributeInfo) {

    }
}
