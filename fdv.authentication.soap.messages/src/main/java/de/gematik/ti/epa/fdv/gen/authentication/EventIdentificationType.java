package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class EventIdentificationType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public CodedValueType EventID;
    
    public ArrayList< CodedValueType> EventTypeCode =new ArrayList<CodedValueType >();
    
    public Enums.EventIdentificationType_EventActionCode EventActionCode;
    
    public java.util.Date EventDateTime;
    
    public Enums.EventIdentificationType_EventOutcomeIndicator EventOutcomeIndicator=Enums.EventIdentificationType_EventOutcomeIndicator._0;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

if (inObj.hasAttribute("EventActionCode"))
        {	
            java.lang.Object j = inObj.getAttribute("EventActionCode");
            if (j != null)
            {
                EventActionCode = Enums.EventIdentificationType_EventActionCode.fromString(j.toString());
            }
        }if (inObj.hasAttribute("EventDateTime"))
        {	
            java.lang.Object j = inObj.getAttribute("EventDateTime");
            if (j != null)
            {
                EventDateTime = Helper.ConvertFromWebService(j.toString());
            }
        }if (inObj.hasAttribute("EventOutcomeIndicator"))
        {	
            java.lang.Object j = inObj.getAttribute("EventOutcomeIndicator");
            if (j != null)
            {
                EventOutcomeIndicator = Enums.EventIdentificationType_EventOutcomeIndicator.fromString(j.toString());
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("EventID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.EventID = (CodedValueType)__envelope.get(j,CodedValueType.class,false);
            }
            return true;
        }
        if (info.name.equals("EventTypeCode"))
        {
            if(obj!=null)
            {
if(this.EventTypeCode==null)
                {
                    this.EventTypeCode = new java.util.ArrayList< CodedValueType>();
                }
                java.lang.Object j =obj;
                CodedValueType j1= (CodedValueType)__envelope.get(j,CodedValueType.class,false);
                this.EventTypeCode.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return EventID;
        }
        if(propertyIndex>=1 && propertyIndex < 1+this.EventTypeCode.size())
        {
                java.lang.Object EventTypeCode = this.EventTypeCode.get(propertyIndex-(1));
                return EventTypeCode!=null?EventTypeCode:SoapPrimitive.NullNilElement;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1+EventTypeCode.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = CodedValueType.class;
            info.name = "EventID";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex>=1 && propertyIndex < 1+this.EventTypeCode.size())
        {
            info.type = CodedValueType.class;
            info.name = "EventTypeCode";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 3;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
                {
                info.name = "EventActionCode";
                info.namespace= "";
                if(this.EventActionCode!=null)
                {
                    info.setValue(this.EventActionCode);
                }
            
                }if(index==1)
                {
                info.name = "EventDateTime";
                info.namespace= "";
                if(this.EventDateTime!=null)
                {
                    info.setValue(this.EventDateTime);
                }
            
                }if(index==2)
                {
                info.name = "EventOutcomeIndicator";
                info.namespace= "";
                if(this.EventOutcomeIndicator!=null)
                {
                    info.setValue(this.EventOutcomeIndicator);
                }
            
                }    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
