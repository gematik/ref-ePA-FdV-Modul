package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class Error extends org.ksoap2.SoapFault implements KvmSerializable,java.io.Serializable
{
    
    public String MessageID;
    
    public java.util.Date Timestamp;
    
    public ArrayList< Error_Trace> Trace =new ArrayList<Error_Trace >();
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("MessageID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.MessageID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.MessageID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Timestamp"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Timestamp = Helper.ConvertFromWebService(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.Timestamp = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Trace"))
        {
            if(obj!=null)
            {
if(this.Trace==null)
                {
                    this.Trace = new java.util.ArrayList< Error_Trace>();
                }
                java.lang.Object j =obj;
                Error_Trace j1= (Error_Trace)__envelope.get(j,Error_Trace.class,false);
                this.Trace.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return MessageID;
        }
        if(propertyIndex==1)
        {
            return this.Timestamp!=null?Helper.getDateTimeFormat().format(this.Timestamp):SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.Trace.size())
        {
                java.lang.Object Trace = this.Trace.get(propertyIndex-(2));
                return Trace!=null?Trace:SoapPrimitive.NullNilElement;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 2+Trace.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "MessageID";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Timestamp";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.Trace.size())
        {
            info.type = Error_Trace.class;
            info.name = "Trace";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
