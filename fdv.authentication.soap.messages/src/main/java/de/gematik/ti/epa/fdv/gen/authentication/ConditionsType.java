package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class ConditionsType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public ArrayList< ConditionAbstractType> Condition =new ArrayList<ConditionAbstractType >();
    
    public ArrayList< AudienceRestrictionType> AudienceRestriction =new ArrayList<AudienceRestrictionType >();
    
    public ArrayList< OneTimeUseType> OneTimeUse =new ArrayList<OneTimeUseType >();
    
    public ArrayList< ProxyRestrictionType> ProxyRestriction =new ArrayList<ProxyRestrictionType >();
    
    public java.util.Date NotBefore;
    
    public java.util.Date NotOnOrAfter;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

if (inObj.hasAttribute("NotBefore"))
        {	
            java.lang.Object j = inObj.getAttribute("NotBefore");
            if (j != null)
            {
                NotBefore = Helper.ConvertFromWebService(j.toString());
            }
        }if (inObj.hasAttribute("NotOnOrAfter"))
        {	
            java.lang.Object j = inObj.getAttribute("NotOnOrAfter");
            if (j != null)
            {
                NotOnOrAfter = Helper.ConvertFromWebService(j.toString());
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("Condition"))
        {
            if(obj!=null)
            {
if(this.Condition==null)
                {
                    this.Condition = new java.util.ArrayList< ConditionAbstractType>();
                }
                java.lang.Object j =obj;
                ConditionAbstractType j1= (ConditionAbstractType)__envelope.get(j,ConditionAbstractType.class,false);
                this.Condition.add(j1);            }
            return true;
        }
        if (info.name.equals("AudienceRestriction"))
        {
            if(obj!=null)
            {
if(this.AudienceRestriction==null)
                {
                    this.AudienceRestriction = new java.util.ArrayList< AudienceRestrictionType>();
                }
                java.lang.Object j =obj;
                AudienceRestrictionType j1= (AudienceRestrictionType)__envelope.get(j,AudienceRestrictionType.class,false);
                this.AudienceRestriction.add(j1);            }
            return true;
        }
        if (info.name.equals("OneTimeUse"))
        {
            if(obj!=null)
            {
if(this.OneTimeUse==null)
                {
                    this.OneTimeUse = new java.util.ArrayList< OneTimeUseType>();
                }
                java.lang.Object j =obj;
                OneTimeUseType j1= (OneTimeUseType)__envelope.get(j,OneTimeUseType.class,false);
                this.OneTimeUse.add(j1);            }
            return true;
        }
        if (info.name.equals("ProxyRestriction"))
        {
            if(obj!=null)
            {
if(this.ProxyRestriction==null)
                {
                    this.ProxyRestriction = new java.util.ArrayList< ProxyRestrictionType>();
                }
                java.lang.Object j =obj;
                ProxyRestrictionType j1= (ProxyRestrictionType)__envelope.get(j,ProxyRestrictionType.class,false);
                this.ProxyRestriction.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=0 && propertyIndex < 0+this.Condition.size())
        {
                java.lang.Object Condition = this.Condition.get(propertyIndex-(0));
                return Condition!=null?Condition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.Condition.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size())
        {
                java.lang.Object AudienceRestriction = this.AudienceRestriction.get(propertyIndex-(0+this.Condition.size()));
                return AudienceRestriction!=null?AudienceRestriction:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.Condition.size()+this.AudienceRestriction.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size())
        {
                java.lang.Object OneTimeUse = this.OneTimeUse.get(propertyIndex-(0+this.Condition.size()+this.AudienceRestriction.size()));
                return OneTimeUse!=null?OneTimeUse:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size()+this.ProxyRestriction.size())
        {
                java.lang.Object ProxyRestriction = this.ProxyRestriction.get(propertyIndex-(0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size()));
                return ProxyRestriction!=null?ProxyRestriction:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 0+Condition.size()+AudienceRestriction.size()+OneTimeUse.size()+ProxyRestriction.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex>=0 && propertyIndex < 0+this.Condition.size())
        {
            info.type = ConditionAbstractType.class;
            info.name = "Condition";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.Condition.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size())
        {
            info.type = AudienceRestrictionType.class;
            info.name = "AudienceRestriction";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.Condition.size()+this.AudienceRestriction.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size())
        {
            info.type = OneTimeUseType.class;
            info.name = "OneTimeUse";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size() && propertyIndex < 0+this.Condition.size()+this.AudienceRestriction.size()+this.OneTimeUse.size()+this.ProxyRestriction.size())
        {
            info.type = ProxyRestrictionType.class;
            info.name = "ProxyRestriction";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 2;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
                {
                info.name = "NotBefore";
                info.namespace= "";
                if(this.NotBefore!=null)
                {
                    info.setValue(this.NotBefore);
                }
            
                }if(index==1)
                {
                info.name = "NotOnOrAfter";
                info.namespace= "";
                if(this.NotOnOrAfter!=null)
                {
                    info.setValue(this.NotOnOrAfter);
                }
            
                }    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
