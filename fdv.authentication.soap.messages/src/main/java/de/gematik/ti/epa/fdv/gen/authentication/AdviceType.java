package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class AdviceType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public ArrayList< String> AssertionIDRef =new ArrayList<String >();
    
    public ArrayList< String> AssertionURIRef =new ArrayList<String >();
    
    public ArrayList< AssertionType> Assertion =new ArrayList<AssertionType >();
    
    public ArrayList< EncryptedElementType> EncryptedAssertion =new ArrayList<EncryptedElementType >();
    
    public java.util.ArrayList< PropertyInfo> any =new java.util.ArrayList< PropertyInfo>();
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                    info= __envelope.getAny(info);
                    this.any.add(info);
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("AssertionIDRef"))
        {
            if(obj!=null)
            {
if(this.AssertionIDRef==null)
                {
                    this.AssertionIDRef = new java.util.ArrayList< String>();
                }
                java.lang.Object j =obj;
                String j1= j.toString();
                this.AssertionIDRef.add(j1);            }
            return true;
        }
        if (info.name.equals("AssertionURIRef"))
        {
            if(obj!=null)
            {
if(this.AssertionURIRef==null)
                {
                    this.AssertionURIRef = new java.util.ArrayList< String>();
                }
                java.lang.Object j =obj;
                String j1= j.toString();
                this.AssertionURIRef.add(j1);            }
            return true;
        }
        if (info.name.equals("Assertion"))
        {
            if(obj!=null)
            {
if(this.Assertion==null)
                {
                    this.Assertion = new java.util.ArrayList< AssertionType>();
                }
                java.lang.Object j =obj;
                AssertionType j1= (AssertionType)__envelope.get(j,AssertionType.class,false);
                this.Assertion.add(j1);            }
            return true;
        }
        if (info.name.equals("EncryptedAssertion"))
        {
            if(obj!=null)
            {
if(this.EncryptedAssertion==null)
                {
                    this.EncryptedAssertion = new java.util.ArrayList< EncryptedElementType>();
                }
                java.lang.Object j =obj;
                EncryptedElementType j1= (EncryptedElementType)__envelope.get(j,EncryptedElementType.class,false);
                this.EncryptedAssertion.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=0 && propertyIndex < 0+this.AssertionIDRef.size())
        {
                java.lang.Object AssertionIDRef = this.AssertionIDRef.get(propertyIndex-(0));
                return AssertionIDRef!=null?AssertionIDRef:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.AssertionIDRef.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size())
        {
                java.lang.Object AssertionURIRef = this.AssertionURIRef.get(propertyIndex-(0+this.AssertionIDRef.size()));
                return AssertionURIRef!=null?AssertionURIRef:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size())
        {
                java.lang.Object Assertion = this.Assertion.get(propertyIndex-(0+this.AssertionIDRef.size()+this.AssertionURIRef.size()));
                return Assertion!=null?Assertion:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size())
        {
                java.lang.Object EncryptedAssertion = this.EncryptedAssertion.get(propertyIndex-(0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()));
                return EncryptedAssertion!=null?EncryptedAssertion:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size()+this.any.size())
        {
        return this.any.get(propertyIndex-(0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size())).getValue();
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 0+AssertionIDRef.size()+AssertionURIRef.size()+Assertion.size()+EncryptedAssertion.size()+ any.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex>=0 && propertyIndex < 0+this.AssertionIDRef.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "AssertionIDRef";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.AssertionIDRef.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "AssertionURIRef";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size())
        {
            info.type = AssertionType.class;
            info.name = "Assertion";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size())
        {
            info.type = EncryptedElementType.class;
            info.name = "EncryptedAssertion";
            info.namespace= "urn:oasis:names:tc:SAML:2.0:assertion";
        }
        if(propertyIndex>=0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size() && propertyIndex < 0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size()+this.any.size())
        {
        PropertyInfo j=this.any.get(propertyIndex-(0+this.AssertionIDRef.size()+this.AssertionURIRef.size()+this.Assertion.size()+this.EncryptedAssertion.size()));
        info.type = j.type;
        info.name = j.name;
        info.namespace= j.namespace;
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
