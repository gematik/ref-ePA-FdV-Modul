package de.gematik.ti.epa.fdv.gen.authentication;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class ParticipantObjectIdentificationType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public CodedValueType ParticipantObjectIDTypeCode;
    
    public String ParticipantObjectName;
    
    public byte[] ParticipantObjectQuery;
    
    public ArrayList< TypeValuePairType> ParticipantObjectDetail =new ArrayList<TypeValuePairType >();
    
    public String ParticipantObjectID;
    
    public Enums.ParticipantObjectIdentificationType_ParticipantObjectTypeCode ParticipantObjectTypeCode;
    
    public Enums.ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole ParticipantObjectTypeCodeRole;
    
    public Enums.ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle ParticipantObjectDataLifeCycle;
    
    public String ParticipantObjectSensitivity;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

if (inObj.hasAttribute("ParticipantObjectID"))
        {	
            java.lang.Object j = inObj.getAttribute("ParticipantObjectID");
            if (j != null)
            {
                ParticipantObjectID = j.toString();
            }
        }if (inObj.hasAttribute("ParticipantObjectTypeCode"))
        {	
            java.lang.Object j = inObj.getAttribute("ParticipantObjectTypeCode");
            if (j != null)
            {
                ParticipantObjectTypeCode = Enums.ParticipantObjectIdentificationType_ParticipantObjectTypeCode.fromString(j.toString());
            }
        }if (inObj.hasAttribute("ParticipantObjectTypeCodeRole"))
        {	
            java.lang.Object j = inObj.getAttribute("ParticipantObjectTypeCodeRole");
            if (j != null)
            {
                ParticipantObjectTypeCodeRole = Enums.ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole.fromString(j.toString());
            }
        }if (inObj.hasAttribute("ParticipantObjectDataLifeCycle"))
        {	
            java.lang.Object j = inObj.getAttribute("ParticipantObjectDataLifeCycle");
            if (j != null)
            {
                ParticipantObjectDataLifeCycle = Enums.ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle.fromString(j.toString());
            }
        }if (inObj.hasAttribute("ParticipantObjectSensitivity"))
        {	
            java.lang.Object j = inObj.getAttribute("ParticipantObjectSensitivity");
            if (j != null)
            {
                ParticipantObjectSensitivity = j.toString();
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("ParticipantObjectIDTypeCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ParticipantObjectIDTypeCode = (CodedValueType)__envelope.get(j,CodedValueType.class,false);
            }
            return true;
        }
        if (info.name.equals("ParticipantObjectName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ParticipantObjectName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ParticipantObjectName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ParticipantObjectQuery"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ParticipantObjectQuery = Helper.getBinary(j,false);
            }
            return true;
        }
        if (info.name.equals("ParticipantObjectDetail"))
        {
            if(obj!=null)
            {
if(this.ParticipantObjectDetail==null)
                {
                    this.ParticipantObjectDetail = new java.util.ArrayList< TypeValuePairType>();
                }
                java.lang.Object j =obj;
                TypeValuePairType j1= (TypeValuePairType)__envelope.get(j,TypeValuePairType.class,false);
                this.ParticipantObjectDetail.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return ParticipantObjectIDTypeCode;
        }
        if(propertyIndex==1)
        {
            return this.ParticipantObjectName!=null?this.ParticipantObjectName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.ParticipantObjectQuery!=null?org.kobjects.base64.Base64.encode((byte[])this.ParticipantObjectQuery):SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=3 && propertyIndex < 3+this.ParticipantObjectDetail.size())
        {
                java.lang.Object ParticipantObjectDetail = this.ParticipantObjectDetail.get(propertyIndex-(3));
                return ParticipantObjectDetail!=null?ParticipantObjectDetail:SoapPrimitive.NullNilElement;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+ParticipantObjectDetail.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = CodedValueType.class;
            info.name = "ParticipantObjectIDTypeCode";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ParticipantObjectName";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ParticipantObjectQuery";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
        if(propertyIndex>=3 && propertyIndex < 3+this.ParticipantObjectDetail.size())
        {
            info.type = TypeValuePairType.class;
            info.name = "ParticipantObjectDetail";
            info.namespace= "http://ws.gematik.de/fa/phrext/v1.0";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 5;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
                {
                info.name = "ParticipantObjectID";
                info.namespace= "";
                if(this.ParticipantObjectID!=null)
                {
                    info.setValue(this.ParticipantObjectID);
                }
            
                }if(index==1)
                {
                info.name = "ParticipantObjectTypeCode";
                info.namespace= "";
                if(this.ParticipantObjectTypeCode!=null)
                {
                    info.setValue(this.ParticipantObjectTypeCode);
                }
            
                }if(index==2)
                {
                info.name = "ParticipantObjectTypeCodeRole";
                info.namespace= "";
                if(this.ParticipantObjectTypeCodeRole!=null)
                {
                    info.setValue(this.ParticipantObjectTypeCodeRole);
                }
            
                }if(index==3)
                {
                info.name = "ParticipantObjectDataLifeCycle";
                info.namespace= "";
                if(this.ParticipantObjectDataLifeCycle!=null)
                {
                    info.setValue(this.ParticipantObjectDataLifeCycle);
                }
            
                }if(index==4)
                {
                info.name = "ParticipantObjectSensitivity";
                info.namespace= "";
                if(this.ParticipantObjectSensitivity!=null)
                {
                    info.setValue(this.ParticipantObjectSensitivity);
                }
            
                }    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
