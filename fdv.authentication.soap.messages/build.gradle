/*
 * Copyright (c) 2020 gematik GmbH
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "de.gematik.parent"
apply plugin: "de.gematik.asciidoctor"
apply plugin: "de.gematik.publish"

sourceCompatibility = 1.8

group = 'de.gematik.ti.epa'
description = """ePA FdV Authentication SOAP Messages"""

sourceSets {
    test {
        java.srcDirs = ['src/test/java']
        resources.srcDirs = ['src/test/resources']
        runtimeClasspath = project.sourceSets.main.compileClasspath + project.sourceSets.test.compileClasspath + fileTree("${buildDir}/resources/test") + fileTree("${buildDir}/resources/main") + fileTree("${buildDir}") + project.sourceSets.test.output + project.sourceSets.main.output
    }
}

dependencies {
    implementation files('../libs/ExKsoap2-1.0.3.0.jar')
    implementation files('../libs/ksoap2-android-assembly-3.6.4-jar-with-dependencies.jar')
    implementation group: 'xom', name: 'xom', version: '1.2.5'
    implementation group: 'org.apache.santuario', name: 'xmlsec', version: '2.1.4'
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.5'

}

repositories {
    flatDir {
        dirs '../libs'
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from "${project.buildDir}/../src/main/java/"
    include "**/*.java"
}
task testSourceJar(type: Jar) {
    classifier "test-sources"
    from "${project.buildDir}/../src/test/java/"
    include "**/*.java"
}
task javadocJar(type: Jar) {
    classifier "javadoc"
    from "${project.buildDir}/docs/javadoc/"
    into "${project.name}"
}

artifacts {
    archives sourceJar
    archives testSourceJar
    archives javadocJar
}

gematikDocumentation {
    projectShortcut = "AUTHNSOAP"
    plantUmlDestinationFolder = "../docs/plantuml/AUTHNSOAP"
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addBooleanOption('Xdoclint:none', true)
}

test {
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
