/*
 * ePA KeyAccess REST Schnittstelle der SGD Server f√ºr den Keyaccess
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.
 */

package de.gematik.ti.epa.fdv.key.access.gen.api;

import org.hamcrest.core.IsNull;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

import de.gematik.ti.epa.fdv.key.access.gen.invoker.ApiException;
import de.gematik.ti.epa.fdv.key.access.gen.invoker.Configuration;
import de.gematik.ti.epa.fdv.key.access.gen.model.RequestBody;
import de.gematik.ti.epa.fdv.key.access.gen.model.SgdResponse;

/**
 * API tests for GetKeySgd2Api
 */
@Ignore
public class GetKeySgd2ApiTest {

    private final GetKeySgd2Api api = new GetKeySgd2Api();

    /**
     * List all response from aktorServer/SGD2 inclusive PublicEciesKey
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listEciesKeySgd2Test() throws ApiException {
        Configuration.getDefaultApiClient().setVerifyingSsl(false);
        final RequestBody requestBody = new RequestBody();
        requestBody.setCommand("GetPublicKey");
        requestBody.setOcSPResponse("");
        requestBody.setCertificate(
                "MIIDADCCAqegAwIBAgIHA+WROlkVMzAKBggqhkjOPQQDAjCBljELMAkGA1UEBhMCREUxHzAdBgNVBAoMFmdlbWF0aWsgR21iSCBOT1QtVkFMSUQxRTBDBgNVBAsMPEVsZWt0cm9uaXNjaGUgR2VzdW5kaGVpdHNrYXJ0ZS1DQSBkZXIgVGVsZW1hdGlraW5mcmFzdHJ1a3R1cjEfMB0GA1UEAwwWR0VNLkVHSy1DQTEwIFRFU1QtT05MWTAeFw0xOTA0MDgyMjAwMDBaFw0yNDA0MDgyMTU5NTlaMIGDMQswCQYDVQQGEwJERTEPMA0GA1UECgwGQkFSTUVSMRIwEAYDVQQLDAkxMDk1MDA5NjkxEzARBgNVBAsMClgxMTQ0Mjg1MzExDTALBgNVBAQMBEhvcm4xEjAQBgNVBCoMCUFsZXhhbmRlcjEXMBUGA1UEAwwOQWxleGFuZGVyIEhvcm4wWjAUBgcqhkjOPQIBBgkrJAMDAggBAQcDQgAEg16ltnP20hRZ39+1O8BrdoH2wMj+B8LT+/XI+vNY+4RnIBcMWGdhxqWrpbVKVdxHKDJoV75e+qVsZFBMMCwMQqOB7zCB7DAdBgNVHQ4EFgQUTxkzpa04GZGc/1wrOYtsux4Ix5wwDAYDVR0TAQH/BAIwADAwBgUrJAgDAwQnMCUwIzAhMB8wHTAQDA5WZXJzaWNoZXJ0ZS8tcjAJBgcqghQATAQxMB8GA1UdIwQYMBaAFESxTAFYVB7c2Te+5LI/Km6kXIkdMCAGA1UdIAQZMBcwCgYIKoIUAEwEgSMwCQYHKoIUAEwERjAOBgNVHQ8BAf8EBAMCB4AwOAYIKwYBBQUHAQEELDAqMCgGCCsGAQUFBzABhhxodHRwOi8vZWhjYS5nZW1hdGlrLmRlL29jc3AvMAoGCCqGSM49BAMCA0cAMEQCIBDmIXerwg7vVyWcRm6fTSb4qoPYYLxohoPGyvg2m/DjAiBc5niY8CCb9NkzKSOLr9SzndzlWu48UPmIlaQbAh2Q7g==");
        final SgdResponse response = api.listEciesKeySgd2(requestBody);
        System.out.println("publicKeyEcies: " + response.getPublicKeyECIES());
        System.out.println("Certificate: " + response.getCertificate());
        System.out.println("Signaure: " + response.getSignature());
        // TODO: test validations
        Assert.assertThat(response, IsNull.notNullValue());
        Assert.assertThat(response.getPublicKeyECIES(), IsNull.notNullValue());
        Assert.assertThat(response.getCertificate(), IsNull.notNullValue());
        Assert.assertThat(response.getSignature(), IsNull.notNullValue());
    }

}
