package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigInteger;

public class Error_Trace extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public String EventID;
    
    public String Instance;
    
    public String LogReference;
    
    public String CompType;
    
    public BigInteger Code=BigInteger.ZERO;
    
    public String Severity;
    
    public String ErrorType;
    
    public String ErrorText;
    
    public Error_Trace_Detail Detail;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("EventID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.EventID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.EventID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Instance"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Instance = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Instance = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("LogReference"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.LogReference = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.LogReference = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("CompType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.CompType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.CompType = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Code"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Code = new BigInteger(j.toString());
                    }
                }
                else if (obj instanceof BigInteger){
                    this.Code = (BigInteger)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Severity"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Severity = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Severity = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ErrorType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ErrorType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ErrorType = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ErrorText"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ErrorText = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ErrorText = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Detail"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Detail = (Error_Trace_Detail)__envelope.get(j,Error_Trace_Detail.class,false);
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return EventID;
        }
        if(propertyIndex==1)
        {
            return Instance;
        }
        if(propertyIndex==2)
        {
            return LogReference;
        }
        if(propertyIndex==3)
        {
            return CompType;
        }
        if(propertyIndex==4)
        {
            return this.Code!=null?this.Code.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return Severity;
        }
        if(propertyIndex==6)
        {
            return ErrorType;
        }
        if(propertyIndex==7)
        {
            return ErrorText;
        }
        if(propertyIndex==8)
        {
            return this.Detail!=null?this.Detail.getSimpleValue():null;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "EventID";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Instance";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "LogReference";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "CompType";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Code";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Severity";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ErrorType";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ErrorText";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
        if(propertyIndex==8)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "Detail";
            info.namespace= "http://ws.gematik.de/tel/error/v2.0";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
