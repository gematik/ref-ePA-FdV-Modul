package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class SignatureType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
    public SignedInfoType SignedInfo;
    
    public SignatureValueType SignatureValue;
    
    public KeyInfoType KeyInfo;
    
    public ArrayList< ObjectType> Object =new ArrayList<ObjectType >();
    
    public String Id;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

if (inObj.hasAttribute("Id"))
        {	
            java.lang.Object j = inObj.getAttribute("Id");
            if (j != null)
            {
                Id = j.toString();
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("SignedInfo"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.SignedInfo = (SignedInfoType)__envelope.get(j,SignedInfoType.class,false);
            }
            return true;
        }
        if (info.name.equals("SignatureValue"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.SignatureValue = (SignatureValueType)__envelope.get(j,SignatureValueType.class,false);
            }
            return true;
        }
        if (info.name.equals("KeyInfo"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.KeyInfo = (KeyInfoType)__envelope.get(j,KeyInfoType.class,false);
            }
            return true;
        }
        if (info.name.equals("Object"))
        {
            if(obj!=null)
            {
if(this.Object==null)
                {
                    this.Object = new java.util.ArrayList< ObjectType>();
                }
                java.lang.Object j =obj;
                ObjectType j1= (ObjectType)__envelope.get(j,ObjectType.class,false);
                this.Object.add(j1);            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return SignedInfo;
        }
        if(propertyIndex==1)
        {
            return this.SignatureValue!=null?this.SignatureValue.getSimpleValue():null;
        }
        if(propertyIndex==2)
        {
            return this.KeyInfo!=null?this.KeyInfo:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=3 && propertyIndex < 3+this.Object.size())
        {
                java.lang.Object Object = this.Object.get(propertyIndex-(3));
                return Object!=null?Object:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+Object.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SignedInfoType.class;
            info.name = "SignedInfo";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==1)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "SignatureValue";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex==2)
        {
            info.type = KeyInfoType.class;
            info.name = "KeyInfo";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
        if(propertyIndex>=3 && propertyIndex < 3+this.Object.size())
        {
            info.type = ObjectType.class;
            info.name = "Object";
            info.namespace= "http://www.w3.org/2000/09/xmldsig#";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
                {
                info.name = "Id";
                info.namespace= "";
                if(this.Id!=null)
                {
                    info.setValue(this.Id);
                }
            
                }    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
