package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

/**
* A name for a person, organization, place or thing. A
*                 sequence of name parts, such as given name or family
*                 name, prefix, suffix, etc. Examples for entity name
*                 values are "Jim Bob Walton, Jr.", "Health Level Seven,
*                 Inc.", "Lake Tahoe", etc. An entity name may be as simple
*                 as a character string or may consist of several entity name
*                 parts, such as, "Jim", "Bob", "Walton", and "Jr.", "Health
*                 Level Seven" and "Inc.", "Lake" and "Tahoe".
*/
public class EN extends ANY implements KvmSerializable,java.io.Serializable
{
    
    public ArrayList< en_x002E_delimiter> delimiter =new ArrayList<en_x002E_delimiter >();
    
    public ArrayList< en_x002E_family> family =new ArrayList<en_x002E_family >();
    
    public ArrayList< en_x002E_given> given =new ArrayList<en_x002E_given >();
    
    public ArrayList< en_x002E_prefix> prefix =new ArrayList<en_x002E_prefix >();
    
    public ArrayList< en_x002E_suffix> suffix =new ArrayList<en_x002E_suffix >();
    
	/**
	* An interval of time specifying the time during which
	*                                 the name is or was used for the entity. This
	*                                 accomodates the fact that people change names for
	*                                 people, places and things.
	*/
    public IVL_TS validTime;
    
	/**
	* A set of codes advising a system or user which name
	*                             in a set of like names to select for a given purpose.
	*                             A name without specific use code might be a default
	*                             name useful for any purpose, but a name with a specific
	*                             use code would be preferred for that respective purpose.
	*/
    public String use;
        

    
    
    @Override
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);

if (inObj.hasAttribute("use"))
        {	
            java.lang.Object j = inObj.getAttribute("use");
            if (j != null)
            {
                use = j.toString();
            }
        }

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("delimiter"))
        {
            if(obj!=null)
            {
if(this.delimiter==null)
                {
                    this.delimiter = new java.util.ArrayList< en_x002E_delimiter>();
                }
                java.lang.Object j =obj;
                en_x002E_delimiter j1= (en_x002E_delimiter)__envelope.get(j,en_x002E_delimiter.class,false);
                this.delimiter.add(j1);            }
            return true;
        }
        if (info.name.equals("family"))
        {
            if(obj!=null)
            {
if(this.family==null)
                {
                    this.family = new java.util.ArrayList< en_x002E_family>();
                }
                java.lang.Object j =obj;
                en_x002E_family j1= (en_x002E_family)__envelope.get(j,en_x002E_family.class,false);
                this.family.add(j1);            }
            return true;
        }
        if (info.name.equals("given"))
        {
            if(obj!=null)
            {
if(this.given==null)
                {
                    this.given = new java.util.ArrayList< en_x002E_given>();
                }
                java.lang.Object j =obj;
                en_x002E_given j1= (en_x002E_given)__envelope.get(j,en_x002E_given.class,false);
                this.given.add(j1);            }
            return true;
        }
        if (info.name.equals("prefix"))
        {
            if(obj!=null)
            {
if(this.prefix==null)
                {
                    this.prefix = new java.util.ArrayList< en_x002E_prefix>();
                }
                java.lang.Object j =obj;
                en_x002E_prefix j1= (en_x002E_prefix)__envelope.get(j,en_x002E_prefix.class,false);
                this.prefix.add(j1);            }
            return true;
        }
        if (info.name.equals("suffix"))
        {
            if(obj!=null)
            {
if(this.suffix==null)
                {
                    this.suffix = new java.util.ArrayList< en_x002E_suffix>();
                }
                java.lang.Object j =obj;
                en_x002E_suffix j1= (en_x002E_suffix)__envelope.get(j,en_x002E_suffix.class,false);
                this.suffix.add(j1);            }
            return true;
        }
        if (info.name.equals("validTime"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.validTime = (IVL_TS)__envelope.get(j,IVL_TS.class,false);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.delimiter.size())
        {
                java.lang.Object delimiter = this.delimiter.get(propertyIndex-(count+0));
                return delimiter!=null?delimiter:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size())
        {
                java.lang.Object family = this.family.get(propertyIndex-(count+0+this.delimiter.size()));
                return family!=null?family:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size())
        {
                java.lang.Object given = this.given.get(propertyIndex-(count+0+this.delimiter.size()+this.family.size()));
                return given!=null?given:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size()+this.given.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size())
        {
                java.lang.Object prefix = this.prefix.get(propertyIndex-(count+0+this.delimiter.size()+this.family.size()+this.given.size()));
                return prefix!=null?prefix:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size()+this.suffix.size())
        {
                java.lang.Object suffix = this.suffix.get(propertyIndex-(count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size()));
                return suffix!=null?suffix:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size()+this.suffix.size())
        {
            return this.validTime!=null?this.validTime:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+1+delimiter.size()+family.size()+given.size()+prefix.size()+suffix.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.delimiter.size())
        {
            info.type = en_x002E_delimiter.class;
            info.name = "delimiter";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size())
        {
            info.type = en_x002E_family.class;
            info.name = "family";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size())
        {
            info.type = en_x002E_given.class;
            info.name = "given";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size()+this.given.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size())
        {
            info.type = en_x002E_prefix.class;
            info.name = "prefix";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size() && propertyIndex < count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size()+this.suffix.size())
        {
            info.type = en_x002E_suffix.class;
            info.name = "suffix";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex==count+0+this.delimiter.size()+this.family.size()+this.given.size()+this.prefix.size()+this.suffix.size())
        {
            info.type = IVL_TS.class;
            info.name = "validTime";
            info.namespace= "urn:hl7-org:v3";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return super.getAttributeCount() + 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        int count=super.getAttributeCount();
        if(index==count+0)
                {
                info.name = "use";
                info.namespace= "";
                if(this.use!=null)
                {
                    info.setValue(this.use);
                }
            
                }    if(index < count)
    {
        super.getAttributeInfo(index, info);
    }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
