package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class RecordStateType extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
	/**
	* Es existiert kein Konto für eine angefragte KVNR
	*/
    public java.lang.Object UNKNOWN;
    
	/**
	* Es wurde ein Konto für diese KVNR registriert aber nicht aktiviert
	*/
    public java.lang.Object REGISTERED;
    
	/**
	* Es wurde ein Konto für diese KVNR registriert aber nicht aktiviert und der Versicherte möchte vorhandene Daten aus einem anderen Aktenkonto in das neue übernehmen
	*/
    public java.lang.Object REGISTERED_MIGRATION;
    
	/**
	* Es existiert ein aktives Konto zur angefragten KVNR
	*/
    public java.lang.Object ACTIVATED;
    
	/**
	* Ein vorhandenes Konto zu einer KVNR wurde gekündigt, ist jedoch noch in Benutzung
	*/
    public java.lang.Object DISMISSED;
    
	/**
	* Ein vorhandenes Konto zu einer KVNR wurde gekündigt und vorhandene Daten wurden für den Kontoumzug vorbereitet
	*/
    public java.lang.Object SUSPENDED;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("UNKNOWN"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.UNKNOWN = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.UNKNOWN = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        if (info.name.equals("REGISTERED"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.REGISTERED = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.REGISTERED = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        if (info.name.equals("REGISTERED_MIGRATION"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.REGISTERED_MIGRATION = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.REGISTERED_MIGRATION = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        if (info.name.equals("ACTIVATED"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ACTIVATED = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.ACTIVATED = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        if (info.name.equals("DISMISSED"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DISMISSED = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.DISMISSED = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        if (info.name.equals("SUSPENDED"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.SUSPENDED = __envelope.getSpecificType(j);
                    }
                }
                else {
                    this.SUSPENDED = __envelope.getSpecificType(obj);
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.UNKNOWN!=null?this.UNKNOWN:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.REGISTERED!=null?this.REGISTERED:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.REGISTERED_MIGRATION!=null?this.REGISTERED_MIGRATION:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.ACTIVATED!=null?this.ACTIVATED:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.DISMISSED!=null?this.DISMISSED:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.SUSPENDED!=null?this.SUSPENDED:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(UNKNOWN);
            info.name = "UNKNOWN";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
        if(propertyIndex==1)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(REGISTERED);
            info.name = "REGISTERED";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
        if(propertyIndex==2)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(REGISTERED_MIGRATION);
            info.name = "REGISTERED_MIGRATION";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
        if(propertyIndex==3)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(ACTIVATED);
            info.name = "ACTIVATED";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
        if(propertyIndex==4)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(DISMISSED);
            info.name = "DISMISSED";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
        if(propertyIndex==5)
        {
            info.type = ExtendedSoapSerializationEnvelope.getXSDType(SUSPENDED);
            info.name = "SUSPENDED";
            info.namespace= "http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
