package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

/**
* Mailing and home or office addresses. A sequence of
*                 address parts, such as street or post office Box, city,
*                 postal code, country, etc.
*/
public class AD extends ANY implements KvmSerializable,java.io.Serializable
{
    
    public ArrayList< adxp_x002E_delimiter> delimiter =new ArrayList<adxp_x002E_delimiter >();
    
    public ArrayList< adxp_x002E_country> country =new ArrayList<adxp_x002E_country >();
    
    public ArrayList< adxp_x002E_state> state =new ArrayList<adxp_x002E_state >();
    
    public ArrayList< adxp_x002E_county> county =new ArrayList<adxp_x002E_county >();
    
    public ArrayList< adxp_x002E_city> city =new ArrayList<adxp_x002E_city >();
    
    public ArrayList< adxp_x002E_postalCode> postalCode =new ArrayList<adxp_x002E_postalCode >();
    
    public ArrayList< adxp_x002E_streetAddressLine> streetAddressLine =new ArrayList<adxp_x002E_streetAddressLine >();
    
    public ArrayList< adxp_x002E_houseNumber> houseNumber =new ArrayList<adxp_x002E_houseNumber >();
    
    public ArrayList< adxp_x002E_houseNumberNumeric> houseNumberNumeric =new ArrayList<adxp_x002E_houseNumberNumeric >();
    
    public ArrayList< adxp_x002E_direction> direction =new ArrayList<adxp_x002E_direction >();
    
    public ArrayList< adxp_x002E_streetName> streetName =new ArrayList<adxp_x002E_streetName >();
    
    public ArrayList< adxp_x002E_streetNameBase> streetNameBase =new ArrayList<adxp_x002E_streetNameBase >();
    
    public ArrayList< adxp_x002E_streetNameType> streetNameType =new ArrayList<adxp_x002E_streetNameType >();
    
    public ArrayList< adxp_x002E_additionalLocator> additionalLocator =new ArrayList<adxp_x002E_additionalLocator >();
    
    public ArrayList< adxp_x002E_unitID> unitID =new ArrayList<adxp_x002E_unitID >();
    
    public ArrayList< adxp_x002E_unitType> unitType =new ArrayList<adxp_x002E_unitType >();
    
    public ArrayList< adxp_x002E_careOf> careOf =new ArrayList<adxp_x002E_careOf >();
    
    public ArrayList< adxp_x002E_censusTract> censusTract =new ArrayList<adxp_x002E_censusTract >();
    
    public ArrayList< adxp_x002E_deliveryAddressLine> deliveryAddressLine =new ArrayList<adxp_x002E_deliveryAddressLine >();
    
    public ArrayList< adxp_x002E_deliveryInstallationType> deliveryInstallationType =new ArrayList<adxp_x002E_deliveryInstallationType >();
    
    public ArrayList< adxp_x002E_deliveryInstallationArea> deliveryInstallationArea =new ArrayList<adxp_x002E_deliveryInstallationArea >();
    
    public ArrayList< adxp_x002E_deliveryInstallationQualifier> deliveryInstallationQualifier =new ArrayList<adxp_x002E_deliveryInstallationQualifier >();
    
    public ArrayList< adxp_x002E_deliveryMode> deliveryMode =new ArrayList<adxp_x002E_deliveryMode >();
    
    public ArrayList< adxp_x002E_deliveryModeIdentifier> deliveryModeIdentifier =new ArrayList<adxp_x002E_deliveryModeIdentifier >();
    
    public ArrayList< adxp_x002E_buildingNumberSuffix> buildingNumberSuffix =new ArrayList<adxp_x002E_buildingNumberSuffix >();
    
    public ArrayList< adxp_x002E_postBox> postBox =new ArrayList<adxp_x002E_postBox >();
    
    public ArrayList< adxp_x002E_precinct> precinct =new ArrayList<adxp_x002E_precinct >();
    
	/**
	* A GTS specifying the
	*                                 periods of time during which the address can be used.
	*                                 This is used to specify different addresses for
	*                                 different times of the year or to refer to historical
	*                                 addresses.
	*/
    public ArrayList< SXCM_TS> useablePeriod =new ArrayList<SXCM_TS >();
    
	/**
	* A set of codes advising a system or user which address
	*                             in a set of like addresses to select for a given purpose.
	*/
    public String use;
    
	/**
	* A boolean value specifying whether the order of the
	*                             address parts is known or not. While the address parts
	*                             are always a Sequence, the order in which they are
	*                             presented may or may not be known. Where this matters,
	*                             can be used to convey this
	*                             information.
	*/
    public Boolean isNotOrdered;
        

    
    
    @Override
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);

if (inObj.hasAttribute("use"))
        {	
            java.lang.Object j = inObj.getAttribute("use");
            if (j != null)
            {
                use = j.toString();
            }
        }if (inObj.hasAttribute("isNotOrdered"))
        {	
            java.lang.Object j = inObj.getAttribute("isNotOrdered");
            if (j != null)
            {
                isNotOrdered = new Boolean(j.toString());
            }
        }

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("delimiter"))
        {
            if(obj!=null)
            {
if(this.delimiter==null)
                {
                    this.delimiter = new java.util.ArrayList< adxp_x002E_delimiter>();
                }
                java.lang.Object j =obj;
                adxp_x002E_delimiter j1= (adxp_x002E_delimiter)__envelope.get(j,adxp_x002E_delimiter.class,false);
                this.delimiter.add(j1);            }
            return true;
        }
        if (info.name.equals("country"))
        {
            if(obj!=null)
            {
if(this.country==null)
                {
                    this.country = new java.util.ArrayList< adxp_x002E_country>();
                }
                java.lang.Object j =obj;
                adxp_x002E_country j1= (adxp_x002E_country)__envelope.get(j,adxp_x002E_country.class,false);
                this.country.add(j1);            }
            return true;
        }
        if (info.name.equals("state"))
        {
            if(obj!=null)
            {
if(this.state==null)
                {
                    this.state = new java.util.ArrayList< adxp_x002E_state>();
                }
                java.lang.Object j =obj;
                adxp_x002E_state j1= (adxp_x002E_state)__envelope.get(j,adxp_x002E_state.class,false);
                this.state.add(j1);            }
            return true;
        }
        if (info.name.equals("county"))
        {
            if(obj!=null)
            {
if(this.county==null)
                {
                    this.county = new java.util.ArrayList< adxp_x002E_county>();
                }
                java.lang.Object j =obj;
                adxp_x002E_county j1= (adxp_x002E_county)__envelope.get(j,adxp_x002E_county.class,false);
                this.county.add(j1);            }
            return true;
        }
        if (info.name.equals("city"))
        {
            if(obj!=null)
            {
if(this.city==null)
                {
                    this.city = new java.util.ArrayList< adxp_x002E_city>();
                }
                java.lang.Object j =obj;
                adxp_x002E_city j1= (adxp_x002E_city)__envelope.get(j,adxp_x002E_city.class,false);
                this.city.add(j1);            }
            return true;
        }
        if (info.name.equals("postalCode"))
        {
            if(obj!=null)
            {
if(this.postalCode==null)
                {
                    this.postalCode = new java.util.ArrayList< adxp_x002E_postalCode>();
                }
                java.lang.Object j =obj;
                adxp_x002E_postalCode j1= (adxp_x002E_postalCode)__envelope.get(j,adxp_x002E_postalCode.class,false);
                this.postalCode.add(j1);            }
            return true;
        }
        if (info.name.equals("streetAddressLine"))
        {
            if(obj!=null)
            {
if(this.streetAddressLine==null)
                {
                    this.streetAddressLine = new java.util.ArrayList< adxp_x002E_streetAddressLine>();
                }
                java.lang.Object j =obj;
                adxp_x002E_streetAddressLine j1= (adxp_x002E_streetAddressLine)__envelope.get(j,adxp_x002E_streetAddressLine.class,false);
                this.streetAddressLine.add(j1);            }
            return true;
        }
        if (info.name.equals("houseNumber"))
        {
            if(obj!=null)
            {
if(this.houseNumber==null)
                {
                    this.houseNumber = new java.util.ArrayList< adxp_x002E_houseNumber>();
                }
                java.lang.Object j =obj;
                adxp_x002E_houseNumber j1= (adxp_x002E_houseNumber)__envelope.get(j,adxp_x002E_houseNumber.class,false);
                this.houseNumber.add(j1);            }
            return true;
        }
        if (info.name.equals("houseNumberNumeric"))
        {
            if(obj!=null)
            {
if(this.houseNumberNumeric==null)
                {
                    this.houseNumberNumeric = new java.util.ArrayList< adxp_x002E_houseNumberNumeric>();
                }
                java.lang.Object j =obj;
                adxp_x002E_houseNumberNumeric j1= (adxp_x002E_houseNumberNumeric)__envelope.get(j,adxp_x002E_houseNumberNumeric.class,false);
                this.houseNumberNumeric.add(j1);            }
            return true;
        }
        if (info.name.equals("direction"))
        {
            if(obj!=null)
            {
if(this.direction==null)
                {
                    this.direction = new java.util.ArrayList< adxp_x002E_direction>();
                }
                java.lang.Object j =obj;
                adxp_x002E_direction j1= (adxp_x002E_direction)__envelope.get(j,adxp_x002E_direction.class,false);
                this.direction.add(j1);            }
            return true;
        }
        if (info.name.equals("streetName"))
        {
            if(obj!=null)
            {
if(this.streetName==null)
                {
                    this.streetName = new java.util.ArrayList< adxp_x002E_streetName>();
                }
                java.lang.Object j =obj;
                adxp_x002E_streetName j1= (adxp_x002E_streetName)__envelope.get(j,adxp_x002E_streetName.class,false);
                this.streetName.add(j1);            }
            return true;
        }
        if (info.name.equals("streetNameBase"))
        {
            if(obj!=null)
            {
if(this.streetNameBase==null)
                {
                    this.streetNameBase = new java.util.ArrayList< adxp_x002E_streetNameBase>();
                }
                java.lang.Object j =obj;
                adxp_x002E_streetNameBase j1= (adxp_x002E_streetNameBase)__envelope.get(j,adxp_x002E_streetNameBase.class,false);
                this.streetNameBase.add(j1);            }
            return true;
        }
        if (info.name.equals("streetNameType"))
        {
            if(obj!=null)
            {
if(this.streetNameType==null)
                {
                    this.streetNameType = new java.util.ArrayList< adxp_x002E_streetNameType>();
                }
                java.lang.Object j =obj;
                adxp_x002E_streetNameType j1= (adxp_x002E_streetNameType)__envelope.get(j,adxp_x002E_streetNameType.class,false);
                this.streetNameType.add(j1);            }
            return true;
        }
        if (info.name.equals("additionalLocator"))
        {
            if(obj!=null)
            {
if(this.additionalLocator==null)
                {
                    this.additionalLocator = new java.util.ArrayList< adxp_x002E_additionalLocator>();
                }
                java.lang.Object j =obj;
                adxp_x002E_additionalLocator j1= (adxp_x002E_additionalLocator)__envelope.get(j,adxp_x002E_additionalLocator.class,false);
                this.additionalLocator.add(j1);            }
            return true;
        }
        if (info.name.equals("unitID"))
        {
            if(obj!=null)
            {
if(this.unitID==null)
                {
                    this.unitID = new java.util.ArrayList< adxp_x002E_unitID>();
                }
                java.lang.Object j =obj;
                adxp_x002E_unitID j1= (adxp_x002E_unitID)__envelope.get(j,adxp_x002E_unitID.class,false);
                this.unitID.add(j1);            }
            return true;
        }
        if (info.name.equals("unitType"))
        {
            if(obj!=null)
            {
if(this.unitType==null)
                {
                    this.unitType = new java.util.ArrayList< adxp_x002E_unitType>();
                }
                java.lang.Object j =obj;
                adxp_x002E_unitType j1= (adxp_x002E_unitType)__envelope.get(j,adxp_x002E_unitType.class,false);
                this.unitType.add(j1);            }
            return true;
        }
        if (info.name.equals("careOf"))
        {
            if(obj!=null)
            {
if(this.careOf==null)
                {
                    this.careOf = new java.util.ArrayList< adxp_x002E_careOf>();
                }
                java.lang.Object j =obj;
                adxp_x002E_careOf j1= (adxp_x002E_careOf)__envelope.get(j,adxp_x002E_careOf.class,false);
                this.careOf.add(j1);            }
            return true;
        }
        if (info.name.equals("censusTract"))
        {
            if(obj!=null)
            {
if(this.censusTract==null)
                {
                    this.censusTract = new java.util.ArrayList< adxp_x002E_censusTract>();
                }
                java.lang.Object j =obj;
                adxp_x002E_censusTract j1= (adxp_x002E_censusTract)__envelope.get(j,adxp_x002E_censusTract.class,false);
                this.censusTract.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryAddressLine"))
        {
            if(obj!=null)
            {
if(this.deliveryAddressLine==null)
                {
                    this.deliveryAddressLine = new java.util.ArrayList< adxp_x002E_deliveryAddressLine>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryAddressLine j1= (adxp_x002E_deliveryAddressLine)__envelope.get(j,adxp_x002E_deliveryAddressLine.class,false);
                this.deliveryAddressLine.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryInstallationType"))
        {
            if(obj!=null)
            {
if(this.deliveryInstallationType==null)
                {
                    this.deliveryInstallationType = new java.util.ArrayList< adxp_x002E_deliveryInstallationType>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryInstallationType j1= (adxp_x002E_deliveryInstallationType)__envelope.get(j,adxp_x002E_deliveryInstallationType.class,false);
                this.deliveryInstallationType.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryInstallationArea"))
        {
            if(obj!=null)
            {
if(this.deliveryInstallationArea==null)
                {
                    this.deliveryInstallationArea = new java.util.ArrayList< adxp_x002E_deliveryInstallationArea>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryInstallationArea j1= (adxp_x002E_deliveryInstallationArea)__envelope.get(j,adxp_x002E_deliveryInstallationArea.class,false);
                this.deliveryInstallationArea.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryInstallationQualifier"))
        {
            if(obj!=null)
            {
if(this.deliveryInstallationQualifier==null)
                {
                    this.deliveryInstallationQualifier = new java.util.ArrayList< adxp_x002E_deliveryInstallationQualifier>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryInstallationQualifier j1= (adxp_x002E_deliveryInstallationQualifier)__envelope.get(j,adxp_x002E_deliveryInstallationQualifier.class,false);
                this.deliveryInstallationQualifier.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryMode"))
        {
            if(obj!=null)
            {
if(this.deliveryMode==null)
                {
                    this.deliveryMode = new java.util.ArrayList< adxp_x002E_deliveryMode>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryMode j1= (adxp_x002E_deliveryMode)__envelope.get(j,adxp_x002E_deliveryMode.class,false);
                this.deliveryMode.add(j1);            }
            return true;
        }
        if (info.name.equals("deliveryModeIdentifier"))
        {
            if(obj!=null)
            {
if(this.deliveryModeIdentifier==null)
                {
                    this.deliveryModeIdentifier = new java.util.ArrayList< adxp_x002E_deliveryModeIdentifier>();
                }
                java.lang.Object j =obj;
                adxp_x002E_deliveryModeIdentifier j1= (adxp_x002E_deliveryModeIdentifier)__envelope.get(j,adxp_x002E_deliveryModeIdentifier.class,false);
                this.deliveryModeIdentifier.add(j1);            }
            return true;
        }
        if (info.name.equals("buildingNumberSuffix"))
        {
            if(obj!=null)
            {
if(this.buildingNumberSuffix==null)
                {
                    this.buildingNumberSuffix = new java.util.ArrayList< adxp_x002E_buildingNumberSuffix>();
                }
                java.lang.Object j =obj;
                adxp_x002E_buildingNumberSuffix j1= (adxp_x002E_buildingNumberSuffix)__envelope.get(j,adxp_x002E_buildingNumberSuffix.class,false);
                this.buildingNumberSuffix.add(j1);            }
            return true;
        }
        if (info.name.equals("postBox"))
        {
            if(obj!=null)
            {
if(this.postBox==null)
                {
                    this.postBox = new java.util.ArrayList< adxp_x002E_postBox>();
                }
                java.lang.Object j =obj;
                adxp_x002E_postBox j1= (adxp_x002E_postBox)__envelope.get(j,adxp_x002E_postBox.class,false);
                this.postBox.add(j1);            }
            return true;
        }
        if (info.name.equals("precinct"))
        {
            if(obj!=null)
            {
if(this.precinct==null)
                {
                    this.precinct = new java.util.ArrayList< adxp_x002E_precinct>();
                }
                java.lang.Object j =obj;
                adxp_x002E_precinct j1= (adxp_x002E_precinct)__envelope.get(j,adxp_x002E_precinct.class,false);
                this.precinct.add(j1);            }
            return true;
        }
        if (info.name.equals("useablePeriod"))
        {
            if(obj!=null)
            {
if(this.useablePeriod==null)
                {
                    this.useablePeriod = new java.util.ArrayList< SXCM_TS>();
                }
                java.lang.Object j =obj;
                SXCM_TS j1= (SXCM_TS)__envelope.get(j,SXCM_TS.class,false);
                this.useablePeriod.add(j1);            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.delimiter.size())
        {
                java.lang.Object delimiter = this.delimiter.get(propertyIndex-(count+0));
                return delimiter!=null?delimiter:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size())
        {
                java.lang.Object country = this.country.get(propertyIndex-(count+0+this.delimiter.size()));
                return country!=null?country:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size())
        {
                java.lang.Object state = this.state.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()));
                return state!=null?state:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size())
        {
                java.lang.Object county = this.county.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()));
                return county!=null?county:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size())
        {
                java.lang.Object city = this.city.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()));
                return city!=null?city:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size())
        {
                java.lang.Object postalCode = this.postalCode.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()));
                return postalCode!=null?postalCode:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size())
        {
                java.lang.Object streetAddressLine = this.streetAddressLine.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()));
                return streetAddressLine!=null?streetAddressLine:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size())
        {
                java.lang.Object houseNumber = this.houseNumber.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()));
                return houseNumber!=null?houseNumber:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size())
        {
                java.lang.Object houseNumberNumeric = this.houseNumberNumeric.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()));
                return houseNumberNumeric!=null?houseNumberNumeric:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size())
        {
                java.lang.Object direction = this.direction.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()));
                return direction!=null?direction:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size())
        {
                java.lang.Object streetName = this.streetName.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()));
                return streetName!=null?streetName:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size())
        {
                java.lang.Object streetNameBase = this.streetNameBase.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()));
                return streetNameBase!=null?streetNameBase:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size())
        {
                java.lang.Object streetNameType = this.streetNameType.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()));
                return streetNameType!=null?streetNameType:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size())
        {
                java.lang.Object additionalLocator = this.additionalLocator.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()));
                return additionalLocator!=null?additionalLocator:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size())
        {
                java.lang.Object unitID = this.unitID.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()));
                return unitID!=null?unitID:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size())
        {
                java.lang.Object unitType = this.unitType.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()));
                return unitType!=null?unitType:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size())
        {
                java.lang.Object careOf = this.careOf.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()));
                return careOf!=null?careOf:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size())
        {
                java.lang.Object censusTract = this.censusTract.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()));
                return censusTract!=null?censusTract:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size())
        {
                java.lang.Object deliveryAddressLine = this.deliveryAddressLine.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()));
                return deliveryAddressLine!=null?deliveryAddressLine:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size())
        {
                java.lang.Object deliveryInstallationType = this.deliveryInstallationType.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()));
                return deliveryInstallationType!=null?deliveryInstallationType:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size())
        {
                java.lang.Object deliveryInstallationArea = this.deliveryInstallationArea.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()));
                return deliveryInstallationArea!=null?deliveryInstallationArea:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size())
        {
                java.lang.Object deliveryInstallationQualifier = this.deliveryInstallationQualifier.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()));
                return deliveryInstallationQualifier!=null?deliveryInstallationQualifier:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size())
        {
                java.lang.Object deliveryMode = this.deliveryMode.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()));
                return deliveryMode!=null?deliveryMode:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size())
        {
                java.lang.Object deliveryModeIdentifier = this.deliveryModeIdentifier.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()));
                return deliveryModeIdentifier!=null?deliveryModeIdentifier:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size())
        {
                java.lang.Object buildingNumberSuffix = this.buildingNumberSuffix.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()));
                return buildingNumberSuffix!=null?buildingNumberSuffix:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size())
        {
                java.lang.Object postBox = this.postBox.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()));
                return postBox!=null?postBox:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size())
        {
                java.lang.Object precinct = this.precinct.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()));
                return precinct!=null?precinct:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size()+this.useablePeriod.size())
        {
                java.lang.Object useablePeriod = this.useablePeriod.get(propertyIndex-(count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size()));
                return useablePeriod!=null?useablePeriod:SoapPrimitive.NullNilElement;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+0+delimiter.size()+country.size()+state.size()+county.size()+city.size()+postalCode.size()+streetAddressLine.size()+houseNumber.size()+houseNumberNumeric.size()+direction.size()+streetName.size()+streetNameBase.size()+streetNameType.size()+additionalLocator.size()+unitID.size()+unitType.size()+careOf.size()+censusTract.size()+deliveryAddressLine.size()+deliveryInstallationType.size()+deliveryInstallationArea.size()+deliveryInstallationQualifier.size()+deliveryMode.size()+deliveryModeIdentifier.size()+buildingNumberSuffix.size()+postBox.size()+precinct.size()+useablePeriod.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.delimiter.size())
        {
            info.type = adxp_x002E_delimiter.class;
            info.name = "delimiter";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size())
        {
            info.type = adxp_x002E_country.class;
            info.name = "country";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size())
        {
            info.type = adxp_x002E_state.class;
            info.name = "state";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size())
        {
            info.type = adxp_x002E_county.class;
            info.name = "county";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size())
        {
            info.type = adxp_x002E_city.class;
            info.name = "city";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size())
        {
            info.type = adxp_x002E_postalCode.class;
            info.name = "postalCode";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size())
        {
            info.type = adxp_x002E_streetAddressLine.class;
            info.name = "streetAddressLine";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size())
        {
            info.type = adxp_x002E_houseNumber.class;
            info.name = "houseNumber";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size())
        {
            info.type = adxp_x002E_houseNumberNumeric.class;
            info.name = "houseNumberNumeric";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size())
        {
            info.type = adxp_x002E_direction.class;
            info.name = "direction";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size())
        {
            info.type = adxp_x002E_streetName.class;
            info.name = "streetName";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size())
        {
            info.type = adxp_x002E_streetNameBase.class;
            info.name = "streetNameBase";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size())
        {
            info.type = adxp_x002E_streetNameType.class;
            info.name = "streetNameType";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size())
        {
            info.type = adxp_x002E_additionalLocator.class;
            info.name = "additionalLocator";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size())
        {
            info.type = adxp_x002E_unitID.class;
            info.name = "unitID";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size())
        {
            info.type = adxp_x002E_unitType.class;
            info.name = "unitType";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size())
        {
            info.type = adxp_x002E_careOf.class;
            info.name = "careOf";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size())
        {
            info.type = adxp_x002E_censusTract.class;
            info.name = "censusTract";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size())
        {
            info.type = adxp_x002E_deliveryAddressLine.class;
            info.name = "deliveryAddressLine";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size())
        {
            info.type = adxp_x002E_deliveryInstallationType.class;
            info.name = "deliveryInstallationType";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size())
        {
            info.type = adxp_x002E_deliveryInstallationArea.class;
            info.name = "deliveryInstallationArea";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size())
        {
            info.type = adxp_x002E_deliveryInstallationQualifier.class;
            info.name = "deliveryInstallationQualifier";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size())
        {
            info.type = adxp_x002E_deliveryMode.class;
            info.name = "deliveryMode";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size())
        {
            info.type = adxp_x002E_deliveryModeIdentifier.class;
            info.name = "deliveryModeIdentifier";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size())
        {
            info.type = adxp_x002E_buildingNumberSuffix.class;
            info.name = "buildingNumberSuffix";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size())
        {
            info.type = adxp_x002E_postBox.class;
            info.name = "postBox";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size())
        {
            info.type = adxp_x002E_precinct.class;
            info.name = "precinct";
            info.namespace= "urn:hl7-org:v3";
        }
        if(propertyIndex>=count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size() && propertyIndex < count+0+this.delimiter.size()+this.country.size()+this.state.size()+this.county.size()+this.city.size()+this.postalCode.size()+this.streetAddressLine.size()+this.houseNumber.size()+this.houseNumberNumeric.size()+this.direction.size()+this.streetName.size()+this.streetNameBase.size()+this.streetNameType.size()+this.additionalLocator.size()+this.unitID.size()+this.unitType.size()+this.careOf.size()+this.censusTract.size()+this.deliveryAddressLine.size()+this.deliveryInstallationType.size()+this.deliveryInstallationArea.size()+this.deliveryInstallationQualifier.size()+this.deliveryMode.size()+this.deliveryModeIdentifier.size()+this.buildingNumberSuffix.size()+this.postBox.size()+this.precinct.size()+this.useablePeriod.size())
        {
            info.type = SXCM_TS.class;
            info.name = "useablePeriod";
            info.namespace= "urn:hl7-org:v3";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }


    @Override
    public int getAttributeCount() {
        return super.getAttributeCount() + 2;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        int count=super.getAttributeCount();
        if(index==count+0)
                {
                info.name = "use";
                info.namespace= "";
                if(this.use!=null)
                {
                    info.setValue(this.use);
                }
            
                }if(index==count+1)
                {
                info.name = "isNotOrdered";
                info.namespace= "";
                if(this.isNotOrdered!=null)
                {
                    info.setValue(this.isNotOrdered);
                }
            
                }    if(index < count)
    {
        super.getAttributeInfo(index, info);
    }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
