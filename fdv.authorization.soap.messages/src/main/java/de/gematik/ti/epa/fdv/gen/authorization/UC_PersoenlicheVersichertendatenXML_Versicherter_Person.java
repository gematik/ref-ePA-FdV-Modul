package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class UC_PersoenlicheVersichertendatenXML_Versicherter_Person extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
	/**
	* Gibt das Geburtsdatum des Versicherten an.
	* Hinweis: Das Geburtsjahr MUSS immer gefuellt werden. Bei Inlaendern ist immer ein logisch richtiges Geburtsdatum anzugeben. Bei Auslaendern gilt folgendes: Zumindest das Geburtsjahr ist immer anzugeben. Im Geburtstag oder im Geburtstag und im Geburtsmonat ist bei Ausländern „00“ bzw. „0000“ zulässig, wenn der Geburtstag und der Geburtsmonat nicht zu ermitteln sind.
	*/
    public String Geburtsdatum;
    
	/**
	* Gibt den Vornamen der Person an.
	* Alle Vornamen der Person (max. 5) werden eingegeben. Mehrere Vornamen werden durch Leerzzeichen oder Bindestrich getrennt.
	*/
    public String Vorname;
    
	/**
	* Gibt den Nachnamen der Person an.
	*/
    public String Nachname;
    
	/**
	* Gibt das Geschlecht des Versicherten an. ("M" = maennlich, "W" = weiblich, "X" = unbestimmt, "D" = divers).
	*/
    public String Geschlecht;
    
	/**
	* Gibt die Vorsatzwoerter der Person an.
	* Mehrere Vorsatzwörter werden durch Leerzeichen getrennt angegeben.
	* Anlage 6 (Tabelle der gültigen Vorsatzworte) zur DEÜV, siehe www.gkv-datenaustausch.de/arbeitgeber/deuev/gemeinsame_rundschreiben/gemeinsame_rundschreiben.jsp
	*/
    public String Vorsatzwort;
    
	/**
	* Gibt die Namenszusaetze der Person an, z. B.: Freiherr
	* Mehrere Namenzusätze werden durch Leerzeichen getrennt angegeben.
	* Anlage 7 (Tabelle der gültigen Namenszusätze) zur DEÜV, siehe www.gkv-datenaustausch.de/arbeitgeber/deuev/gemeinsame_rundschreiben/gemeinsame_rundschreiben.jsp
	*/
    public String Namenszusatz;
    
	/**
	* Gibt die akademischen Grade der Person an.
	* Mehrere Titel werden durch Leerzeichen getrennt angegeben.
	*/
    public String Titel;
    
    public UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse PostfachAdresse;
    
    public UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse StrassenAdresse;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("Geburtsdatum"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Geburtsdatum = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Geburtsdatum = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Vorname"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Vorname = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Vorname = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Nachname"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Nachname = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Nachname = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Geschlecht"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Geschlecht = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Geschlecht = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Vorsatzwort"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Vorsatzwort = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Vorsatzwort = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Namenszusatz"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Namenszusatz = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Namenszusatz = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Titel"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Titel = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Titel = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("PostfachAdresse"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PostfachAdresse = (UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse)__envelope.get(j,UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse.class,false);
            }
            return true;
        }
        if (info.name.equals("StrassenAdresse"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.StrassenAdresse = (UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse)__envelope.get(j,UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse.class,false);
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return Geburtsdatum;
        }
        if(propertyIndex==1)
        {
            return Vorname;
        }
        if(propertyIndex==2)
        {
            return Nachname;
        }
        if(propertyIndex==3)
        {
            return Geschlecht;
        }
        if(propertyIndex==4)
        {
            return this.Vorsatzwort!=null?this.Vorsatzwort:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.Namenszusatz!=null?this.Namenszusatz:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.Titel!=null?this.Titel:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.PostfachAdresse!=null?this.PostfachAdresse:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.StrassenAdresse!=null?this.StrassenAdresse:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Geburtsdatum";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Vorname";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Nachname";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Geschlecht";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Vorsatzwort";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Namenszusatz";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Titel";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==7)
        {
            info.type = UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse.class;
            info.name = "PostfachAdresse";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==8)
        {
            info.type = UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse.class;
            info.name = "StrassenAdresse";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
