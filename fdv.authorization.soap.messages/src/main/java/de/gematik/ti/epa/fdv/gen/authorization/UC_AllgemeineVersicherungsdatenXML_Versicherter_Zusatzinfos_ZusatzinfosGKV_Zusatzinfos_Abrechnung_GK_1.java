package de.gematik.ti.epa.fdv.gen.authorization;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK_1 extends AttributeContainer implements KvmSerializable,java.io.Serializable
{
    
	/**
	* Gibt an, ob der Kostentraeger den Nachweis der Inanspruchnahme von Leistungen der Abrechnungsart Kostenerstattung auf der eGK speichert. 
	* vorhanden = Nachweis wird genutzt; 
	* nichtvorhanden = Nachweis wird nicht genutzt
	*/
    public UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK Kostenerstattung;
    
	/**
	* Das Kennzeichen WOP ist gemaess § 2 Abs. 2 der Vereinbarung zur Festsetzung des Durchschnittsbetrages gemaess Artikel 2 § 2 Abs. 2 des Gesetzes zur Einfuehrung des Wohnortprinzips bei Honorarvereinbarungen fuer Aerzte und Zahnaerzte und zur Krankenversichertenkarte gemaess § 291 Abs. 2 Fuenftes Sozialgesetzbuch (SGB V) erforderlich.
	* 01 = Schleswig-Holstein
	* 02 = Hamburg
	* 03 = Bremen
	* 17 = Niedersachsen
	* 20 = Westfalen-Lippe
	* 38 = Nordrhein
	* 46 = Hessen
	* 51 = Rheinland-Pfalz
	* 52 = Baden-Württemberg
	* 71 = Bayerns
	* 72 = Berlin
	* 73 = Saarland
	* 78 = Mecklenburg-Vorpommern
	* 83 = Brandenburg
	* 88 = Sachsen-Anhalt
	* 93 = Thüringen
	* 98 = Sachsen
	* Gemäß Anlage 21 BMV-Ä und EKV.
	*/
    public String WOP;
        
    private transient java.lang.Object __source;    
    

    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }



    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("Kostenerstattung"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Kostenerstattung = (UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK)__envelope.get(j,UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK.class,false);
            }
            return true;
        }
        if (info.name.equals("WOP"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.WOP = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.WOP = (String)obj;
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.Kostenerstattung!=null?this.Kostenerstattung:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return WOP;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 2;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK.class;
            info.name = "Kostenerstattung";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "WOP";
            info.namespace= "http://ws.gematik.de/fa/vsdm/vsd/v5.2";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
