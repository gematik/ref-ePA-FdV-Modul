package de.gematik.ti.epa.fdv.gen.authorization;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------






public class Enums
{

    public enum DecisionType
    {
        
        Permit(0),
        
        Deny(1),
        
        Indeterminate(2);
        
        private int code;
        
        DecisionType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DecisionType fromString(String str)
        {
            if (str.equals("Permit"))
                return Permit;
            if (str.equals("Deny"))
                return Deny;
            if (str.equals("Indeterminate"))
                return Indeterminate;
		    return null;
        }
    }

    public enum EventIdentificationType_EventActionCode
    {
        
        C(0),
        
        R(1),
        
        U(2),
        
        D(3),
        
		/**
		* Execute
		*/
        E(4);
        
        private int code;
        
        EventIdentificationType_EventActionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EventIdentificationType_EventActionCode fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("R"))
                return R;
            if (str.equals("U"))
                return U;
            if (str.equals("D"))
                return D;
            if (str.equals("E"))
                return E;
		    return null;
        }
    }

    public enum EventIdentificationType_EventOutcomeIndicator
    {
        
        _0(0,"0"),
        
        _4(1,"4"),
        
        _8(2,"8"),
        
        _12(3,"12");
        
        private int code;
        private java.lang.String xmlValue;
        
        EventIdentificationType_EventOutcomeIndicator(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EventIdentificationType_EventOutcomeIndicator fromString(String str)
        {
            if (str.equals("0"))
                return _0;
            if (str.equals("4"))
                return _4;
            if (str.equals("8"))
                return _8;
            if (str.equals("12"))
                return _12;
		    return null;
        }
    }

    public enum ActiveParticipantType_NetworkAccessPointTypeCode
    {
        
        _1(0,"1"),
        
        _2(1,"2"),
        
        _3(2,"3");
        
        private int code;
        private java.lang.String xmlValue;
        
        ActiveParticipantType_NetworkAccessPointTypeCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ActiveParticipantType_NetworkAccessPointTypeCode fromString(String str)
        {
            if (str.equals("1"))
                return _1;
            if (str.equals("2"))
                return _2;
            if (str.equals("3"))
                return _3;
		    return null;
        }
    }

    public enum ParticipantObjectIdentificationType_ParticipantObjectTypeCode
    {
        
        _1(0,"1"),
        
        _2(1,"2"),
        
        _3(2,"3"),
        
        _4(3,"4");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParticipantObjectIdentificationType_ParticipantObjectTypeCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParticipantObjectIdentificationType_ParticipantObjectTypeCode fromString(String str)
        {
            if (str.equals("1"))
                return _1;
            if (str.equals("2"))
                return _2;
            if (str.equals("3"))
                return _3;
            if (str.equals("4"))
                return _4;
		    return null;
        }
    }

    public enum ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole
    {
        
        _1(0,"1"),
        
        _2(1,"2"),
        
        _3(2,"3"),
        
        _4(3,"4"),
        
        _5(4,"5"),
        
        _6(5,"6"),
        
        _7(6,"7"),
        
        _8(7,"8"),
        
        _9(8,"9"),
        
        _10(9,"10"),
        
        _11(10,"11"),
        
        _12(11,"12"),
        
        _13(12,"13"),
        
        _14(13,"14"),
        
        _15(14,"15"),
        
        _16(15,"16"),
        
        _17(16,"17"),
        
        _18(17,"18"),
        
        _19(18,"19"),
        
        _20(19,"20"),
        
        _21(20,"21"),
        
        _22(21,"22"),
        
        _23(22,"23"),
        
        _24(23,"24");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole fromString(String str)
        {
            if (str.equals("1"))
                return _1;
            if (str.equals("2"))
                return _2;
            if (str.equals("3"))
                return _3;
            if (str.equals("4"))
                return _4;
            if (str.equals("5"))
                return _5;
            if (str.equals("6"))
                return _6;
            if (str.equals("7"))
                return _7;
            if (str.equals("8"))
                return _8;
            if (str.equals("9"))
                return _9;
            if (str.equals("10"))
                return _10;
            if (str.equals("11"))
                return _11;
            if (str.equals("12"))
                return _12;
            if (str.equals("13"))
                return _13;
            if (str.equals("14"))
                return _14;
            if (str.equals("15"))
                return _15;
            if (str.equals("16"))
                return _16;
            if (str.equals("17"))
                return _17;
            if (str.equals("18"))
                return _18;
            if (str.equals("19"))
                return _19;
            if (str.equals("20"))
                return _20;
            if (str.equals("21"))
                return _21;
            if (str.equals("22"))
                return _22;
            if (str.equals("23"))
                return _23;
            if (str.equals("24"))
                return _24;
		    return null;
        }
    }

    public enum ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle
    {
        
        _1(0,"1"),
        
        _2(1,"2"),
        
        _3(2,"3"),
        
        _4(3,"4"),
        
        _5(4,"5"),
        
        _6(5,"6"),
        
        _7(6,"7"),
        
        _8(7,"8"),
        
        _9(8,"9"),
        
        _10(9,"10"),
        
        _11(10,"11"),
        
        _12(11,"12"),
        
        _13(12,"13"),
        
        _14(13,"14"),
        
        _15(14,"15");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle fromString(String str)
        {
            if (str.equals("1"))
                return _1;
            if (str.equals("2"))
                return _2;
            if (str.equals("3"))
                return _3;
            if (str.equals("4"))
                return _4;
            if (str.equals("5"))
                return _5;
            if (str.equals("6"))
                return _6;
            if (str.equals("7"))
                return _7;
            if (str.equals("8"))
                return _8;
            if (str.equals("9"))
                return _9;
            if (str.equals("10"))
                return _10;
            if (str.equals("11"))
                return _11;
            if (str.equals("12"))
                return _12;
            if (str.equals("13"))
                return _13;
            if (str.equals("14"))
                return _14;
            if (str.equals("15"))
                return _15;
		    return null;
        }
    }

	/**
	* vocSet: T155 (C-0-T155-cpt)
	*/
    public enum AcknowledgementCondition
    {
        
        AL(0),
        
        ER(1),
        
        NE(2);
        
        private int code;
        
        AcknowledgementCondition(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AcknowledgementCondition fromString(String str)
        {
            if (str.equals("AL"))
                return AL;
            if (str.equals("ER"))
                return ER;
            if (str.equals("NE"))
                return NE;
		    return null;
        }
    }

	/**
	* abstDomain: A19640 (C-0-T19638-A19640-cpt)
	*/
    public enum AcknowledgementDetailNotSupportedCode
    {
        
        NS260(0),
        
        NS261(1),
        
        NS200(2),
        
        NS250(3),
        
        NS202(4),
        
        NS203(5);
        
        private int code;
        
        AcknowledgementDetailNotSupportedCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AcknowledgementDetailNotSupportedCode fromString(String str)
        {
            if (str.equals("NS260"))
                return NS260;
            if (str.equals("NS261"))
                return NS261;
            if (str.equals("NS200"))
                return NS200;
            if (str.equals("NS250"))
                return NS250;
            if (str.equals("NS202"))
                return NS202;
            if (str.equals("NS203"))
                return NS203;
		    return null;
        }
    }

	/**
	* specDomain: S22075 (C-0-T19638-S22075-cpt)
	*/
    public enum AcknowledgementDetailSyntaxErrorCode
    {
        
        SYN(0),
        
        SYN102(1),
        
        SYN104(2),
        
        SYN110(3),
        
        SYN112(4),
        
        SYN100(5),
        
        SYN101(6),
        
        SYN103(7);
        
        private int code;
        
        AcknowledgementDetailSyntaxErrorCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AcknowledgementDetailSyntaxErrorCode fromString(String str)
        {
            if (str.equals("SYN"))
                return SYN;
            if (str.equals("SYN102"))
                return SYN102;
            if (str.equals("SYN104"))
                return SYN104;
            if (str.equals("SYN110"))
                return SYN110;
            if (str.equals("SYN112"))
                return SYN112;
            if (str.equals("SYN100"))
                return SYN100;
            if (str.equals("SYN101"))
                return SYN101;
            if (str.equals("SYN103"))
                return SYN103;
		    return null;
        }
    }

	/**
	* vocSet: T19358 (C-0-T19358-cpt)
	*/
    public enum AcknowledgementDetailType
    {
        
        E(0),
        
        I(1),
        
        W(2);
        
        private int code;
        
        AcknowledgementDetailType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AcknowledgementDetailType fromString(String str)
        {
            if (str.equals("E"))
                return E;
            if (str.equals("I"))
                return I;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* vocSet: T8 (C-0-T8-cpt)
	*/
    public enum AcknowledgementType
    {
        
        CA(0),
        
        CE(1),
        
        CR(2),
        
        AA(3),
        
        AE(4),
        
        AR(5);
        
        private int code;
        
        AcknowledgementType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AcknowledgementType fromString(String str)
        {
            if (str.equals("CA"))
                return CA;
            if (str.equals("CE"))
                return CE;
            if (str.equals("CR"))
                return CR;
            if (str.equals("AA"))
                return AA;
            if (str.equals("AE"))
                return AE;
            if (str.equals("AR"))
                return AR;
		    return null;
        }
    }

	/**
	* specDomain: S18964 (C-0-T11527-S13856-S18964-cpt)
	*/
    public enum ActClassCareProvision
    {
        
        PCPR(0),
        
        ENC(1);
        
        private int code;
        
        ActClassCareProvision(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassCareProvision fromString(String str)
        {
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("ENC"))
                return ENC;
		    return null;
        }
    }

	/**
	* specDomain: S13948 (C-0-T11527-S13856-A19445-S20083-S18938-S13948-cpt)
	*/
    public enum ActClassClinicalDocument
    {
        
        DOCCLIN(0),
        
        CDALVLONE(1);
        
        private int code;
        
        ActClassClinicalDocument(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassClinicalDocument fromString(String str)
        {
            if (str.equals("DOCCLIN"))
                return DOCCLIN;
            if (str.equals("CDALVLONE"))
                return CDALVLONE;
		    return null;
        }
    }

	/**
	* specDomain: S20087 (C-0-T11527-S13856-A19445-S20087-cpt)
	*/
    public enum ActClassEntry
    {
        
        ENTRY(0),
        
        CLUSTER(1),
        
        BATTERY(2);
        
        private int code;
        
        ActClassEntry(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassEntry fromString(String str)
        {
            if (str.equals("ENTRY"))
                return ENTRY;
            if (str.equals("CLUSTER"))
                return CLUSTER;
            if (str.equals("BATTERY"))
                return BATTERY;
		    return null;
        }
    }

	/**
	* specDomain: S20080 (C-0-T11527-S13856-A19445-S20080-cpt)
	*/
    public enum ActClassExtract
    {
        
        EXTRACT(0),
        
        EHR(1);
        
        private int code;
        
        ActClassExtract(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassExtract fromString(String str)
        {
            if (str.equals("EXTRACT"))
                return EXTRACT;
            if (str.equals("EHR"))
                return EHR;
		    return null;
        }
    }

	/**
	* specDomain: S20084 (C-0-T11527-S13856-A19445-S20084-cpt)
	*/
    public enum ActClassOrganizer
    {
        
        ORGANIZER(0),
        
        CATEGORY(1),
        
        DOCBODY(2),
        
        DOCSECT(3),
        
        TOPIC(4);
        
        private int code;
        
        ActClassOrganizer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassOrganizer fromString(String str)
        {
            if (str.equals("ORGANIZER"))
                return ORGANIZER;
            if (str.equals("CATEGORY"))
                return CATEGORY;
            if (str.equals("DOCBODY"))
                return DOCBODY;
            if (str.equals("DOCSECT"))
                return DOCSECT;
            if (str.equals("TOPIC"))
                return TOPIC;
		    return null;
        }
    }

	/**
	* specDomain: S14003 (C-0-T11527-S13856-S14002-S14003-cpt)
	*/
    public enum ActClassFinancialContract
    {
        
        FCNTRCT(0),
        
        COV(1);
        
        private int code;
        
        ActClassFinancialContract(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassFinancialContract fromString(String str)
        {
            if (str.equals("FCNTRCT"))
                return FCNTRCT;
            if (str.equals("COV"))
                return COV;
		    return null;
        }
    }

	/**
	* specDomain: S11534 (C-0-T11527-S13856-S11534-cpt)
	*/
    public enum ActClassControlAct
    {
        
        CACT(0),
        
        ACTN(1),
        
        INFO(2),
        
        STC(3);
        
        private int code;
        
        ActClassControlAct(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassControlAct fromString(String str)
        {
            if (str.equals("CACT"))
                return CACT;
            if (str.equals("ACTN"))
                return ACTN;
            if (str.equals("INFO"))
                return INFO;
            if (str.equals("STC"))
                return STC;
		    return null;
        }
    }

	/**
	* specDomain: S21980 (C-0-T11527-S13856-S21980-cpt)
	*/
    public enum ActClassExposure
    {
        
        EXPOS(0),
        
        AEXPOS(1),
        
        TEXPOS(2);
        
        private int code;
        
        ActClassExposure(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassExposure fromString(String str)
        {
            if (str.equals("EXPOS"))
                return EXPOS;
            if (str.equals("AEXPOS"))
                return AEXPOS;
            if (str.equals("TEXPOS"))
                return TEXPOS;
		    return null;
        }
    }

	/**
	* specDomain: S11530 (C-0-T11527-S13856-S11529-S18862-S11530-cpt)
	*/
    public enum ActClassPublicHealthCase
    {
        
        CASE(0),
        
        OUTB(1);
        
        private int code;
        
        ActClassPublicHealthCase(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassPublicHealthCase fromString(String str)
        {
            if (str.equals("CASE"))
                return CASE;
            if (str.equals("OUTB"))
                return OUTB;
		    return null;
        }
    }

	/**
	* specDomain: S21997 (C-0-T11527-S13856-S11529-S21997-cpt)
	*/
    public enum ActClassGenomicObservation
    {
        
        GEN(0),
        
        SEQ(1),
        
        SEQVAR(2),
        
        DETPOL(3),
        
        EXP(4),
        
        LOC(5),
        
        PHN(6),
        
        POL(7);
        
        private int code;
        
        ActClassGenomicObservation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassGenomicObservation fromString(String str)
        {
            if (str.equals("GEN"))
                return GEN;
            if (str.equals("SEQ"))
                return SEQ;
            if (str.equals("SEQVAR"))
                return SEQVAR;
            if (str.equals("DETPOL"))
                return DETPOL;
            if (str.equals("EXP"))
                return EXP;
            if (str.equals("LOC"))
                return LOC;
            if (str.equals("PHN"))
                return PHN;
            if (str.equals("POL"))
                return POL;
		    return null;
        }
    }

	/**
	* specDomain: S18875 (C-0-T11527-S13856-S11529-S18875-cpt)
	*/
    public enum ActClassObservationSeries
    {
        
        OBSSER(0),
        
        OBSCOR(1);
        
        private int code;
        
        ActClassObservationSeries(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassObservationSeries fromString(String str)
        {
            if (str.equals("OBSSER"))
                return OBSSER;
            if (str.equals("OBSCOR"))
                return OBSCOR;
		    return null;
        }
    }

	/**
	* specDomain: S21646 (C-0-T11527-S13856-S11529-S21646-cpt)
	*/
    public enum ActClassPosition
    {
        
        POS(0),
        
        POSACC(1),
        
        POSCOORD(2);
        
        private int code;
        
        ActClassPosition(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassPosition fromString(String str)
        {
            if (str.equals("POS"))
                return POS;
            if (str.equals("POSACC"))
                return POSACC;
            if (str.equals("POSCOORD"))
                return POSCOORD;
		    return null;
        }
    }

	/**
	* abstDomain: A17893 (C-0-T11527-S13856-S11529-A17893-cpt)
	*/
    public enum ActClassROI
    {
        
        ROIBND(0),
        
        ROIOVL(1);
        
        private int code;
        
        ActClassROI(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassROI fromString(String str)
        {
            if (str.equals("ROIBND"))
                return ROIBND;
            if (str.equals("ROIOVL"))
                return ROIOVL;
		    return null;
        }
    }

	/**
	* specDomain: S21935 (C-0-T11527-S13856-S11529-A19796-A19798-S21935-cpt)
	*/
    public enum ActClassSupine
    {
        
        SUP(0),
        
        RTRD(1),
        
        TRD(2);
        
        private int code;
        
        ActClassSupine(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassSupine fromString(String str)
        {
            if (str.equals("SUP"))
                return SUP;
            if (str.equals("RTRD"))
                return RTRD;
            if (str.equals("TRD"))
                return TRD;
		    return null;
        }
    }

	/**
	* specDomain: S21981 (C-0-T11527-S13856-S21981-cpt)
	*/
    public enum ActClassPolicy
    {
        
        POLICY(0),
        
        JURISPOL(1),
        
        ORGPOL(2),
        
        SCOPOL(3),
        
        STDPOL(4);
        
        private int code;
        
        ActClassPolicy(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassPolicy fromString(String str)
        {
            if (str.equals("POLICY"))
                return POLICY;
            if (str.equals("JURISPOL"))
                return JURISPOL;
            if (str.equals("ORGPOL"))
                return ORGPOL;
            if (str.equals("SCOPOL"))
                return SCOPOL;
            if (str.equals("STDPOL"))
                return STDPOL;
		    return null;
        }
    }

	/**
	* specDomain: S11532 (C-0-T11527-S13856-S11532-cpt)
	*/
    public enum ActClassProcedure
    {
        
        PROC(0),
        
        SPECCOLLECT(1);
        
        private int code;
        
        ActClassProcedure(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassProcedure fromString(String str)
        {
            if (str.equals("PROC"))
                return PROC;
            if (str.equals("SPECCOLLECT"))
                return SPECCOLLECT;
		    return null;
        }
    }

	/**
	* specDomain: S11535 (C-0-T11527-S13856-S11535-cpt)
	*/
    public enum ActClassSupply
    {
        
        SPLY(0),
        
        DIET(1);
        
        private int code;
        
        ActClassSupply(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActClassSupply fromString(String str)
        {
            if (str.equals("SPLY"))
                return SPLY;
            if (str.equals("DIET"))
                return DIET;
		    return null;
        }
    }

	/**
	* abstDomain: A19887 (C-0-T11527-A19887-cpt)
	*/
    public enum x_ActClassCareProvisionEncounter
    {
        
        PCPR(0),
        
        ENC(1);
        
        private int code;
        
        x_ActClassCareProvisionEncounter(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActClassCareProvisionEncounter fromString(String str)
        {
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("ENC"))
                return ENC;
		    return null;
        }
    }

	/**
	* abstDomain: A19888 (C-0-T11527-A19888-cpt)
	*/
    public enum x_ActClassCareProvisionObservation
    {
        
        PCPR(0),
        
        OBS(1);
        
        private int code;
        
        x_ActClassCareProvisionObservation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActClassCareProvisionObservation fromString(String str)
        {
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("OBS"))
                return OBS;
		    return null;
        }
    }

	/**
	* abstDomain: A19889 (C-0-T11527-A19889-cpt)
	*/
    public enum x_ActClassCareProvisionProcedure
    {
        
        PCPR(0),
        
        PROC(1);
        
        private int code;
        
        x_ActClassCareProvisionProcedure(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActClassCareProvisionProcedure fromString(String str)
        {
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("PROC"))
                return PROC;
		    return null;
        }
    }

	/**
	* abstDomain: A19599 (C-0-T11527-A19599-cpt)
	*/
    public enum x_ActClassDocumentEntryAct
    {
        
        ACCM(0),
        
        ACT(1),
        
        PCPR(2),
        
        CTTEVENT(3),
        
        CONS(4),
        
        INC(5),
        
        INFRM(6),
        
        REG(7),
        
        SPCTRT(8),
        
        TRNS(9);
        
        private int code;
        
        x_ActClassDocumentEntryAct(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActClassDocumentEntryAct fromString(String str)
        {
            if (str.equals("ACCM"))
                return ACCM;
            if (str.equals("ACT"))
                return ACT;
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("CTTEVENT"))
                return CTTEVENT;
            if (str.equals("CONS"))
                return CONS;
            if (str.equals("INC"))
                return INC;
            if (str.equals("INFRM"))
                return INFRM;
            if (str.equals("REG"))
                return REG;
            if (str.equals("SPCTRT"))
                return SPCTRT;
            if (str.equals("TRNS"))
                return TRNS;
		    return null;
        }
    }

	/**
	* abstDomain: A19598 (C-0-T11527-A19598-cpt)
	*/
    public enum x_ActClassDocumentEntryOrganizer
    {
        
        CLUSTER(0),
        
        BATTERY(1);
        
        private int code;
        
        x_ActClassDocumentEntryOrganizer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActClassDocumentEntryOrganizer fromString(String str)
        {
            if (str.equals("CLUSTER"))
                return CLUSTER;
            if (str.equals("BATTERY"))
                return BATTERY;
		    return null;
        }
    }

	/**
	* abstDomain: A19822 (C-0-T11527-A19822-cpt)
	*/
    public enum x_ActOrderableOrBillable
    {
        
        ACCM(0),
        
        PCPR(1),
        
        ENC(2),
        
        SBADM(3),
        
        TRNS(4);
        
        private int code;
        
        x_ActOrderableOrBillable(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActOrderableOrBillable fromString(String str)
        {
            if (str.equals("ACCM"))
                return ACCM;
            if (str.equals("PCPR"))
                return PCPR;
            if (str.equals("ENC"))
                return ENC;
            if (str.equals("SBADM"))
                return SBADM;
            if (str.equals("TRNS"))
                return TRNS;
		    return null;
        }
    }

	/**
	* abstDomain: A19657 (C-0-T11527-A19657-cpt)
	*/
    public enum x_LabProcessClassCodes
    {
        
        ACSN(0),
        
        CONTREG(1),
        
        PROC(2),
        
        SPCTRT(3),
        
        TRNS(4);
        
        private int code;
        
        x_LabProcessClassCodes(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_LabProcessClassCodes fromString(String str)
        {
            if (str.equals("ACSN"))
                return ACSN;
            if (str.equals("CONTREG"))
                return CONTREG;
            if (str.equals("PROC"))
                return PROC;
            if (str.equals("SPCTRT"))
                return SPCTRT;
            if (str.equals("TRNS"))
                return TRNS;
		    return null;
        }
    }

	/**
	* abstDomain: A19791 (C-0-T13953-A19789-A19790-A19791-cpt)
	*/
    public enum ActCredentialedCareProvisionPersonCode
    {
        
        CPGC(0),
        
        CAMC(1),
        
        CAIC(2),
        
        CACC(3),
        
        CAPC(4),
        
        CANC(5),
        
        CBGC(6),
        
        CCCC(7),
        
        CCGC(8),
        
        CMGC(9),
        
        CCPC(10),
        
        CCSC(11),
        
        CDEC(12),
        
        CDRC(13),
        
        CEMC(14),
        
        CFPC(15),
        
        CIMC(16),
        
        CNSC(17),
        
        CNEC(18),
        
        CNQC(19),
        
        CNMC(20),
        
        COGC(21),
        
        COMC(22),
        
        COPC(23),
        
        COSC(24),
        
        COTC(25),
        
        CPEC(26),
        
        CPRC(27),
        
        CPSC(28),
        
        CPYC(29),
        
        CPHC(30),
        
        CROC(31),
        
        CRPC(32),
        
        CSUC(33),
        
        CTSC(34),
        
        CURC(35),
        
        CVSC(36),
        
        LGPC(37);
        
        private int code;
        
        ActCredentialedCareProvisionPersonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActCredentialedCareProvisionPersonCode fromString(String str)
        {
            if (str.equals("CPGC"))
                return CPGC;
            if (str.equals("CAMC"))
                return CAMC;
            if (str.equals("CAIC"))
                return CAIC;
            if (str.equals("CACC"))
                return CACC;
            if (str.equals("CAPC"))
                return CAPC;
            if (str.equals("CANC"))
                return CANC;
            if (str.equals("CBGC"))
                return CBGC;
            if (str.equals("CCCC"))
                return CCCC;
            if (str.equals("CCGC"))
                return CCGC;
            if (str.equals("CMGC"))
                return CMGC;
            if (str.equals("CCPC"))
                return CCPC;
            if (str.equals("CCSC"))
                return CCSC;
            if (str.equals("CDEC"))
                return CDEC;
            if (str.equals("CDRC"))
                return CDRC;
            if (str.equals("CEMC"))
                return CEMC;
            if (str.equals("CFPC"))
                return CFPC;
            if (str.equals("CIMC"))
                return CIMC;
            if (str.equals("CNSC"))
                return CNSC;
            if (str.equals("CNEC"))
                return CNEC;
            if (str.equals("CNQC"))
                return CNQC;
            if (str.equals("CNMC"))
                return CNMC;
            if (str.equals("COGC"))
                return COGC;
            if (str.equals("COMC"))
                return COMC;
            if (str.equals("COPC"))
                return COPC;
            if (str.equals("COSC"))
                return COSC;
            if (str.equals("COTC"))
                return COTC;
            if (str.equals("CPEC"))
                return CPEC;
            if (str.equals("CPRC"))
                return CPRC;
            if (str.equals("CPSC"))
                return CPSC;
            if (str.equals("CPYC"))
                return CPYC;
            if (str.equals("CPHC"))
                return CPHC;
            if (str.equals("CROC"))
                return CROC;
            if (str.equals("CRPC"))
                return CRPC;
            if (str.equals("CSUC"))
                return CSUC;
            if (str.equals("CTSC"))
                return CTSC;
            if (str.equals("CURC"))
                return CURC;
            if (str.equals("CVSC"))
                return CVSC;
            if (str.equals("LGPC"))
                return LGPC;
		    return null;
        }
    }

	/**
	* abstDomain: A19792 (C-0-T13953-A19789-A19790-A19792-cpt)
	*/
    public enum ActCredentialedCareProvisionProgramCode
    {
        
        AAMC(0),
        
        AALC(1),
        
        ABHC(2),
        
        ACAC(3),
        
        AHOC(4),
        
        ACHC(5),
        
        ALTC(6),
        
        AOSC(7),
        
        CACS(8),
        
        CAMI(9),
        
        CAST(10),
        
        CBAR(11),
        
        CCAR(12),
        
        COPD(13),
        
        CCAD(14),
        
        CDEP(15),
        
        CDIA(16),
        
        CDGD(17),
        
        CEPI(18),
        
        CFEL(19),
        
        CHFC(20),
        
        CHRO(21),
        
        CHYP(22),
        
        CMIH(23),
        
        CMSC(24),
        
        CONC(25),
        
        CORT(26),
        
        COJR(27),
        
        CPAD(28),
        
        CPND(29),
        
        CPST(30),
        
        CSIC(31),
        
        CSLD(32),
        
        CSPT(33),
        
        CSDM(34),
        
        CTBU(35),
        
        CVDC(36),
        
        CWOH(37),
        
        CWMA(38);
        
        private int code;
        
        ActCredentialedCareProvisionProgramCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActCredentialedCareProvisionProgramCode fromString(String str)
        {
            if (str.equals("AAMC"))
                return AAMC;
            if (str.equals("AALC"))
                return AALC;
            if (str.equals("ABHC"))
                return ABHC;
            if (str.equals("ACAC"))
                return ACAC;
            if (str.equals("AHOC"))
                return AHOC;
            if (str.equals("ACHC"))
                return ACHC;
            if (str.equals("ALTC"))
                return ALTC;
            if (str.equals("AOSC"))
                return AOSC;
            if (str.equals("CACS"))
                return CACS;
            if (str.equals("CAMI"))
                return CAMI;
            if (str.equals("CAST"))
                return CAST;
            if (str.equals("CBAR"))
                return CBAR;
            if (str.equals("CCAR"))
                return CCAR;
            if (str.equals("COPD"))
                return COPD;
            if (str.equals("CCAD"))
                return CCAD;
            if (str.equals("CDEP"))
                return CDEP;
            if (str.equals("CDIA"))
                return CDIA;
            if (str.equals("CDGD"))
                return CDGD;
            if (str.equals("CEPI"))
                return CEPI;
            if (str.equals("CFEL"))
                return CFEL;
            if (str.equals("CHFC"))
                return CHFC;
            if (str.equals("CHRO"))
                return CHRO;
            if (str.equals("CHYP"))
                return CHYP;
            if (str.equals("CMIH"))
                return CMIH;
            if (str.equals("CMSC"))
                return CMSC;
            if (str.equals("CONC"))
                return CONC;
            if (str.equals("CORT"))
                return CORT;
            if (str.equals("COJR"))
                return COJR;
            if (str.equals("CPAD"))
                return CPAD;
            if (str.equals("CPND"))
                return CPND;
            if (str.equals("CPST"))
                return CPST;
            if (str.equals("CSIC"))
                return CSIC;
            if (str.equals("CSLD"))
                return CSLD;
            if (str.equals("CSPT"))
                return CSPT;
            if (str.equals("CSDM"))
                return CSDM;
            if (str.equals("CTBU"))
                return CTBU;
            if (str.equals("CVDC"))
                return CVDC;
            if (str.equals("CWOH"))
                return CWOH;
            if (str.equals("CWMA"))
                return CWMA;
		    return null;
        }
    }

	/**
	* specDomain: S22200 (C-0-T13953-A19897-S22200-cpt)
	*/
    public enum ActInformationAccess
    {
        
        INFA(0),
        
        INFASO(1),
        
        INFAO(2);
        
        private int code;
        
        ActInformationAccess(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInformationAccess fromString(String str)
        {
            if (str.equals("INFA"))
                return INFA;
            if (str.equals("INFASO"))
                return INFASO;
            if (str.equals("INFAO"))
                return INFAO;
		    return null;
        }
    }

	/**
	* specDomain: S22206 (C-0-T13953-A19897-S22206-cpt)
	*/
    public enum ActResearchInformationAccess
    {
        
        RESEARCH(0),
        
        RSDID(1),
        
        RSREID(2);
        
        private int code;
        
        ActResearchInformationAccess(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActResearchInformationAccess fromString(String str)
        {
            if (str.equals("RESEARCH"))
                return RESEARCH;
            if (str.equals("RSDID"))
                return RSDID;
            if (str.equals("RSREID"))
                return RSREID;
		    return null;
        }
    }

	/**
	* abstDomain: A19910 (C-0-T13953-A19910-cpt)
	*/
    public enum ActInformationAccessCode
    {
        
        ACADR(0),
        
        ACALLG(1),
        
        ACOBS(2),
        
        ACDEMO(3),
        
        ACIMMUN(4),
        
        ACLAB(5),
        
        ACMEDC(6),
        
        ACMED(7),
        
        ACPOLPRG(8),
        
        ACPSERV(9),
        
        ACPROV(10);
        
        private int code;
        
        ActInformationAccessCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInformationAccessCode fromString(String str)
        {
            if (str.equals("ACADR"))
                return ACADR;
            if (str.equals("ACALLG"))
                return ACALLG;
            if (str.equals("ACOBS"))
                return ACOBS;
            if (str.equals("ACDEMO"))
                return ACDEMO;
            if (str.equals("ACIMMUN"))
                return ACIMMUN;
            if (str.equals("ACLAB"))
                return ACLAB;
            if (str.equals("ACMEDC"))
                return ACMEDC;
            if (str.equals("ACMED"))
                return ACMED;
            if (str.equals("ACPOLPRG"))
                return ACPOLPRG;
            if (str.equals("ACPSERV"))
                return ACPSERV;
            if (str.equals("ACPROV"))
                return ACPROV;
		    return null;
        }
    }

	/**
	* abstDomain: A19752 (C-0-T13953-A19752-cpt)
	*/
    public enum ActInformationCategoryCode
    {
        
        ALLGCAT(0),
        
        COBSCAT(1),
        
        DEMOCAT(2),
        
        DICAT(3),
        
        IMMUCAT(4),
        
        LABCAT(5),
        
        MEDCCAT(6),
        
        RXCAT(7),
        
        PSVCCAT(8);
        
        private int code;
        
        ActInformationCategoryCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInformationCategoryCode fromString(String str)
        {
            if (str.equals("ALLGCAT"))
                return ALLGCAT;
            if (str.equals("COBSCAT"))
                return COBSCAT;
            if (str.equals("DEMOCAT"))
                return DEMOCAT;
            if (str.equals("DICAT"))
                return DICAT;
            if (str.equals("IMMUCAT"))
                return IMMUCAT;
            if (str.equals("LABCAT"))
                return LABCAT;
            if (str.equals("MEDCCAT"))
                return MEDCCAT;
            if (str.equals("RXCAT"))
                return RXCAT;
            if (str.equals("PSVCCAT"))
                return PSVCCAT;
		    return null;
        }
    }

	/**
	* abstDomain: A19673 (C-0-T13953-A19673-cpt)
	*/
    public enum ActInvoicePaymentCode
    {
        
        BONUS(0),
        
        CFWD(1),
        
        EPYMT(2),
        
        EDU(3),
        
        GARN(4),
        
        PINV(5),
        
        PPRD(6),
        
        PROA(7),
        
        RECOV(8),
        
        RETRO(9),
        
        INVOICE(10),
        
        TRAN(11);
        
        private int code;
        
        ActInvoicePaymentCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoicePaymentCode fromString(String str)
        {
            if (str.equals("BONUS"))
                return BONUS;
            if (str.equals("CFWD"))
                return CFWD;
            if (str.equals("EPYMT"))
                return EPYMT;
            if (str.equals("EDU"))
                return EDU;
            if (str.equals("GARN"))
                return GARN;
            if (str.equals("PINV"))
                return PINV;
            if (str.equals("PPRD"))
                return PPRD;
            if (str.equals("PROA"))
                return PROA;
            if (str.equals("RECOV"))
                return RECOV;
            if (str.equals("RETRO"))
                return RETRO;
            if (str.equals("INVOICE"))
                return INVOICE;
            if (str.equals("TRAN"))
                return TRAN;
		    return null;
        }
    }

	/**
	* abstDomain: A19778 (C-0-T13953-A19778-cpt)
	*/
    public enum ActNonObservationIndicationCode
    {
        
        IND02(0),
        
        IND01(1),
        
        IND05(2),
        
        IND03(3),
        
        IND04(4);
        
        private int code;
        
        ActNonObservationIndicationCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActNonObservationIndicationCode fromString(String str)
        {
            if (str.equals("IND02"))
                return IND02;
            if (str.equals("IND01"))
                return IND01;
            if (str.equals("IND05"))
                return IND05;
            if (str.equals("IND03"))
                return IND03;
            if (str.equals("IND04"))
                return IND04;
		    return null;
        }
    }

	/**
	* specDomain: S22048 (C-0-T13953-A19846-S22048-cpt)
	*/
    public enum ActTaskOrderEntryCode
    {
        
        OE(0),
        
        LABOE(1),
        
        MEDOE(2);
        
        private int code;
        
        ActTaskOrderEntryCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskOrderEntryCode fromString(String str)
        {
            if (str.equals("OE"))
                return OE;
            if (str.equals("LABOE"))
                return LABOE;
            if (str.equals("MEDOE"))
                return MEDOE;
		    return null;
        }
    }

	/**
	* specDomain: S22068 (C-0-T13953-A19846-S22067-S22068-cpt)
	*/
    public enum ActTaskClinicalNoteEntryCode
    {
        
        CLINNOTEE(0),
        
        DIAGLISTE(1),
        
        DISCHSUME(2),
        
        PATREPE(3),
        
        PROBLISTE(4),
        
        RADREPE(5);
        
        private int code;
        
        ActTaskClinicalNoteEntryCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskClinicalNoteEntryCode fromString(String str)
        {
            if (str.equals("CLINNOTEE"))
                return CLINNOTEE;
            if (str.equals("DIAGLISTE"))
                return DIAGLISTE;
            if (str.equals("DISCHSUME"))
                return DISCHSUME;
            if (str.equals("PATREPE"))
                return PATREPE;
            if (str.equals("PROBLISTE"))
                return PROBLISTE;
            if (str.equals("RADREPE"))
                return RADREPE;
		    return null;
        }
    }

	/**
	* specDomain: S22065 (C-0-T13953-A19846-S22051-S22065-cpt)
	*/
    public enum ActTaskClinicalNoteReviewCode
    {
        
        CLINNOTEREV(0),
        
        DISCHSUMREV(1);
        
        private int code;
        
        ActTaskClinicalNoteReviewCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskClinicalNoteReviewCode fromString(String str)
        {
            if (str.equals("CLINNOTEREV"))
                return CLINNOTEREV;
            if (str.equals("DISCHSUMREV"))
                return DISCHSUMREV;
		    return null;
        }
    }

	/**
	* specDomain: S22053 (C-0-T13953-A19846-S22051-S22053-cpt)
	*/
    public enum ActTaskMedicationListReviewCode
    {
        
        MLREV(0),
        
        MARWLREV(1);
        
        private int code;
        
        ActTaskMedicationListReviewCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskMedicationListReviewCode fromString(String str)
        {
            if (str.equals("MLREV"))
                return MLREV;
            if (str.equals("MARWLREV"))
                return MARWLREV;
		    return null;
        }
    }

	/**
	* specDomain: S22056 (C-0-T13953-A19846-S22051-S22056-cpt)
	*/
    public enum ActTaskMicrobiologyResultsReviewCode
    {
        
        MICRORREV(0),
        
        MICROORGRREV(1),
        
        MICROSENSRREV(2);
        
        private int code;
        
        ActTaskMicrobiologyResultsReviewCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskMicrobiologyResultsReviewCode fromString(String str)
        {
            if (str.equals("MICRORREV"))
                return MICRORREV;
            if (str.equals("MICROORGRREV"))
                return MICROORGRREV;
            if (str.equals("MICROSENSRREV"))
                return MICROSENSRREV;
		    return null;
        }
    }

	/**
	* specDomain: S22063 (C-0-T13953-A19846-S22051-S22063-cpt)
	*/
    public enum ActTaskRiskAssessmentInstrumentCode
    {
        
        RISKASSESS(0),
        
        FALLRISK(1);
        
        private int code;
        
        ActTaskRiskAssessmentInstrumentCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActTaskRiskAssessmentInstrumentCode fromString(String str)
        {
            if (str.equals("RISKASSESS"))
                return RISKASSESS;
            if (str.equals("FALLRISK"))
                return FALLRISK;
		    return null;
        }
    }

	/**
	* abstDomain: A14811 (C-0-T13953-A13954-A14809-A14811-cpt)
	*/
    public enum CreditCard
    {
        
        AE(0),
        
        DN(1),
        
        DV(2),
        
        MC(3),
        
        V(4);
        
        private int code;
        
        CreditCard(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CreditCard fromString(String str)
        {
            if (str.equals("AE"))
                return AE;
            if (str.equals("DN"))
                return DN;
            if (str.equals("DV"))
                return DV;
            if (str.equals("MC"))
                return MC;
            if (str.equals("V"))
                return V;
		    return null;
        }
    }

	/**
	* specDomain: S19347 (C-0-T13953-A13954-A17616-S19347-cpt)
	*/
    public enum AdjudicatedWithAdjustments
    {
        
        AA(0),
        
        ANF(1);
        
        private int code;
        
        AdjudicatedWithAdjustments(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdjudicatedWithAdjustments fromString(String str)
        {
            if (str.equals("AA"))
                return AA;
            if (str.equals("ANF"))
                return ANF;
		    return null;
        }
    }

	/**
	* abstDomain: A17968 (C-0-T13953-A13954-A17968-cpt)
	*/
    public enum ActAdjudicationGroupCode
    {
        
        CONT(0),
        
        DAY(1),
        
        LOC(2),
        
        MONTH(3),
        
        PERIOD(4),
        
        PROV(5),
        
        WEEK(6),
        
        YEAR(7);
        
        private int code;
        
        ActAdjudicationGroupCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActAdjudicationGroupCode fromString(String str)
        {
            if (str.equals("CONT"))
                return CONT;
            if (str.equals("DAY"))
                return DAY;
            if (str.equals("LOC"))
                return LOC;
            if (str.equals("MONTH"))
                return MONTH;
            if (str.equals("PERIOD"))
                return PERIOD;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("WEEK"))
                return WEEK;
            if (str.equals("YEAR"))
                return YEAR;
		    return null;
        }
    }

	/**
	* abstDomain: A17472 (C-0-T13953-A13954-A17472-cpt)
	*/
    public enum ActAdjudicationResultActionCode
    {
        
        DISPLAY(0),
        
        FORM(1);
        
        private int code;
        
        ActAdjudicationResultActionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActAdjudicationResultActionCode fromString(String str)
        {
            if (str.equals("DISPLAY"))
                return DISPLAY;
            if (str.equals("FORM"))
                return FORM;
		    return null;
        }
    }

	/**
	* abstDomain: A19821 (C-0-T13953-A13954-A19821-cpt)
	*/
    public enum ActBillableModifierCode
    {
        
        CPTM(0),
        
        HCPCSA(1);
        
        private int code;
        
        ActBillableModifierCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActBillableModifierCode fromString(String str)
        {
            if (str.equals("CPTM"))
                return CPTM;
            if (str.equals("HCPCSA"))
                return HCPCSA;
		    return null;
        }
    }

	/**
	* abstDomain: A17896 (C-0-T13953-A13954-A17896-cpt)
	*/
    public enum ActBoundedROICode
    {
        
        ROIFS(0),
        
        ROIPS(1);
        
        private int code;
        
        ActBoundedROICode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActBoundedROICode fromString(String str)
        {
            if (str.equals("ROIFS"))
                return ROIFS;
            if (str.equals("ROIPS"))
                return ROIPS;
		    return null;
        }
    }

	/**
	* abstDomain: A14058 (C-0-T13953-A13954-A14058-cpt)
	*/
    public enum ActContainerRegistrationCode
    {
        
        X(0),
        
        ID(1),
        
        IP(2),
        
        O(3),
        
        L(4),
        
        M(5),
        
        R(6);
        
        private int code;
        
        ActContainerRegistrationCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActContainerRegistrationCode fromString(String str)
        {
            if (str.equals("X"))
                return X;
            if (str.equals("ID"))
                return ID;
            if (str.equals("IP"))
                return IP;
            if (str.equals("O"))
                return O;
            if (str.equals("L"))
                return L;
            if (str.equals("M"))
                return M;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* abstDomain: A17491 (C-0-T13953-A13954-A17487-A17491-cpt)
	*/
    public enum ActCoverageAuthorizationConfirmationCode
    {
        
        AUTH(0),
        
        NAUTH(1);
        
        private int code;
        
        ActCoverageAuthorizationConfirmationCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActCoverageAuthorizationConfirmationCode fromString(String str)
        {
            if (str.equals("AUTH"))
                return AUTH;
            if (str.equals("NAUTH"))
                return NAUTH;
		    return null;
        }
    }

	/**
	* specDomain: S22239 (C-0-T13953-A13954-A17496-S22239-cpt)
	*/
    public enum ActCoverageMaximaCodes
    {
        
        COVMX(0),
        
        LFEMX(1),
        
        PRDMX(2);
        
        private int code;
        
        ActCoverageMaximaCodes(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActCoverageMaximaCodes fromString(String str)
        {
            if (str.equals("COVMX"))
                return COVMX;
            if (str.equals("LFEMX"))
                return LFEMX;
            if (str.equals("PRDMX"))
                return PRDMX;
		    return null;
        }
    }

	/**
	* abstDomain: A19933 (C-0-T13953-A13954-A17496-A19933-cpt)
	*/
    public enum ActCoverageQuantityLimitCode
    {
        
        NETAMT(0,"NETAMT"),
        
        NETAMT_1(1,"NETAMT"),
        
        UNITPRICE(2,"UNITPRICE"),
        
        UNITPRICE_1(3,"UNITPRICE"),
        
        UNITQTY(4,"UNITQTY"),
        
        UNITQTY_1(5,"UNITQTY"),
        
        COVPRD(6,"COVPRD"),
        
        COVPRD_1(7,"COVPRD"),
        
        LFEMX(8,"LFEMX"),
        
        PRDMX(9,"PRDMX");
        
        private int code;
        private java.lang.String xmlValue;
        
        ActCoverageQuantityLimitCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ActCoverageQuantityLimitCode fromString(String str)
        {
            if (str.equals("NETAMT"))
                return NETAMT;
            if (str.equals("NETAMT"))
                return NETAMT_1;
            if (str.equals("UNITPRICE"))
                return UNITPRICE;
            if (str.equals("UNITPRICE"))
                return UNITPRICE_1;
            if (str.equals("UNITQTY"))
                return UNITQTY;
            if (str.equals("UNITQTY"))
                return UNITQTY_1;
            if (str.equals("COVPRD"))
                return COVPRD;
            if (str.equals("COVPRD"))
                return COVPRD_1;
            if (str.equals("LFEMX"))
                return LFEMX;
            if (str.equals("PRDMX"))
                return PRDMX;
		    return null;
        }
    }

	/**
	* specDomain: S19721 (C-0-T13953-A13954-A19855-A19350-S19721-cpt)
	*/
    public enum ActInsurancePolicyCodeAutomobileByBOT
    {
        
        AUTOPOL(0),
        
        COL(1),
        
        UNINSMOT(2);
        
        private int code;
        
        ActInsurancePolicyCodeAutomobileByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInsurancePolicyCodeAutomobileByBOT fromString(String str)
        {
            if (str.equals("AUTOPOL"))
                return AUTOPOL;
            if (str.equals("COL"))
                return COL;
            if (str.equals("UNINSMOT"))
                return UNINSMOT;
		    return null;
        }
    }

	/**
	* specDomain: S22133 (C-0-T13953-A13954-A19855-A19350-S19718-S22133-cpt)
	*/
    public enum ActInsurancePolicyCodeDiseaseProgramByBOT
    {
        
        DISEASEPRG(0),
        
        HIVAIDS(1),
        
        CANPRG(2),
        
        ENDRENAL(3);
        
        private int code;
        
        ActInsurancePolicyCodeDiseaseProgramByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInsurancePolicyCodeDiseaseProgramByBOT fromString(String str)
        {
            if (str.equals("DISEASEPRG"))
                return DISEASEPRG;
            if (str.equals("HIVAIDS"))
                return HIVAIDS;
            if (str.equals("CANPRG"))
                return CANPRG;
            if (str.equals("ENDRENAL"))
                return ENDRENAL;
		    return null;
        }
    }

	/**
	* specDomain: S22137 (C-0-T13953-A13954-A19855-A19350-S19718-S22137-cpt)
	*/
    public enum ActInsurancePolicyCodeSubsidizedHealthProgramByBOT
    {
        
        SUBSIDIZ(0),
        
        SUBSIDMC(1),
        
        SUBSUPP(2);
        
        private int code;
        
        ActInsurancePolicyCodeSubsidizedHealthProgramByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInsurancePolicyCodeSubsidizedHealthProgramByBOT fromString(String str)
        {
            if (str.equals("SUBSIDIZ"))
                return SUBSIDIZ;
            if (str.equals("SUBSIDMC"))
                return SUBSIDMC;
            if (str.equals("SUBSUPP"))
                return SUBSUPP;
		    return null;
        }
    }

	/**
	* specDomain: S22147 (C-0-T13953-A13954-A19855-A19856-A19857-S22147-cpt)
	*/
    public enum ManagedCarePolicy
    {
        
        MCPOL(0),
        
        HMO(1),
        
        POS(2),
        
        PPO(3);
        
        private int code;
        
        ManagedCarePolicy(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ManagedCarePolicy fromString(String str)
        {
            if (str.equals("MCPOL"))
                return MCPOL;
            if (str.equals("HMO"))
                return HMO;
            if (str.equals("POS"))
                return POS;
            if (str.equals("PPO"))
                return PPO;
		    return null;
        }
    }

	/**
	* specDomain: S19721 (C-0-T13953-A13954-A19855-A19856-S19721-cpt)
	*/
    public enum AutomobileInsurancePolicy
    {
        
        AUTOPOL(0),
        
        COL(1),
        
        UNINSMOT(2);
        
        private int code;
        
        AutomobileInsurancePolicy(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AutomobileInsurancePolicy fromString(String str)
        {
            if (str.equals("AUTOPOL"))
                return AUTOPOL;
            if (str.equals("COL"))
                return COL;
            if (str.equals("UNINSMOT"))
                return UNINSMOT;
		    return null;
        }
    }

	/**
	* specDomain: S22148 (C-0-T13953-A13954-A19855-A19856-S22148-cpt)
	*/
    public enum LifeInsurancePolicy
    {
        
        LIFE(0),
        
        ANNU(1),
        
        TLIFE(2),
        
        ULIFE(3);
        
        private int code;
        
        LifeInsurancePolicy(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LifeInsurancePolicy fromString(String str)
        {
            if (str.equals("LIFE"))
                return LIFE;
            if (str.equals("ANNU"))
                return ANNU;
            if (str.equals("TLIFE"))
                return TLIFE;
            if (str.equals("ULIFE"))
                return ULIFE;
		    return null;
        }
    }

	/**
	* specDomain: S22133 (C-0-T13953-A13954-A19855-A19858-S19718-S22133-cpt)
	*/
    public enum DiseaseProgram
    {
        
        DISEASEPRG(0),
        
        HIVAIDS(1),
        
        CANPRG(2),
        
        ENDRENAL(3);
        
        private int code;
        
        DiseaseProgram(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DiseaseProgram fromString(String str)
        {
            if (str.equals("DISEASEPRG"))
                return DISEASEPRG;
            if (str.equals("HIVAIDS"))
                return HIVAIDS;
            if (str.equals("CANPRG"))
                return CANPRG;
            if (str.equals("ENDRENAL"))
                return ENDRENAL;
		    return null;
        }
    }

	/**
	* specDomain: S22137 (C-0-T13953-A13954-A19855-A19858-S19718-S22137-cpt)
	*/
    public enum SubsidizedHealthProgram
    {
        
        SUBSIDIZ(0),
        
        SUBSIDMC(1),
        
        SUBSUPP(2);
        
        private int code;
        
        SubsidizedHealthProgram(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubsidizedHealthProgram fromString(String str)
        {
            if (str.equals("SUBSIDIZ"))
                return SUBSIDIZ;
            if (str.equals("SUBSIDMC"))
                return SUBSIDMC;
            if (str.equals("SUBSUPP"))
                return SUBSUPP;
		    return null;
        }
    }

	/**
	* abstDomain: A19619 (C-0-T13953-A13954-A16695-A19431-A19619-cpt)
	*/
    public enum AuthorizationIssueManagementCode
    {
        
        EMAUTH(0);
        
        private int code;
        
        AuthorizationIssueManagementCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AuthorizationIssueManagementCode fromString(String str)
        {
            if (str.equals("EMAUTH"))
                return EMAUTH;
		    return null;
        }
    }

	/**
	* specDomain: S16703 (C-0-T13953-A13954-A16695-S16703-cpt)
	*/
    public enum OtherActionTakenManagementCode
    {
        
        _8(0,"8"),
        
        _11(1,"11"),
        
        _9(2,"9"),
        
        _10(3,"10"),
        
        _13(4,"13"),
        
        _12(5,"12");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherActionTakenManagementCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherActionTakenManagementCode fromString(String str)
        {
            if (str.equals("8"))
                return _8;
            if (str.equals("11"))
                return _11;
            if (str.equals("9"))
                return _9;
            if (str.equals("10"))
                return _10;
            if (str.equals("13"))
                return _13;
            if (str.equals("12"))
                return _12;
		    return null;
        }
    }

	/**
	* specDomain: S16709 (C-0-T13953-A13954-A16695-S16709-cpt)
	*/
    public enum SupplyAppropriateManagementCode
    {
        
        _14(0,"14"),
        
        _18(1,"18"),
        
        _15(2,"15"),
        
        _16(3,"16"),
        
        _17(4,"17");
        
        private int code;
        private java.lang.String xmlValue;
        
        SupplyAppropriateManagementCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SupplyAppropriateManagementCode fromString(String str)
        {
            if (str.equals("14"))
                return _14;
            if (str.equals("18"))
                return _18;
            if (str.equals("15"))
                return _15;
            if (str.equals("16"))
                return _16;
            if (str.equals("17"))
                return _17;
		    return null;
        }
    }

	/**
	* specDomain: S16700 (C-0-T13953-A13954-A16695-S16696-S16700-cpt)
	*/
    public enum ConsultedPrescriberManagementCode
    {
        
        _5(0,"5"),
        
        _6(1,"6");
        
        private int code;
        private java.lang.String xmlValue;
        
        ConsultedPrescriberManagementCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ConsultedPrescriberManagementCode fromString(String str)
        {
            if (str.equals("5"))
                return _5;
            if (str.equals("6"))
                return _6;
		    return null;
        }
    }

	/**
	* abstDomain: A10376 (C-0-T13953-A13954-A10376-cpt)
	*/
    public enum ActDietCode
    {
        
        BR(0),
        
        DM(1),
        
        FAST(2),
        
        GF(3),
        
        LQ(4),
        
        LF(5),
        
        LP(6),
        
        LS(7),
        
        VLI(8),
        
        NF(9),
        
        N(10),
        
        PAR(11),
        
        PAF(12),
        
        RD(13),
        
        SCH(14),
        
        T(15);
        
        private int code;
        
        ActDietCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActDietCode fromString(String str)
        {
            if (str.equals("BR"))
                return BR;
            if (str.equals("DM"))
                return DM;
            if (str.equals("FAST"))
                return FAST;
            if (str.equals("GF"))
                return GF;
            if (str.equals("LQ"))
                return LQ;
            if (str.equals("LF"))
                return LF;
            if (str.equals("LP"))
                return LP;
            if (str.equals("LS"))
                return LS;
            if (str.equals("VLI"))
                return VLI;
            if (str.equals("NF"))
                return NF;
            if (str.equals("N"))
                return N;
            if (str.equals("PAR"))
                return PAR;
            if (str.equals("PAF"))
                return PAF;
            if (str.equals("RD"))
                return RD;
            if (str.equals("SCH"))
                return SCH;
            if (str.equals("T"))
                return T;
		    return null;
        }
    }

	/**
	* abstDomain: A19938 (C-0-T13953-A13954-A19938-cpt)
	*/
    public enum ActExposureCode
    {
        
        HOMECARE(0),
        
        CONVEYNC(1),
        
        PLACE(2),
        
        SUBSTNCE(3),
        
        TRAVINT(4),
        
        CHLDCARE(5),
        
        HLTHCARE(6),
        
        PTNTCARE(7),
        
        HOSPPTNT(8),
        
        HOSPVSTR(9),
        
        HOUSEHLD(10),
        
        INMATE(11),
        
        INTIMATE(12),
        
        LTRMCARE(13),
        
        SCHOOL2(14),
        
        SOCIAL2(15),
        
        WORK2(16);
        
        private int code;
        
        ActExposureCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActExposureCode fromString(String str)
        {
            if (str.equals("HOMECARE"))
                return HOMECARE;
            if (str.equals("CONVEYNC"))
                return CONVEYNC;
            if (str.equals("PLACE"))
                return PLACE;
            if (str.equals("SUBSTNCE"))
                return SUBSTNCE;
            if (str.equals("TRAVINT"))
                return TRAVINT;
            if (str.equals("CHLDCARE"))
                return CHLDCARE;
            if (str.equals("HLTHCARE"))
                return HLTHCARE;
            if (str.equals("PTNTCARE"))
                return PTNTCARE;
            if (str.equals("HOSPPTNT"))
                return HOSPPTNT;
            if (str.equals("HOSPVSTR"))
                return HOSPVSTR;
            if (str.equals("HOUSEHLD"))
                return HOUSEHLD;
            if (str.equals("INMATE"))
                return INMATE;
            if (str.equals("INTIMATE"))
                return INTIMATE;
            if (str.equals("LTRMCARE"))
                return LTRMCARE;
            if (str.equals("SCHOOL2"))
                return SCHOOL2;
            if (str.equals("SOCIAL2"))
                return SOCIAL2;
            if (str.equals("WORK2"))
                return WORK2;
		    return null;
        }
    }

	/**
	* abstDomain: A14804 (C-0-T13953-A13954-A14804-cpt)
	*/
    public enum ActFinancialTransactionCode
    {
        
        CHRG(0),
        
        REV(1);
        
        private int code;
        
        ActFinancialTransactionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActFinancialTransactionCode fromString(String str)
        {
            if (str.equals("CHRG"))
                return CHRG;
            if (str.equals("REV"))
                return REV;
		    return null;
        }
    }

	/**
	* abstDomain: A19928 (C-0-T13953-A13954-A19928-cpt)
	*/
    public enum ActInformationAccessContextCode
    {
        
        INFCON(0),
        
        INFDNG(1),
        
        INFPWR(2),
        
        INFEMER(3),
        
        INFCRT(4);
        
        private int code;
        
        ActInformationAccessContextCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInformationAccessContextCode fromString(String str)
        {
            if (str.equals("INFCON"))
                return INFCON;
            if (str.equals("INFDNG"))
                return INFDNG;
            if (str.equals("INFPWR"))
                return INFPWR;
            if (str.equals("INFEMER"))
                return INFEMER;
            if (str.equals("INFCRT"))
                return INFCRT;
		    return null;
        }
    }

	/**
	* abstDomain: A19413 (C-0-T13953-A13954-A19397-A19412-A19413-cpt)
	*/
    public enum ActInvoiceAdjudicationPaymentSummaryCode
    {
        
        CONT(0),
        
        DAY(1),
        
        INVTYPE(2),
        
        LOC(3),
        
        MONTH(4),
        
        PAYEE(5),
        
        PAYOR(6),
        
        PERIOD(7),
        
        PROV(8),
        
        SENDAPP(9),
        
        WEEK(10),
        
        YEAR(11);
        
        private int code;
        
        ActInvoiceAdjudicationPaymentSummaryCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceAdjudicationPaymentSummaryCode fromString(String str)
        {
            if (str.equals("CONT"))
                return CONT;
            if (str.equals("DAY"))
                return DAY;
            if (str.equals("INVTYPE"))
                return INVTYPE;
            if (str.equals("LOC"))
                return LOC;
            if (str.equals("MONTH"))
                return MONTH;
            if (str.equals("PAYEE"))
                return PAYEE;
            if (str.equals("PAYOR"))
                return PAYOR;
            if (str.equals("PERIOD"))
                return PERIOD;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("SENDAPP"))
                return SENDAPP;
            if (str.equals("WEEK"))
                return WEEK;
            if (str.equals("YEAR"))
                return YEAR;
		    return null;
        }
    }

	/**
	* abstDomain: A19411 (C-0-T13953-A13954-A19397-A19401-A19415-A19407-A19411-cpt)
	*/
    public enum ActInvoiceDetailGenericAdjudicatorCode
    {
        
        COIN(0),
        
        DEDUCTIBLE(1),
        
        COPAYMENT(2),
        
        PAY(3),
        
        SPEND(4);
        
        private int code;
        
        ActInvoiceDetailGenericAdjudicatorCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceDetailGenericAdjudicatorCode fromString(String str)
        {
            if (str.equals("COIN"))
                return COIN;
            if (str.equals("DEDUCTIBLE"))
                return DEDUCTIBLE;
            if (str.equals("COPAYMENT"))
                return COPAYMENT;
            if (str.equals("PAY"))
                return PAY;
            if (str.equals("SPEND"))
                return SPEND;
		    return null;
        }
    }

	/**
	* abstDomain: A19410 (C-0-T13953-A13954-A19397-A19401-A19415-A19407-A19410-cpt)
	*/
    public enum ActInvoiceDetailGenericModifierCode
    {
        
        ISOL(0),
        
        AFTHRS(1),
        
        OOO(2);
        
        private int code;
        
        ActInvoiceDetailGenericModifierCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceDetailGenericModifierCode fromString(String str)
        {
            if (str.equals("ISOL"))
                return ISOL;
            if (str.equals("AFTHRS"))
                return AFTHRS;
            if (str.equals("OOO"))
                return OOO;
		    return null;
        }
    }

	/**
	* abstDomain: A19408 (C-0-T13953-A13954-A19397-A19401-A19415-A19407-A19408-cpt)
	*/
    public enum ActInvoiceDetailGenericProviderCode
    {
        
        CANCAPT(0),
        
        DSC(1),
        
        ESA(2),
        
        FFSTOP(3),
        
        FNLFEE(4),
        
        FRSTFEE(5),
        
        MARKUP(6),
        
        MISSAPT(7),
        
        PERMBNS(8),
        
        PERFEE(9),
        
        RESTOCK(10),
        
        TRAVEL(11),
        
        URGENT(12);
        
        private int code;
        
        ActInvoiceDetailGenericProviderCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceDetailGenericProviderCode fromString(String str)
        {
            if (str.equals("CANCAPT"))
                return CANCAPT;
            if (str.equals("DSC"))
                return DSC;
            if (str.equals("ESA"))
                return ESA;
            if (str.equals("FFSTOP"))
                return FFSTOP;
            if (str.equals("FNLFEE"))
                return FNLFEE;
            if (str.equals("FRSTFEE"))
                return FRSTFEE;
            if (str.equals("MARKUP"))
                return MARKUP;
            if (str.equals("MISSAPT"))
                return MISSAPT;
            if (str.equals("PERMBNS"))
                return PERMBNS;
            if (str.equals("PERFEE"))
                return PERFEE;
            if (str.equals("RESTOCK"))
                return RESTOCK;
            if (str.equals("TRAVEL"))
                return TRAVEL;
            if (str.equals("URGENT"))
                return URGENT;
		    return null;
        }
    }

	/**
	* abstDomain: A19409 (C-0-T13953-A13954-A19397-A19401-A19415-A19407-A19409-cpt)
	*/
    public enum ActInvoiceDetailTaxCode
    {
        
        FST(0),
        
        HST(1),
        
        PST(2);
        
        private int code;
        
        ActInvoiceDetailTaxCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceDetailTaxCode fromString(String str)
        {
            if (str.equals("FST"))
                return FST;
            if (str.equals("HST"))
                return HST;
            if (str.equals("PST"))
                return PST;
		    return null;
        }
    }

	/**
	* abstDomain: A19400 (C-0-T13953-A13954-A19397-A19398-A19400-cpt)
	*/
    public enum ActInvoiceInterGroupCode
    {
        
        CPNDDRGING(0),
        
        CPNDINDING(1),
        
        CPNDSUPING(2),
        
        DRUGING(3),
        
        FRAMEING(4),
        
        LENSING(5),
        
        PRDING(6);
        
        private int code;
        
        ActInvoiceInterGroupCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceInterGroupCode fromString(String str)
        {
            if (str.equals("CPNDDRGING"))
                return CPNDDRGING;
            if (str.equals("CPNDINDING"))
                return CPNDINDING;
            if (str.equals("CPNDSUPING"))
                return CPNDSUPING;
            if (str.equals("DRUGING"))
                return DRUGING;
            if (str.equals("FRAMEING"))
                return FRAMEING;
            if (str.equals("LENSING"))
                return LENSING;
            if (str.equals("PRDING"))
                return PRDING;
		    return null;
        }
    }

	/**
	* abstDomain: A19399 (C-0-T13953-A13954-A19397-A19398-A19399-cpt)
	*/
    public enum ActInvoiceRootGroupCode
    {
        
        RXCINV(0),
        
        RXDINV(1),
        
        CPINV(2),
        
        CSPINV(3),
        
        CSINV(4),
        
        FININV(5),
        
        OHSINV(6),
        
        PAINV(7),
        
        SBFINV(8),
        
        VRXINV(9);
        
        private int code;
        
        ActInvoiceRootGroupCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceRootGroupCode fromString(String str)
        {
            if (str.equals("RXCINV"))
                return RXCINV;
            if (str.equals("RXDINV"))
                return RXDINV;
            if (str.equals("CPINV"))
                return CPINV;
            if (str.equals("CSPINV"))
                return CSPINV;
            if (str.equals("CSINV"))
                return CSINV;
            if (str.equals("FININV"))
                return FININV;
            if (str.equals("OHSINV"))
                return OHSINV;
            if (str.equals("PAINV"))
                return PAINV;
            if (str.equals("SBFINV"))
                return SBFINV;
            if (str.equals("VRXINV"))
                return VRXINV;
		    return null;
        }
    }

	/**
	* abstDomain: A17530 (C-0-T13953-A13954-A17522-A17530-cpt)
	*/
    public enum InvoiceElementAdjudicated
    {
        
        ADNPPPELAT(0),
        
        ADNPPPELCT(1),
        
        ADNPPPMNAT(2),
        
        ADNPPPMNCT(3),
        
        ADNPSPELAT(4),
        
        ADNPSPELCT(5),
        
        ADNPSPMNAT(6),
        
        ADNPSPMNCT(7),
        
        ADNFPPELAT(8),
        
        ADNFPPELCT(9),
        
        ADNFPPMNAT(10),
        
        ADNFPPMNCT(11),
        
        ADNFSPELAT(12),
        
        ADNFSPELCT(13),
        
        ADNFSPMNAT(14),
        
        ADNFSPMNCT(15),
        
        ADPPPPELAT(16),
        
        ADPPPPELCT(17),
        
        ADPPPPMNAT(18),
        
        ADPPPPMNCT(19),
        
        ADPPSPELAT(20),
        
        ADPPSPELCT(21),
        
        ADPPSPMNAT(22),
        
        ADPPSPMNCT(23),
        
        ADRFPPELAT(24),
        
        ADRFPPELCT(25),
        
        ADRFPPMNAT(26),
        
        ADRFPPMNCT(27),
        
        ADRFSPELAT(28),
        
        ADRFSPELCT(29),
        
        ADRFSPMNAT(30),
        
        ADRFSPMNCT(31);
        
        private int code;
        
        InvoiceElementAdjudicated(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InvoiceElementAdjudicated fromString(String str)
        {
            if (str.equals("ADNPPPELAT"))
                return ADNPPPELAT;
            if (str.equals("ADNPPPELCT"))
                return ADNPPPELCT;
            if (str.equals("ADNPPPMNAT"))
                return ADNPPPMNAT;
            if (str.equals("ADNPPPMNCT"))
                return ADNPPPMNCT;
            if (str.equals("ADNPSPELAT"))
                return ADNPSPELAT;
            if (str.equals("ADNPSPELCT"))
                return ADNPSPELCT;
            if (str.equals("ADNPSPMNAT"))
                return ADNPSPMNAT;
            if (str.equals("ADNPSPMNCT"))
                return ADNPSPMNCT;
            if (str.equals("ADNFPPELAT"))
                return ADNFPPELAT;
            if (str.equals("ADNFPPELCT"))
                return ADNFPPELCT;
            if (str.equals("ADNFPPMNAT"))
                return ADNFPPMNAT;
            if (str.equals("ADNFPPMNCT"))
                return ADNFPPMNCT;
            if (str.equals("ADNFSPELAT"))
                return ADNFSPELAT;
            if (str.equals("ADNFSPELCT"))
                return ADNFSPELCT;
            if (str.equals("ADNFSPMNAT"))
                return ADNFSPMNAT;
            if (str.equals("ADNFSPMNCT"))
                return ADNFSPMNCT;
            if (str.equals("ADPPPPELAT"))
                return ADPPPPELAT;
            if (str.equals("ADPPPPELCT"))
                return ADPPPPELCT;
            if (str.equals("ADPPPPMNAT"))
                return ADPPPPMNAT;
            if (str.equals("ADPPPPMNCT"))
                return ADPPPPMNCT;
            if (str.equals("ADPPSPELAT"))
                return ADPPSPELAT;
            if (str.equals("ADPPSPELCT"))
                return ADPPSPELCT;
            if (str.equals("ADPPSPMNAT"))
                return ADPPSPMNAT;
            if (str.equals("ADPPSPMNCT"))
                return ADPPSPMNCT;
            if (str.equals("ADRFPPELAT"))
                return ADRFPPELAT;
            if (str.equals("ADRFPPELCT"))
                return ADRFPPELCT;
            if (str.equals("ADRFPPMNAT"))
                return ADRFPPMNAT;
            if (str.equals("ADRFPPMNCT"))
                return ADRFPPMNCT;
            if (str.equals("ADRFSPELAT"))
                return ADRFSPELAT;
            if (str.equals("ADRFSPELCT"))
                return ADRFSPELCT;
            if (str.equals("ADRFSPMNAT"))
                return ADRFSPMNAT;
            if (str.equals("ADRFSPMNCT"))
                return ADRFSPMNCT;
		    return null;
        }
    }

	/**
	* abstDomain: A17563 (C-0-T13953-A13954-A17522-A17563-cpt)
	*/
    public enum InvoiceElementPaid
    {
        
        PDNPPPELAT(0),
        
        PDNPPPELCT(1),
        
        PDNPPPMNAT(2),
        
        PDNPPPMNCT(3),
        
        PDNPSPELAT(4),
        
        PDNPSPELCT(5),
        
        PDNPSPMNAT(6),
        
        PDNPSPMNCT(7),
        
        PDNFPPELAT(8),
        
        PDNFPPELCT(9),
        
        PDNFPPMNAT(10),
        
        PDNFPPMNCT(11),
        
        PDNFSPELAT(12),
        
        PDNFSPELCT(13),
        
        PDNFSPMNAT(14),
        
        PDNFSPMNCT(15),
        
        PDPPPPELAT(16),
        
        PDPPPPELCT(17),
        
        PDPPPPMNAT(18),
        
        PDPPPPMNCT(19),
        
        PDPPSPELAT(20),
        
        PDPPSPELCT(21),
        
        PDPPSPMNAT(22),
        
        PDPPSPMNCT(23);
        
        private int code;
        
        InvoiceElementPaid(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InvoiceElementPaid fromString(String str)
        {
            if (str.equals("PDNPPPELAT"))
                return PDNPPPELAT;
            if (str.equals("PDNPPPELCT"))
                return PDNPPPELCT;
            if (str.equals("PDNPPPMNAT"))
                return PDNPPPMNAT;
            if (str.equals("PDNPPPMNCT"))
                return PDNPPPMNCT;
            if (str.equals("PDNPSPELAT"))
                return PDNPSPELAT;
            if (str.equals("PDNPSPELCT"))
                return PDNPSPELCT;
            if (str.equals("PDNPSPMNAT"))
                return PDNPSPMNAT;
            if (str.equals("PDNPSPMNCT"))
                return PDNPSPMNCT;
            if (str.equals("PDNFPPELAT"))
                return PDNFPPELAT;
            if (str.equals("PDNFPPELCT"))
                return PDNFPPELCT;
            if (str.equals("PDNFPPMNAT"))
                return PDNFPPMNAT;
            if (str.equals("PDNFPPMNCT"))
                return PDNFPPMNCT;
            if (str.equals("PDNFSPELAT"))
                return PDNFSPELAT;
            if (str.equals("PDNFSPELCT"))
                return PDNFSPELCT;
            if (str.equals("PDNFSPMNAT"))
                return PDNFSPMNAT;
            if (str.equals("PDNFSPMNCT"))
                return PDNFSPMNCT;
            if (str.equals("PDPPPPELAT"))
                return PDPPPPELAT;
            if (str.equals("PDPPPPELCT"))
                return PDPPPPELCT;
            if (str.equals("PDPPPPMNAT"))
                return PDPPPPMNAT;
            if (str.equals("PDPPPPMNCT"))
                return PDPPPPMNCT;
            if (str.equals("PDPPSPELAT"))
                return PDPPSPELAT;
            if (str.equals("PDPPSPELCT"))
                return PDPPSPELCT;
            if (str.equals("PDPPSPMNAT"))
                return PDPPSPMNAT;
            if (str.equals("PDPPSPMNCT"))
                return PDPPSPMNCT;
		    return null;
        }
    }

	/**
	* abstDomain: A17523 (C-0-T13953-A13954-A17522-A17523-cpt)
	*/
    public enum InvoiceElementSubmitted
    {
        
        SBBLELAT(0),
        
        SBBLELCT(1),
        
        SBNFELCT(2),
        
        SBNFELAT(3),
        
        SBPDELAT(4),
        
        SBPDELCT(5);
        
        private int code;
        
        InvoiceElementSubmitted(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InvoiceElementSubmitted fromString(String str)
        {
            if (str.equals("SBBLELAT"))
                return SBBLELAT;
            if (str.equals("SBBLELCT"))
                return SBBLELCT;
            if (str.equals("SBNFELCT"))
                return SBNFELCT;
            if (str.equals("SBNFELAT"))
                return SBNFELAT;
            if (str.equals("SBPDELAT"))
                return SBPDELAT;
            if (str.equals("SBPDELCT"))
                return SBPDELCT;
		    return null;
        }
    }

	/**
	* abstDomain: A17590 (C-0-T13953-A13954-A17590-cpt)
	*/
    public enum ActInvoiceOverrideCode
    {
        
        COVGE(0),
        
        PYRDELAY(1),
        
        EFORM(2),
        
        FAX(3),
        
        GFTH(4),
        
        LATE(5),
        
        MANUAL(6),
        
        ORTHO(7),
        
        OOJ(8),
        
        PAPER(9),
        
        PIE(10),
        
        REFNR(11),
        
        REPSERV(12),
        
        UNRELAT(13),
        
        VERBAUTH(14);
        
        private int code;
        
        ActInvoiceOverrideCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceOverrideCode fromString(String str)
        {
            if (str.equals("COVGE"))
                return COVGE;
            if (str.equals("PYRDELAY"))
                return PYRDELAY;
            if (str.equals("EFORM"))
                return EFORM;
            if (str.equals("FAX"))
                return FAX;
            if (str.equals("GFTH"))
                return GFTH;
            if (str.equals("LATE"))
                return LATE;
            if (str.equals("MANUAL"))
                return MANUAL;
            if (str.equals("ORTHO"))
                return ORTHO;
            if (str.equals("OOJ"))
                return OOJ;
            if (str.equals("PAPER"))
                return PAPER;
            if (str.equals("PIE"))
                return PIE;
            if (str.equals("REFNR"))
                return REFNR;
            if (str.equals("REPSERV"))
                return REPSERV;
            if (str.equals("UNRELAT"))
                return UNRELAT;
            if (str.equals("VERBAUTH"))
                return VERBAUTH;
		    return null;
        }
    }

	/**
	* specDomain: S19976 (C-0-T13953-A13954-A19364-S19976-cpt)
	*/
    public enum ActMedicationList
    {
        
        MEDLIST(0),
        
        CURMEDLIST(1),
        
        DISCMEDLIST(2),
        
        HISTMEDLIST(3);
        
        private int code;
        
        ActMedicationList(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActMedicationList fromString(String str)
        {
            if (str.equals("MEDLIST"))
                return MEDLIST;
            if (str.equals("CURMEDLIST"))
                return CURMEDLIST;
            if (str.equals("DISCMEDLIST"))
                return DISCMEDLIST;
            if (str.equals("HISTMEDLIST"))
                return HISTMEDLIST;
		    return null;
        }
    }

	/**
	* specDomain: S21322 (C-0-T13953-A13954-A19364-A19370-S21322-cpt)
	*/
    public enum ActConditionList
    {
        
        CONDLIST(0),
        
        INTOLIST(1),
        
        PROBLIST(2),
        
        RISKLIST(3);
        
        private int code;
        
        ActConditionList(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActConditionList fromString(String str)
        {
            if (str.equals("CONDLIST"))
                return CONDLIST;
            if (str.equals("INTOLIST"))
                return INTOLIST;
            if (str.equals("PROBLIST"))
                return PROBLIST;
            if (str.equals("RISKLIST"))
                return RISKLIST;
		    return null;
        }
    }

	/**
	* abstDomain: A19788 (C-0-T13953-A13954-A19364-A19710-A19788-cpt)
	*/
    public enum ActMedicationTherapyDurationWorkingListCode
    {
        
        PRN(0),
        
        CHRON(1),
        
        ONET(2),
        
        ACU(3);
        
        private int code;
        
        ActMedicationTherapyDurationWorkingListCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActMedicationTherapyDurationWorkingListCode fromString(String str)
        {
            if (str.equals("PRN"))
                return PRN;
            if (str.equals("CHRON"))
                return CHRON;
            if (str.equals("ONET"))
                return ONET;
            if (str.equals("ACU"))
                return ACU;
		    return null;
        }
    }

	/**
	* abstDomain: A17610 (C-0-T13953-A13954-A17610-cpt)
	*/
    public enum ActPaymentCode
    {
        
        ACH(0),
        
        CHK(1),
        
        DDP(2),
        
        NON(3);
        
        private int code;
        
        ActPaymentCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActPaymentCode fromString(String str)
        {
            if (str.equals("ACH"))
                return ACH;
            if (str.equals("CHK"))
                return CHK;
            if (str.equals("DDP"))
                return DDP;
            if (str.equals("NON"))
                return NON;
		    return null;
        }
    }

	/**
	* specDomain: S16220 (C-0-T13953-A13954-A16208-S16220-cpt)
	*/
    public enum EmergencyPharmacySupplyType
    {
        
        EM(0),
        
        SO(1);
        
        private int code;
        
        EmergencyPharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EmergencyPharmacySupplyType fromString(String str)
        {
            if (str.equals("EM"))
                return EM;
            if (str.equals("SO"))
                return SO;
		    return null;
        }
    }

	/**
	* specDomain: S16210 (C-0-T13953-A13954-A16208-S16209-S16210-cpt)
	*/
    public enum FirstFillCompletePharmacySupplyType
    {
        
        FFC(0),
        
        FFCS(1);
        
        private int code;
        
        FirstFillCompletePharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FirstFillCompletePharmacySupplyType fromString(String str)
        {
            if (str.equals("FFC"))
                return FFC;
            if (str.equals("FFCS"))
                return FFCS;
		    return null;
        }
    }

	/**
	* specDomain: S17479 (C-0-T13953-A13954-A16208-S16209-S17479-cpt)
	*/
    public enum FirstFillPartialPharmacySupplyType
    {
        
        FFS(0),
        
        FFCS(1),
        
        TFS(2),
        
        FFPS(3);
        
        private int code;
        
        FirstFillPartialPharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FirstFillPartialPharmacySupplyType fromString(String str)
        {
            if (str.equals("FFS"))
                return FFS;
            if (str.equals("FFCS"))
                return FFCS;
            if (str.equals("TFS"))
                return TFS;
            if (str.equals("FFPS"))
                return FFPS;
		    return null;
        }
    }

	/**
	* specDomain: S16216 (C-0-T13953-A13954-A16208-S16215-S16216-cpt)
	*/
    public enum RefillCompletePharmacySupplyType
    {
        
        RFC(0),
        
        RFCS(1);
        
        private int code;
        
        RefillCompletePharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RefillCompletePharmacySupplyType fromString(String str)
        {
            if (str.equals("RFC"))
                return RFC;
            if (str.equals("RFCS"))
                return RFCS;
		    return null;
        }
    }

	/**
	* specDomain: S16218 (C-0-T13953-A13954-A16208-S16215-S16218-cpt)
	*/
    public enum RefillFirstHerePharmacySupplyType
    {
        
        RFF(0),
        
        RFFS(1);
        
        private int code;
        
        RefillFirstHerePharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RefillFirstHerePharmacySupplyType fromString(String str)
        {
            if (str.equals("RFF"))
                return RFF;
            if (str.equals("RFFS"))
                return RFFS;
		    return null;
        }
    }

	/**
	* specDomain: S16217 (C-0-T13953-A13954-A16208-S16215-S16217-cpt)
	*/
    public enum RefillPartFillPharmacySupplyType
    {
        
        RFP(0),
        
        RFPS(1);
        
        private int code;
        
        RefillPartFillPharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RefillPartFillPharmacySupplyType fromString(String str)
        {
            if (str.equals("RFP"))
                return RFP;
            if (str.equals("RFPS"))
                return RFPS;
		    return null;
        }
    }

	/**
	* specDomain: S16213 (C-0-T13953-A13954-A16208-S16215-S16213-cpt)
	*/
    public enum RefillTrialBalancePharmacySupplyType
    {
        
        TB(0),
        
        TBS(1);
        
        private int code;
        
        RefillTrialBalancePharmacySupplyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RefillTrialBalancePharmacySupplyType fromString(String str)
        {
            if (str.equals("TB"))
                return TB;
            if (str.equals("TBS"))
                return TBS;
		    return null;
        }
    }

	/**
	* abstDomain: A19886 (C-0-T13953-A13954-A19886-cpt)
	*/
    public enum ActPolicyType
    {
        
        COVPOL(0);
        
        private int code;
        
        ActPolicyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActPolicyType fromString(String str)
        {
            if (str.equals("COVPOL"))
                return COVPOL;
		    return null;
        }
    }

	/**
	* specDomain: S17961 (C-0-T13953-A13954-A17958-S17961-cpt)
	*/
    public enum Loan
    {
        
        LOAN(0),
        
        RENT(1);
        
        private int code;
        
        Loan(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Loan fromString(String str)
        {
            if (str.equals("LOAN"))
                return LOAN;
            if (str.equals("RENT"))
                return RENT;
		    return null;
        }
    }

	/**
	* specDomain: S17959 (C-0-T13953-A13954-A17958-S17959-cpt)
	*/
    public enum Transfer
    {
        
        TRANSFER(0),
        
        SALE(1);
        
        private int code;
        
        Transfer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Transfer fromString(String str)
        {
            if (str.equals("TRANSFER"))
                return TRANSFER;
            if (str.equals("SALE"))
                return SALE;
		    return null;
        }
    }

	/**
	* specDomain: S14352 (C-0-T13953-A13954-A13957-S14352-cpt)
	*/
    public enum ActSpecObsDilutionCode
    {
        
        DILUTION(0,"DILUTION"),
        
        AUTO_x002D_HIGH(1,"AUTO-HIGH"),
        
        AUTO_x002D_LOW(2,"AUTO-LOW"),
        
        PRE(3,"PRE"),
        
        RERUN(4,"RERUN");
        
        private int code;
        private java.lang.String xmlValue;
        
        ActSpecObsDilutionCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ActSpecObsDilutionCode fromString(String str)
        {
            if (str.equals("DILUTION"))
                return DILUTION;
            if (str.equals("AUTO-HIGH"))
                return AUTO_x002D_HIGH;
            if (str.equals("AUTO-LOW"))
                return AUTO_x002D_LOW;
            if (str.equals("PRE"))
                return PRE;
            if (str.equals("RERUN"))
                return RERUN;
		    return null;
        }
    }

	/**
	* specDomain: S14382 (C-0-T13953-A13954-A13957-S14382-cpt)
	*/
    public enum ActSpecObsInterferenceCode
    {
        
        INTFR(0),
        
        FIBRIN(1),
        
        HEMOLYSIS(2),
        
        ICTERUS(3),
        
        LIPEMIA(4);
        
        private int code;
        
        ActSpecObsInterferenceCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSpecObsInterferenceCode fromString(String str)
        {
            if (str.equals("INTFR"))
                return INTFR;
            if (str.equals("FIBRIN"))
                return FIBRIN;
            if (str.equals("HEMOLYSIS"))
                return HEMOLYSIS;
            if (str.equals("ICTERUS"))
                return ICTERUS;
            if (str.equals("LIPEMIA"))
                return LIPEMIA;
		    return null;
        }
    }

	/**
	* specDomain: S14369 (C-0-T13953-A13954-A13957-S14369-cpt)
	*/
    public enum ActSpecObsVolumeCode
    {
        
        VOLUME(0),
        
        AVAILABLE(1),
        
        CONSUMPTION(2),
        
        CURRENT(3),
        
        INITIAL(4);
        
        private int code;
        
        ActSpecObsVolumeCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSpecObsVolumeCode fromString(String str)
        {
            if (str.equals("VOLUME"))
                return VOLUME;
            if (str.equals("AVAILABLE"))
                return AVAILABLE;
            if (str.equals("CONSUMPTION"))
                return CONSUMPTION;
            if (str.equals("CURRENT"))
                return CURRENT;
            if (str.equals("INITIAL"))
                return INITIAL;
		    return null;
        }
    }

	/**
	* abstDomain: A14040 (C-0-T13953-A13954-A14040-cpt)
	*/
    public enum ActSpecimenTreatmentCode
    {
        
        ACID(0),
        
        ALK(1),
        
        DEFB(2),
        
        FILT(3),
        
        LDLP(4),
        
        NEUT(5),
        
        RECA(6),
        
        UFIL(7);
        
        private int code;
        
        ActSpecimenTreatmentCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSpecimenTreatmentCode fromString(String str)
        {
            if (str.equals("ACID"))
                return ACID;
            if (str.equals("ALK"))
                return ALK;
            if (str.equals("DEFB"))
                return DEFB;
            if (str.equals("FILT"))
                return FILT;
            if (str.equals("LDLP"))
                return LDLP;
            if (str.equals("NEUT"))
                return NEUT;
            if (str.equals("RECA"))
                return RECA;
            if (str.equals("UFIL"))
                return UFIL;
		    return null;
        }
    }

	/**
	* specDomain: S16623 (C-0-T13953-A13954-A16621-S16623-cpt)
	*/
    public enum SubstanceAdminGenericSubstitution
    {
        
        G(0),
        
        TE(1);
        
        private int code;
        
        SubstanceAdminGenericSubstitution(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubstanceAdminGenericSubstitution fromString(String str)
        {
            if (str.equals("G"))
                return G;
            if (str.equals("TE"))
                return TE;
		    return null;
        }
    }

	/**
	* specDomain: S21519 (C-0-T13953-A13954-A19708-S21519-cpt)
	*/
    public enum ActSubstanceAdministrationImmunizationCode
    {
        
        IMMUNIZ(0),
        
        BOOSTER(1),
        
        INITIMMUNIZ(2);
        
        private int code;
        
        ActSubstanceAdministrationImmunizationCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSubstanceAdministrationImmunizationCode fromString(String str)
        {
            if (str.equals("IMMUNIZ"))
                return IMMUNIZ;
            if (str.equals("BOOSTER"))
                return BOOSTER;
            if (str.equals("INITIMMUNIZ"))
                return INITIMMUNIZ;
		    return null;
        }
    }

	/**
	* abstDomain: A19745 (C-0-T13953-A13954-A19708-A19745-cpt)
	*/
    public enum x_MedicationOrImmunization
    {
        
        DRUG(0),
        
        IMMUNIZ(1);
        
        private int code;
        
        x_MedicationOrImmunization(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_MedicationOrImmunization fromString(String str)
        {
            if (str.equals("DRUG"))
                return DRUG;
            if (str.equals("IMMUNIZ"))
                return IMMUNIZ;
		    return null;
        }
    }

	/**
	* abstDomain: A16117 (C-0-T13953-A13954-A16117-cpt)
	*/
    public enum ROIOverlayShape
    {
        
        CIRCLE(0),
        
        ELLIPSE(1),
        
        POINT(2),
        
        POLY(3);
        
        private int code;
        
        ROIOverlayShape(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ROIOverlayShape fromString(String str)
        {
            if (str.equals("CIRCLE"))
                return CIRCLE;
            if (str.equals("ELLIPSE"))
                return ELLIPSE;
            if (str.equals("POINT"))
                return POINT;
            if (str.equals("POLY"))
                return POLY;
		    return null;
        }
    }

	/**
	* abstDomain: A17963 (C-0-T13953-A13954-A17963-cpt)
	*/
    public enum x_ActFinancialProductAcquisitionCode
    {
        
        RENT(0),
        
        SALE(1);
        
        private int code;
        
        x_ActFinancialProductAcquisitionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActFinancialProductAcquisitionCode fromString(String str)
        {
            if (str.equals("RENT"))
                return RENT;
            if (str.equals("SALE"))
                return SALE;
		    return null;
        }
    }

	/**
	* abstDomain: A19866 (C-0-T13953-A19820-A16130-A19866-cpt)
	*/
    public enum HL7AccommodationCode
    {
        
        I(0),
        
        P(1),
        
        SP(2),
        
        S(3),
        
        W(4);
        
        private int code;
        
        HL7AccommodationCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HL7AccommodationCode fromString(String str)
        {
            if (str.equals("I"))
                return I;
            if (str.equals("P"))
                return P;
            if (str.equals("SP"))
                return SP;
            if (str.equals("S"))
                return S;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* specDomain: S16847 (C-0-T13953-A19820-A13955-S16847-cpt)
	*/
    public enum ActInpatientEncounterCode
    {
        
        IMP(0),
        
        ACUTE(1),
        
        NONAC(2);
        
        private int code;
        
        ActInpatientEncounterCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInpatientEncounterCode fromString(String str)
        {
            if (str.equals("IMP"))
                return IMP;
            if (str.equals("ACUTE"))
                return ACUTE;
            if (str.equals("NONAC"))
                return NONAC;
		    return null;
        }
    }

	/**
	* abstDomain: A17449 (C-0-T13953-A19820-A13955-A17449-cpt)
	*/
    public enum ActMedicalServiceCode
    {
        
        ALC(0),
        
        CARD(1),
        
        CHR(2),
        
        DNTL(3),
        
        DRGRHB(4),
        
        GENRL(5),
        
        MED(6),
        
        OBS(7),
        
        ONC(8),
        
        PALL(9),
        
        PED(10),
        
        PHAR(11),
        
        PHYRHB(12),
        
        PSYCH(13),
        
        SURG(14);
        
        private int code;
        
        ActMedicalServiceCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActMedicalServiceCode fromString(String str)
        {
            if (str.equals("ALC"))
                return ALC;
            if (str.equals("CARD"))
                return CARD;
            if (str.equals("CHR"))
                return CHR;
            if (str.equals("DNTL"))
                return DNTL;
            if (str.equals("DRGRHB"))
                return DRGRHB;
            if (str.equals("GENRL"))
                return GENRL;
            if (str.equals("MED"))
                return MED;
            if (str.equals("OBS"))
                return OBS;
            if (str.equals("ONC"))
                return ONC;
            if (str.equals("PALL"))
                return PALL;
            if (str.equals("PED"))
                return PED;
            if (str.equals("PHAR"))
                return PHAR;
            if (str.equals("PHYRHB"))
                return PHYRHB;
            if (str.equals("PSYCH"))
                return PSYCH;
            if (str.equals("SURG"))
                return SURG;
		    return null;
        }
    }

	/**
	* specDomain: S21547 (C-0-T13953-A19820-A19732-A19733-S21547-cpt)
	*/
    public enum Ambulance
    {
        
        AMBT(0),
        
        AMBAIR(1),
        
        AMBGRND(2),
        
        AMBHELO(3);
        
        private int code;
        
        Ambulance(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Ambulance fromString(String str)
        {
            if (str.equals("AMBT"))
                return AMBT;
            if (str.equals("AMBAIR"))
                return AMBAIR;
            if (str.equals("AMBGRND"))
                return AMBGRND;
            if (str.equals("AMBHELO"))
                return AMBHELO;
		    return null;
        }
    }

	/**
	* abstDomain: A19751 (C-0-T13953-A19820-A16226-A19751-cpt)
	*/
    public enum MedicationObservationType
    {
        
        SPLCOATING(0),
        
        SPLCOLOR(1),
        
        SPLIMAGE(2),
        
        SPLIMPRINT(3),
        
        REP_HALF_LIFE(4),
        
        SPLSCORING(5),
        
        SPLSHAPE(6),
        
        SPLSIZE(7),
        
        SPLSYMBOL(8);
        
        private int code;
        
        MedicationObservationType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MedicationObservationType fromString(String str)
        {
            if (str.equals("SPLCOATING"))
                return SPLCOATING;
            if (str.equals("SPLCOLOR"))
                return SPLCOLOR;
            if (str.equals("SPLIMAGE"))
                return SPLIMAGE;
            if (str.equals("SPLIMPRINT"))
                return SPLIMPRINT;
            if (str.equals("REP_HALF_LIFE"))
                return REP_HALF_LIFE;
            if (str.equals("SPLSCORING"))
                return SPLSCORING;
            if (str.equals("SPLSHAPE"))
                return SPLSHAPE;
            if (str.equals("SPLSIZE"))
                return SPLSIZE;
            if (str.equals("SPLSYMBOL"))
                return SPLSYMBOL;
		    return null;
        }
    }

	/**
	* abstDomain: A19758 (C-0-T13953-A19820-A16226-A19757-A19758-cpt)
	*/
    public enum LOINCObservationActContextAgeType
    {
        
        _30972_x002D_4(0,"30972-4"),
        
        _29553_x002D_5(1,"29553-5"),
        
        _30525_x002D_0(2,"30525-0"),
        
        _21611_x002D_9(3,"21611-9"),
        
        _21612_x002D_7(4,"21612-7");
        
        private int code;
        private java.lang.String xmlValue;
        
        LOINCObservationActContextAgeType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static LOINCObservationActContextAgeType fromString(String str)
        {
            if (str.equals("30972-4"))
                return _30972_x002D_4;
            if (str.equals("29553-5"))
                return _29553_x002D_5;
            if (str.equals("30525-0"))
                return _30525_x002D_0;
            if (str.equals("21611-9"))
                return _21611_x002D_9;
            if (str.equals("21612-7"))
                return _21612_x002D_7;
		    return null;
        }
    }

	/**
	* specDomain: S20927 (C-0-T13953-A19820-A16226-S20927-cpt)
	*/
    public enum ObservationDiagnosisTypes
    {
        
        DX(0),
        
        ADMDX(1),
        
        DISDX(2),
        
        INTDX(3),
        
        NOI(4);
        
        private int code;
        
        ObservationDiagnosisTypes(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationDiagnosisTypes fromString(String str)
        {
            if (str.equals("DX"))
                return DX;
            if (str.equals("ADMDX"))
                return ADMDX;
            if (str.equals("DISDX"))
                return DISDX;
            if (str.equals("INTDX"))
                return INTDX;
            if (str.equals("NOI"))
                return NOI;
		    return null;
        }
    }

	/**
	* specDomain: S21499 (C-0-T13953-A19820-A16226-S21498-S21499-cpt)
	*/
    public enum ObservationAllergyType
    {
        
        ALG(0),
        
        DALG(1),
        
        EALG(2),
        
        FALG(3);
        
        private int code;
        
        ObservationAllergyType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationAllergyType fromString(String str)
        {
            if (str.equals("ALG"))
                return ALG;
            if (str.equals("DALG"))
                return DALG;
            if (str.equals("EALG"))
                return EALG;
            if (str.equals("FALG"))
                return FALG;
		    return null;
        }
    }

	/**
	* specDomain: S21501 (C-0-T13953-A19820-A16226-S21498-S21501-cpt)
	*/
    public enum ObservationDrugIntoleranceType
    {
        
        DINT(0),
        
        DALG(1),
        
        DNAINT(2);
        
        private int code;
        
        ObservationDrugIntoleranceType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationDrugIntoleranceType fromString(String str)
        {
            if (str.equals("DINT"))
                return DINT;
            if (str.equals("DALG"))
                return DALG;
            if (str.equals("DNAINT"))
                return DNAINT;
		    return null;
        }
    }

	/**
	* specDomain: S21503 (C-0-T13953-A19820-A16226-S21498-S21503-cpt)
	*/
    public enum ObservationEnvironmentalIntoleranceType
    {
        
        EINT(0),
        
        EALG(1),
        
        ENAINT(2);
        
        private int code;
        
        ObservationEnvironmentalIntoleranceType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationEnvironmentalIntoleranceType fromString(String str)
        {
            if (str.equals("EINT"))
                return EINT;
            if (str.equals("EALG"))
                return EALG;
            if (str.equals("ENAINT"))
                return ENAINT;
		    return null;
        }
    }

	/**
	* specDomain: S21502 (C-0-T13953-A19820-A16226-S21498-S21502-cpt)
	*/
    public enum ObservationFoodIntoleranceType
    {
        
        FINT(0),
        
        FALG(1),
        
        FNAINT(2);
        
        private int code;
        
        ObservationFoodIntoleranceType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationFoodIntoleranceType fromString(String str)
        {
            if (str.equals("FINT"))
                return FINT;
            if (str.equals("FALG"))
                return FALG;
            if (str.equals("FNAINT"))
                return FNAINT;
		    return null;
        }
    }

	/**
	* specDomain: S21500 (C-0-T13953-A19820-A16226-S21498-S21500-cpt)
	*/
    public enum ObservationNonAllergyIntoleranceType
    {
        
        NAINT(0),
        
        DNAINT(1),
        
        ENAINT(2),
        
        FNAINT(3);
        
        private int code;
        
        ObservationNonAllergyIntoleranceType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationNonAllergyIntoleranceType fromString(String str)
        {
            if (str.equals("NAINT"))
                return NAINT;
            if (str.equals("DNAINT"))
                return DNAINT;
            if (str.equals("ENAINT"))
                return ENAINT;
            if (str.equals("FNAINT"))
                return FNAINT;
		    return null;
        }
    }

	/**
	* abstDomain: A19795 (C-0-T13953-A19820-A16226-A19712-A19795-cpt)
	*/
    public enum CaseTransmissionMode
    {
        
        AIRTRNS(0),
        
        ANANTRNS(1),
        
        ANHUMTRNS(2),
        
        BLDTRNS(3),
        
        BDYFLDTRNS(4),
        
        ENVTRNS(5),
        
        FECTRNS(6),
        
        FOMTRNS(7),
        
        FOODTRNS(8),
        
        HUMHUMTRNS(9),
        
        INDTRNS(10),
        
        LACTTRNS(11),
        
        NOSTRNS(12),
        
        PARTRNS(13),
        
        SEXTRNS(14),
        
        DERMTRNS(15),
        
        TRNSFTRNS(16),
        
        PLACTRNS(17),
        
        VECTRNS(18),
        
        WATTRNS(19);
        
        private int code;
        
        CaseTransmissionMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CaseTransmissionMode fromString(String str)
        {
            if (str.equals("AIRTRNS"))
                return AIRTRNS;
            if (str.equals("ANANTRNS"))
                return ANANTRNS;
            if (str.equals("ANHUMTRNS"))
                return ANHUMTRNS;
            if (str.equals("BLDTRNS"))
                return BLDTRNS;
            if (str.equals("BDYFLDTRNS"))
                return BDYFLDTRNS;
            if (str.equals("ENVTRNS"))
                return ENVTRNS;
            if (str.equals("FECTRNS"))
                return FECTRNS;
            if (str.equals("FOMTRNS"))
                return FOMTRNS;
            if (str.equals("FOODTRNS"))
                return FOODTRNS;
            if (str.equals("HUMHUMTRNS"))
                return HUMHUMTRNS;
            if (str.equals("INDTRNS"))
                return INDTRNS;
            if (str.equals("LACTTRNS"))
                return LACTTRNS;
            if (str.equals("NOSTRNS"))
                return NOSTRNS;
            if (str.equals("PARTRNS"))
                return PARTRNS;
            if (str.equals("SEXTRNS"))
                return SEXTRNS;
            if (str.equals("DERMTRNS"))
                return DERMTRNS;
            if (str.equals("TRNSFTRNS"))
                return TRNSFTRNS;
            if (str.equals("PLACTRNS"))
                return PLACTRNS;
            if (str.equals("VECTRNS"))
                return VECTRNS;
            if (str.equals("WATTRNS"))
                return WATTRNS;
		    return null;
        }
    }

	/**
	* abstDomain: A19322 (C-0-T13953-A19820-A16226-A19321-A19322-cpt)
	*/
    public enum ECGObservationSeriesType
    {
        
        REPRESENTATIVE_BEAT(0),
        
        RHYTHM(1);
        
        private int code;
        
        ECGObservationSeriesType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ECGObservationSeriesType fromString(String str)
        {
            if (str.equals("REPRESENTATIVE_BEAT"))
                return REPRESENTATIVE_BEAT;
            if (str.equals("RHYTHM"))
                return RHYTHM;
		    return null;
        }
    }

	/**
	* abstDomain: A19663 (C-0-T13953-A19656-A19663-cpt)
	*/
    public enum ActSpecimenTransportCode
    {
        
        SSTOR(0),
        
        STRAN(1),
        
        SREC(2);
        
        private int code;
        
        ActSpecimenTransportCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSpecimenTransportCode fromString(String str)
        {
            if (str.equals("SSTOR"))
                return SSTOR;
            if (str.equals("STRAN"))
                return STRAN;
            if (str.equals("SREC"))
                return SREC;
		    return null;
        }
    }

	/**
	* vocSet: T19939 (C-0-T19939-cpt)
	*/
    public enum ActExposureLevelCode
    {
        
        HIGH(0),
        
        LOW(1),
        
        MEDIUM(2);
        
        private int code;
        
        ActExposureLevelCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActExposureLevelCode fromString(String str)
        {
            if (str.equals("HIGH"))
                return HIGH;
            if (str.equals("LOW"))
                return LOW;
            if (str.equals("MEDIUM"))
                return MEDIUM;
		    return null;
        }
    }

	/**
	* vocSet: T17704 (C-0-T17704-cpt)
	*/
    public enum ActInvoiceElementModifier
    {
        
        EFORM(0),
        
        FAX(1),
        
        LINV(2),
        
        PAPER(3);
        
        private int code;
        
        ActInvoiceElementModifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActInvoiceElementModifier fromString(String str)
        {
            if (str.equals("EFORM"))
                return EFORM;
            if (str.equals("FAX"))
                return FAX;
            if (str.equals("LINV"))
                return LINV;
            if (str.equals("PAPER"))
                return PAPER;
		    return null;
        }
    }

	/**
	* specDomain: S16726 (C-0-T10196-A10197-S10199-S16726-cpt)
	*/
    public enum ActMoodProposal
    {
        
        PRP(0),
        
        RMD(1);
        
        private int code;
        
        ActMoodProposal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActMoodProposal fromString(String str)
        {
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RMD"))
                return RMD;
		    return null;
        }
    }

	/**
	* specDomain: S22042 (C-0-T10196-A10202-S22042-cpt)
	*/
    public enum ActMoodCriterion
    {
        
        CRT(0,"CRT"),
        
        EVN_x002E_CRT(1,"EVN.CRT");
        
        private int code;
        private java.lang.String xmlValue;
        
        ActMoodCriterion(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ActMoodCriterion fromString(String str)
        {
            if (str.equals("CRT"))
                return CRT;
            if (str.equals("EVN.CRT"))
                return EVN_x002E_CRT;
		    return null;
        }
    }

	/**
	* abstDomain: A19375 (C-0-T10196-A19375-cpt)
	*/
    public enum x_ActMoodDefEvn
    {
        
        DEF(0),
        
        EVN(1);
        
        private int code;
        
        x_ActMoodDefEvn(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodDefEvn fromString(String str)
        {
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
		    return null;
        }
    }

	/**
	* abstDomain: A19762 (C-0-T10196-A19762-cpt)
	*/
    public enum x_ActMoodDefEvnRqo
    {
        
        DEF(0),
        
        EVN(1),
        
        RQO(2);
        
        private int code;
        
        x_ActMoodDefEvnRqo(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodDefEvnRqo fromString(String str)
        {
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19371 (C-0-T10196-A19371-cpt)
	*/
    public enum x_ActMoodDefEvnRqoPrmsPrp
    {
        
        DEF(0),
        
        EVN(1),
        
        PRMS(2),
        
        PRP(3),
        
        RQO(4);
        
        private int code;
        
        x_ActMoodDefEvnRqoPrmsPrp(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodDefEvnRqoPrmsPrp fromString(String str)
        {
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A18943 (C-0-T10196-A18943-cpt)
	*/
    public enum x_ActMoodDocumentObservation
    {
        
        GOL(0),
        
        DEF(1),
        
        EVN(2),
        
        INT(3),
        
        PRMS(4),
        
        PRP(5),
        
        RQO(6);
        
        private int code;
        
        x_ActMoodDocumentObservation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodDocumentObservation fromString(String str)
        {
            if (str.equals("GOL"))
                return GOL;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A18965 (C-0-T10196-A18965-cpt)
	*/
    public enum x_ActMoodEvnOrdPrmsPrp
    {
        
        EVN(0),
        
        PRMS(1),
        
        PRP(2),
        
        RQO(3);
        
        private int code;
        
        x_ActMoodEvnOrdPrmsPrp(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodEvnOrdPrmsPrp fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A16742 (C-0-T10196-A16742-cpt)
	*/
    public enum x_ActMoodIntentEvent
    {
        
        EVN(0);
        
        private int code;
        
        x_ActMoodIntentEvent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodIntentEvent fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
		    return null;
        }
    }

	/**
	* abstDomain: A16735 (C-0-T10196-A16735-cpt)
	*/
    public enum x_ActMoodOrdPrms
    {
        
        PRMS(0),
        
        RQO(1);
        
        private int code;
        
        x_ActMoodOrdPrms(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodOrdPrms fromString(String str)
        {
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A16730 (C-0-T10196-A16730-cpt)
	*/
    public enum x_ActMoodOrdPrmsEvn
    {
        
        EVN(0),
        
        PRMS(1),
        
        RQO(2);
        
        private int code;
        
        x_ActMoodOrdPrmsEvn(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodOrdPrmsEvn fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19689 (C-0-T10196-A19689-cpt)
	*/
    public enum x_ActMoodPermPermrq
    {
        
        PERM(0),
        
        PERMRQ(1);
        
        private int code;
        
        x_ActMoodPermPermrq(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodPermPermrq fromString(String str)
        {
            if (str.equals("PERM"))
                return PERM;
            if (str.equals("PERMRQ"))
                return PERMRQ;
		    return null;
        }
    }

	/**
	* abstDomain: A19763 (C-0-T10196-A19763-cpt)
	*/
    public enum x_ActMoodRequestEvent
    {
        
        EVN(0),
        
        RQO(1);
        
        private int code;
        
        x_ActMoodRequestEvent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodRequestEvent fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19372 (C-0-T10196-A19372-cpt)
	*/
    public enum x_ActMoodRqoPrpAptArq
    {
        
        APT(0),
        
        ARQ(1),
        
        PRP(2),
        
        RQO(3);
        
        private int code;
        
        x_ActMoodRqoPrpAptArq(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActMoodRqoPrpAptArq fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19649 (C-0-T10196-A19649-cpt)
	*/
    public enum x_ClinicalStatementActMood
    {
        
        APT(0),
        
        ARQ(1),
        
        DEF(2),
        
        EVN(3),
        
        INT(4),
        
        PRMS(5),
        
        PRP(6),
        
        RQO(7);
        
        private int code;
        
        x_ClinicalStatementActMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementActMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19648 (C-0-T10196-A19648-cpt)
	*/
    public enum x_ClinicalStatementEncounterMood
    {
        
        APT(0),
        
        ARQ(1),
        
        EVN(2),
        
        INT(3),
        
        PRMS(4),
        
        PRP(5),
        
        RQO(6);
        
        private int code;
        
        x_ClinicalStatementEncounterMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementEncounterMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19644 (C-0-T10196-A19644-cpt)
	*/
    public enum x_ClinicalStatementObservationMood
    {
        
        GOL(0),
        
        APT(1),
        
        ARQ(2),
        
        DEF(3),
        
        EVN(4),
        
        INT(5),
        
        PRMS(6),
        
        PRP(7),
        
        RQO(8);
        
        private int code;
        
        x_ClinicalStatementObservationMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementObservationMood fromString(String str)
        {
            if (str.equals("GOL"))
                return GOL;
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19647 (C-0-T10196-A19647-cpt)
	*/
    public enum x_ClinicalStatementProcedureMood
    {
        
        APT(0),
        
        ARQ(1),
        
        DEF(2),
        
        EVN(3),
        
        INT(4),
        
        PRMS(5),
        
        PRP(6),
        
        RQO(7);
        
        private int code;
        
        x_ClinicalStatementProcedureMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementProcedureMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19645 (C-0-T10196-A19645-cpt)
	*/
    public enum x_ClinicalStatementSubstanceMood
    {
        
        EVN(0),
        
        INT(1),
        
        PRMS(2),
        
        PRP(3),
        
        RQO(4);
        
        private int code;
        
        x_ClinicalStatementSubstanceMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementSubstanceMood fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19646 (C-0-T10196-A19646-cpt)
	*/
    public enum x_ClinicalStatementSupplyMood
    {
        
        EVN(0),
        
        INT(1);
        
        private int code;
        
        x_ClinicalStatementSupplyMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ClinicalStatementSupplyMood fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
		    return null;
        }
    }

	/**
	* abstDomain: A19458 (C-0-T10196-A19458-cpt)
	*/
    public enum x_DocumentActMood
    {
        
        APT(0),
        
        ARQ(1),
        
        DEF(2),
        
        EVN(3),
        
        INT(4),
        
        PRMS(5),
        
        PRP(6),
        
        RQO(7);
        
        private int code;
        
        x_DocumentActMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentActMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19459 (C-0-T10196-A19459-cpt)
	*/
    public enum x_DocumentEncounterMood
    {
        
        APT(0),
        
        ARQ(1),
        
        EVN(2),
        
        INT(3),
        
        PRMS(4),
        
        PRP(5),
        
        RQO(6);
        
        private int code;
        
        x_DocumentEncounterMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentEncounterMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19460 (C-0-T10196-A19460-cpt)
	*/
    public enum x_DocumentProcedureMood
    {
        
        APT(0),
        
        ARQ(1),
        
        DEF(2),
        
        EVN(3),
        
        INT(4),
        
        PRMS(5),
        
        PRP(6),
        
        RQO(7);
        
        private int code;
        
        x_DocumentProcedureMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentProcedureMood fromString(String str)
        {
            if (str.equals("APT"))
                return APT;
            if (str.equals("ARQ"))
                return ARQ;
            if (str.equals("DEF"))
                return DEF;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* abstDomain: A19461 (C-0-T10196-A19461-cpt)
	*/
    public enum x_DocumentSubstanceMood
    {
        
        EVN(0),
        
        INT(1),
        
        PRMS(2),
        
        PRP(3),
        
        RQO(4);
        
        private int code;
        
        x_DocumentSubstanceMood(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentSubstanceMood fromString(String str)
        {
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("INT"))
                return INT;
            if (str.equals("PRMS"))
                return PRMS;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("RQO"))
                return RQO;
		    return null;
        }
    }

	/**
	* specDomain: S16871 (C-0-T16866-S16871-cpt)
	*/
    public enum ActPriorityCallback
    {
        
        CS(0),
        
        CSP(1),
        
        CSR(2);
        
        private int code;
        
        ActPriorityCallback(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActPriorityCallback fromString(String str)
        {
            if (str.equals("CS"))
                return CS;
            if (str.equals("CSP"))
                return CSP;
            if (str.equals("CSR"))
                return CSR;
		    return null;
        }
    }

	/**
	* abstDomain: A19457 (C-0-T16866-A19457-cpt)
	*/
    public enum x_EncounterAdmissionUrgency
    {
        
        EL(0),
        
        EM(1),
        
        R(2),
        
        UR(3);
        
        private int code;
        
        x_EncounterAdmissionUrgency(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_EncounterAdmissionUrgency fromString(String str)
        {
            if (str.equals("EL"))
                return EL;
            if (str.equals("EM"))
                return EM;
            if (str.equals("R"))
                return R;
            if (str.equals("UR"))
                return UR;
		    return null;
        }
    }

	/**
	* abstDomain: A17425 (C-0-T14878-A17425-cpt)
	*/
    public enum ActAccommodationReason
    {
        
        ACCREQNA(0),
        
        FLRCNV(1),
        
        MEDNEC(2),
        
        PAT(3);
        
        private int code;
        
        ActAccommodationReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActAccommodationReason fromString(String str)
        {
            if (str.equals("ACCREQNA"))
                return ACCREQNA;
            if (str.equals("FLRCNV"))
                return FLRCNV;
            if (str.equals("MEDNEC"))
                return MEDNEC;
            if (str.equals("PAT"))
                return PAT;
		    return null;
        }
    }

	/**
	* abstDomain: A19894 (C-0-T14878-A19894-cpt)
	*/
    public enum ActConsentInformationAccessOverrideReason
    {
        
        OVRER(0),
        
        OVRPJ(1),
        
        OVRPS(2),
        
        OVRTPS(3);
        
        private int code;
        
        ActConsentInformationAccessOverrideReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActConsentInformationAccessOverrideReason fromString(String str)
        {
            if (str.equals("OVRER"))
                return OVRER;
            if (str.equals("OVRPJ"))
                return OVRPJ;
            if (str.equals("OVRPS"))
                return OVRPS;
            if (str.equals("OVRTPS"))
                return OVRTPS;
		    return null;
        }
    }

	/**
	* abstDomain: A19355 (C-0-T14878-A19871-A19694-A19355-cpt)
	*/
    public enum ActIneligibilityReason
    {
        
        COVSUS(0),
        
        DECSD(1),
        
        REGERR(2);
        
        private int code;
        
        ActIneligibilityReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActIneligibilityReason fromString(String str)
        {
            if (str.equals("COVSUS"))
                return COVSUS;
            if (str.equals("DECSD"))
                return DECSD;
            if (str.equals("REGERR"))
                return REGERR;
		    return null;
        }
    }

	/**
	* abstDomain: A19735 (C-0-T14878-A19871-A19694-A19735-cpt)
	*/
    public enum CoverageEligibilityReason
    {
        
        AGE(0),
        
        CRIME(1),
        
        DIS(2),
        
        EMPLOY(3),
        
        FINAN(4),
        
        HEALTH(5),
        
        VEHIC(6),
        
        MULTI(7),
        
        PNC(8),
        
        STATUTORY(9),
        
        WORK(10);
        
        private int code;
        
        CoverageEligibilityReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CoverageEligibilityReason fromString(String str)
        {
            if (str.equals("AGE"))
                return AGE;
            if (str.equals("CRIME"))
                return CRIME;
            if (str.equals("DIS"))
                return DIS;
            if (str.equals("EMPLOY"))
                return EMPLOY;
            if (str.equals("FINAN"))
                return FINAN;
            if (str.equals("HEALTH"))
                return HEALTH;
            if (str.equals("VEHIC"))
                return VEHIC;
            if (str.equals("MULTI"))
                return MULTI;
            if (str.equals("PNC"))
                return PNC;
            if (str.equals("STATUTORY"))
                return STATUTORY;
            if (str.equals("WORK"))
                return WORK;
		    return null;
        }
    }

	/**
	* abstDomain: A19717 (C-0-T14878-A19717-cpt)
	*/
    public enum ActNoImmunizationReason
    {
        
        IMMUNE(0),
        
        MEDPREC(1),
        
        OSTOCK(2),
        
        PATOBJ(3),
        
        PHILISOP(4),
        
        RELIG(5),
        
        VACEFF(6),
        
        VACSAF(7);
        
        private int code;
        
        ActNoImmunizationReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActNoImmunizationReason fromString(String str)
        {
            if (str.equals("IMMUNE"))
                return IMMUNE;
            if (str.equals("MEDPREC"))
                return MEDPREC;
            if (str.equals("OSTOCK"))
                return OSTOCK;
            if (str.equals("PATOBJ"))
                return PATOBJ;
            if (str.equals("PHILISOP"))
                return PHILISOP;
            if (str.equals("RELIG"))
                return RELIG;
            if (str.equals("VACEFF"))
                return VACEFF;
            if (str.equals("VACSAF"))
                return VACSAF;
		    return null;
        }
    }

	/**
	* abstDomain: A19718 (C-0-T14878-A19718-cpt)
	*/
    public enum ActSupplyFulfillmentRefusalReason
    {
        
        FRR05(0),
        
        FRR03(1),
        
        FRR01(2),
        
        FRR04(3),
        
        FRR02(4),
        
        FRR06(5);
        
        private int code;
        
        ActSupplyFulfillmentRefusalReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActSupplyFulfillmentRefusalReason fromString(String str)
        {
            if (str.equals("FRR05"))
                return FRR05;
            if (str.equals("FRR03"))
                return FRR03;
            if (str.equals("FRR01"))
                return FRR01;
            if (str.equals("FRR04"))
                return FRR04;
            if (str.equals("FRR02"))
                return FRR02;
            if (str.equals("FRR06"))
                return FRR06;
		    return null;
        }
    }

	/**
	* abstDomain: A19755 (C-0-T14878-A19754-A19755-cpt)
	*/
    public enum ClinicalResearchEventReason
    {
        
        RET(0),
        
        SCH(1),
        
        TRM(2),
        
        UNS(3);
        
        private int code;
        
        ClinicalResearchEventReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ClinicalResearchEventReason fromString(String str)
        {
            if (str.equals("RET"))
                return RET;
            if (str.equals("SCH"))
                return SCH;
            if (str.equals("TRM"))
                return TRM;
            if (str.equals("UNS"))
                return UNS;
		    return null;
        }
    }

	/**
	* abstDomain: A19756 (C-0-T14878-A19754-A19756-cpt)
	*/
    public enum ClinicalResearchObservationReason
    {
        
        NPT(0),
        
        UPT(1),
        
        PPT(2);
        
        private int code;
        
        ClinicalResearchObservationReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ClinicalResearchObservationReason fromString(String str)
        {
            if (str.equals("NPT"))
                return NPT;
            if (str.equals("UPT"))
                return UPT;
            if (str.equals("PPT"))
                return PPT;
		    return null;
        }
    }

	/**
	* abstDomain: A19779 (C-0-T14878-A19692-A19779-cpt)
	*/
    public enum CombinedPharmacyOrderSuspendReasonCode
    {
        
        HOSPADM(0,"HOSPADM"),
        
        SALG(1,"SALG"),
        
        SDDI(2,"SDDI"),
        
        DRUGHIGH(3,"DRUGHIGH"),
        
        SDUPTHER(4,"SDUPTHER"),
        
        SINTOL(5,"SINTOL"),
        
        LABINT(6,"LABINT"),
        
        PREG(7,"PREG"),
        
        NON_x002D_AVAIL(8,"NON-AVAIL"),
        
        SURG(9,"SURG"),
        
        CLARIF(10,"CLARIF"),
        
        ALTCHOICE(11,"ALTCHOICE"),
        
        WASHOUT(12,"WASHOUT");
        
        private int code;
        private java.lang.String xmlValue;
        
        CombinedPharmacyOrderSuspendReasonCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CombinedPharmacyOrderSuspendReasonCode fromString(String str)
        {
            if (str.equals("HOSPADM"))
                return HOSPADM;
            if (str.equals("SALG"))
                return SALG;
            if (str.equals("SDDI"))
                return SDDI;
            if (str.equals("DRUGHIGH"))
                return DRUGHIGH;
            if (str.equals("SDUPTHER"))
                return SDUPTHER;
            if (str.equals("SINTOL"))
                return SINTOL;
            if (str.equals("LABINT"))
                return LABINT;
            if (str.equals("PREG"))
                return PREG;
            if (str.equals("NON-AVAIL"))
                return NON_x002D_AVAIL;
            if (str.equals("SURG"))
                return SURG;
            if (str.equals("CLARIF"))
                return CLARIF;
            if (str.equals("ALTCHOICE"))
                return ALTCHOICE;
            if (str.equals("WASHOUT"))
                return WASHOUT;
		    return null;
        }
    }

	/**
	* abstDomain: A19826 (C-0-T14878-A19692-A19826-cpt)
	*/
    public enum ConrolActNullificationReasonCode
    {
        
        ALTD(0),
        
        EIE(1);
        
        private int code;
        
        ConrolActNullificationReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConrolActNullificationReasonCode fromString(String str)
        {
            if (str.equals("ALTD"))
                return ALTD;
            if (str.equals("EIE"))
                return EIE;
		    return null;
        }
    }

	/**
	* abstDomain: A19777 (C-0-T14878-A19692-A19777-cpt)
	*/
    public enum GenericUpdateReasonCode
    {
        
        FIXDATA(0),
        
        CHGDATA(1),
        
        NEWDATA(2);
        
        private int code;
        
        GenericUpdateReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GenericUpdateReasonCode fromString(String str)
        {
            if (str.equals("FIXDATA"))
                return FIXDATA;
            if (str.equals("CHGDATA"))
                return CHGDATA;
            if (str.equals("NEWDATA"))
                return NEWDATA;
		    return null;
        }
    }

	/**
	* specDomain: S21659 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S21659-cpt)
	*/
    public enum CodeIsNotValid
    {
        
        CODE_INVAL(0),
        
        CODE_DEPREC(1);
        
        private int code;
        
        CodeIsNotValid(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CodeIsNotValid fromString(String str)
        {
            if (str.equals("CODE_INVAL"))
                return CODE_INVAL;
            if (str.equals("CODE_DEPREC"))
                return CODE_DEPREC;
		    return null;
        }
    }

	/**
	* specDomain: S16688 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S16687-S16688-cpt)
	*/
    public enum DuplicateTherapyAlert
    {
        
        DUPTHPY(0),
        
        DUPTHPGEN(1),
        
        DUPTHPCLS(2);
        
        private int code;
        
        DuplicateTherapyAlert(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DuplicateTherapyAlert fromString(String str)
        {
            if (str.equals("DUPTHPY"))
                return DUPTHPY;
            if (str.equals("DUPTHPGEN"))
                return DUPTHPGEN;
            if (str.equals("DUPTHPCLS"))
                return DUPTHPCLS;
		    return null;
        }
    }

	/**
	* specDomain: S16680 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S16680-cpt)
	*/
    public enum DosageProblem
    {
        
        DOSE(0),
        
        DOSEDUR(1),
        
        DOSEIVL(2),
        
        DOSEH(3),
        
        DOSEL(4),
        
        DOSECOND(5),
        
        MDOSE(6);
        
        private int code;
        
        DosageProblem(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DosageProblem fromString(String str)
        {
            if (str.equals("DOSE"))
                return DOSE;
            if (str.equals("DOSEDUR"))
                return DOSEDUR;
            if (str.equals("DOSEIVL"))
                return DOSEIVL;
            if (str.equals("DOSEH"))
                return DOSEH;
            if (str.equals("DOSEL"))
                return DOSEL;
            if (str.equals("DOSECOND"))
                return DOSECOND;
            if (str.equals("MDOSE"))
                return MDOSE;
		    return null;
        }
    }

	/**
	* specDomain: S21656 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S21656-cpt)
	*/
    public enum LengthOutOfRange
    {
        
        LEN_RANGE(0),
        
        LEN_LONG(1),
        
        LEN_SHORT(2);
        
        private int code;
        
        LengthOutOfRange(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LengthOutOfRange fromString(String str)
        {
            if (str.equals("LEN_RANGE"))
                return LEN_RANGE;
            if (str.equals("LEN_LONG"))
                return LEN_LONG;
            if (str.equals("LEN_SHORT"))
                return LEN_SHORT;
		    return null;
        }
    }

	/**
	* specDomain: S16664 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S16664-cpt)
	*/
    public enum ObservationAlert
    {
        
        OBSA(0),
        
        AGE(1),
        
        COND(2),
        
        GEND(3),
        
        GEN(4),
        
        LAB(5),
        
        REACT(6),
        
        RREACT(7),
        
        CREACT(8);
        
        private int code;
        
        ObservationAlert(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationAlert fromString(String str)
        {
            if (str.equals("OBSA"))
                return OBSA;
            if (str.equals("AGE"))
                return AGE;
            if (str.equals("COND"))
                return COND;
            if (str.equals("GEND"))
                return GEND;
            if (str.equals("GEN"))
                return GEN;
            if (str.equals("LAB"))
                return LAB;
            if (str.equals("REACT"))
                return REACT;
            if (str.equals("RREACT"))
                return RREACT;
            if (str.equals("CREACT"))
                return CREACT;
		    return null;
        }
    }

	/**
	* specDomain: S21662 (C-0-T14878-A19692-A19781-A16124-A19429-A19620-S21651-S21662-cpt)
	*/
    public enum RepetitionsOutOfRange
    {
        
        REP_RANGE(0),
        
        MAXOCCURS(1),
        
        MINOCCURS(2);
        
        private int code;
        
        RepetitionsOutOfRange(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RepetitionsOutOfRange fromString(String str)
        {
            if (str.equals("REP_RANGE"))
                return REP_RANGE;
            if (str.equals("MAXOCCURS"))
                return MAXOCCURS;
            if (str.equals("MINOCCURS"))
                return MINOCCURS;
		    return null;
        }
    }

	/**
	* abstDomain: A19621 (C-0-T14878-A19692-A19781-A16124-A19429-A19621-cpt)
	*/
    public enum ActAdministrativeRuleDetectedIssueCode
    {
        
        KEY205(0),
        
        KEY204(1);
        
        private int code;
        
        ActAdministrativeRuleDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActAdministrativeRuleDetectedIssueCode fromString(String str)
        {
            if (str.equals("KEY205"))
                return KEY205;
            if (str.equals("KEY204"))
                return KEY204;
		    return null;
        }
    }

	/**
	* specDomain: S16688 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16688-cpt)
	*/
    public enum AdministrationDetectedIssueCodeDuplicateTherapyAlertByBOT
    {
        
        DUPTHPY(0),
        
        DUPTHPGEN(1),
        
        DUPTHPCLS(2);
        
        private int code;
        
        AdministrationDetectedIssueCodeDuplicateTherapyAlertByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdministrationDetectedIssueCodeDuplicateTherapyAlertByBOT fromString(String str)
        {
            if (str.equals("DUPTHPY"))
                return DUPTHPY;
            if (str.equals("DUPTHPGEN"))
                return DUPTHPGEN;
            if (str.equals("DUPTHPCLS"))
                return DUPTHPCLS;
		    return null;
        }
    }

	/**
	* specDomain: S17807 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-A16659-S17807-cpt)
	*/
    public enum TherapeuticProductDetectedIssueCode
    {
        
        TPROD(0),
        
        DRG(1),
        
        NHP(2),
        
        NONRX(3);
        
        private int code;
        
        TherapeuticProductDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TherapeuticProductDetectedIssueCode fromString(String str)
        {
            if (str.equals("TPROD"))
                return TPROD;
            if (str.equals("DRG"))
                return DRG;
            if (str.equals("NHP"))
                return NHP;
            if (str.equals("NONRX"))
                return NONRX;
		    return null;
        }
    }

	/**
	* specDomain: S16669 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-S16664-S16669-cpt)
	*/
    public enum AgeDetectedIssueCode
    {
        
        AGE(0),
        
        DOSEHINDA(1),
        
        DOSELINDA(2);
        
        private int code;
        
        AgeDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AgeDetectedIssueCode fromString(String str)
        {
            if (str.equals("AGE"))
                return AGE;
            if (str.equals("DOSEHINDA"))
                return DOSEHINDA;
            if (str.equals("DOSELINDA"))
                return DOSELINDA;
		    return null;
        }
    }

	/**
	* abstDomain: A17795 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-S16664-S16665-A17795-cpt)
	*/
    public enum HeightSurfaceAreaAlert
    {
        
        DOSEHINDSA(0),
        
        DOSELINDSA(1);
        
        private int code;
        
        HeightSurfaceAreaAlert(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HeightSurfaceAreaAlert fromString(String str)
        {
            if (str.equals("DOSEHINDSA"))
                return DOSEHINDSA;
            if (str.equals("DOSELINDSA"))
                return DOSELINDSA;
		    return null;
        }
    }

	/**
	* abstDomain: A17794 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-S16664-S16665-A17794-cpt)
	*/
    public enum WeightAlert
    {
        
        DOSEHINDW(0),
        
        DOSELINDW(1);
        
        private int code;
        
        WeightAlert(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static WeightAlert fromString(String str)
        {
            if (str.equals("DOSEHINDW"))
                return DOSEHINDW;
            if (str.equals("DOSELINDW"))
                return DOSELINDW;
		    return null;
        }
    }

	/**
	* specDomain: S16672 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-S16664-S16672-cpt)
	*/
    public enum ReactionDetectedIssueCode
    {
        
        REACT(0),
        
        ALGY(1),
        
        INT(2);
        
        private int code;
        
        ReactionDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ReactionDetectedIssueCode fromString(String str)
        {
            if (str.equals("REACT"))
                return REACT;
            if (str.equals("ALGY"))
                return ALGY;
            if (str.equals("INT"))
                return INT;
		    return null;
        }
    }

	/**
	* specDomain: S16676 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-A16658-S16664-S16676-cpt)
	*/
    public enum RelatedReactionDetectedIssueCode
    {
        
        RREACT(0),
        
        RALG(1),
        
        RINT(2),
        
        RAR(3);
        
        private int code;
        
        RelatedReactionDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RelatedReactionDetectedIssueCode fromString(String str)
        {
            if (str.equals("RREACT"))
                return RREACT;
            if (str.equals("RALG"))
                return RALG;
            if (str.equals("RINT"))
                return RINT;
            if (str.equals("RAR"))
                return RAR;
		    return null;
        }
    }

	/**
	* specDomain: S16688 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16687-S16688-cpt)
	*/
    public enum ComplianceDetectedIssueCodeDuplicateTherapyAlertByBOT
    {
        
        DUPTHPY(0),
        
        DUPTHPGEN(1),
        
        DUPTHPCLS(2);
        
        private int code;
        
        ComplianceDetectedIssueCodeDuplicateTherapyAlertByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ComplianceDetectedIssueCodeDuplicateTherapyAlertByBOT fromString(String str)
        {
            if (str.equals("DUPTHPY"))
                return DUPTHPY;
            if (str.equals("DUPTHPGEN"))
                return DUPTHPGEN;
            if (str.equals("DUPTHPCLS"))
                return DUPTHPCLS;
		    return null;
        }
    }

	/**
	* specDomain: S16686 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16680-S16684-S16686-cpt)
	*/
    public enum DoseDurationHighDetectedIssueCode
    {
        
        DOSEDURH(0),
        
        DOSEDURHIND(1);
        
        private int code;
        
        DoseDurationHighDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DoseDurationHighDetectedIssueCode fromString(String str)
        {
            if (str.equals("DOSEDURH"))
                return DOSEDURH;
            if (str.equals("DOSEDURHIND"))
                return DOSEDURHIND;
		    return null;
        }
    }

	/**
	* specDomain: S16685 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16680-S16684-S16685-cpt)
	*/
    public enum DoseDurationLowDetectedIssueCode
    {
        
        DOSEDURL(0),
        
        DOSEDURLIND(1);
        
        private int code;
        
        DoseDurationLowDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DoseDurationLowDetectedIssueCode fromString(String str)
        {
            if (str.equals("DOSEDURL"))
                return DOSEDURL;
            if (str.equals("DOSEDURLIND"))
                return DOSEDURLIND;
		    return null;
        }
    }

	/**
	* specDomain: S16681 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16680-S16681-cpt)
	*/
    public enum DoseHighDetectedIssueCode
    {
        
        DOSEH(0),
        
        DOSEHINDA(1),
        
        DOSEHINDSA(2),
        
        DOSEHIND(3),
        
        DOSEHINDW(4);
        
        private int code;
        
        DoseHighDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DoseHighDetectedIssueCode fromString(String str)
        {
            if (str.equals("DOSEH"))
                return DOSEH;
            if (str.equals("DOSEHINDA"))
                return DOSEHINDA;
            if (str.equals("DOSEHINDSA"))
                return DOSEHINDSA;
            if (str.equals("DOSEHIND"))
                return DOSEHIND;
            if (str.equals("DOSEHINDW"))
                return DOSEHINDW;
		    return null;
        }
    }

	/**
	* specDomain: S16683 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16680-S16683-cpt)
	*/
    public enum DoseIntervalDetectedIssueCode
    {
        
        DOSEIVL(0),
        
        DOSEIVLIND(1);
        
        private int code;
        
        DoseIntervalDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DoseIntervalDetectedIssueCode fromString(String str)
        {
            if (str.equals("DOSEIVL"))
                return DOSEIVL;
            if (str.equals("DOSEIVLIND"))
                return DOSEIVLIND;
		    return null;
        }
    }

	/**
	* specDomain: S16682 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S16680-S16682-cpt)
	*/
    public enum DoseLowDetectedIssueCode
    {
        
        DOSEL(0),
        
        DOSELINDA(1),
        
        DOSELINDSA(2),
        
        DOSELIND(3),
        
        DOSELINDW(4);
        
        private int code;
        
        DoseLowDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DoseLowDetectedIssueCode fromString(String str)
        {
            if (str.equals("DOSEL"))
                return DOSEL;
            if (str.equals("DOSELINDA"))
                return DOSELINDA;
            if (str.equals("DOSELINDSA"))
                return DOSELINDSA;
            if (str.equals("DOSELIND"))
                return DOSELIND;
            if (str.equals("DOSELINDW"))
                return DOSELINDW;
		    return null;
        }
    }

	/**
	* specDomain: S21700 (C-0-T14878-A19692-A19781-A16124-A16656-A16657-S21700-cpt)
	*/
    public enum TimingDetectedIssueCode
    {
        
        TIME(0),
        
        ENDLATE(1),
        
        STRTLATE(2);
        
        private int code;
        
        TimingDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TimingDetectedIssueCode fromString(String str)
        {
            if (str.equals("TIME"))
                return TIME;
            if (str.equals("ENDLATE"))
                return ENDLATE;
            if (str.equals("STRTLATE"))
                return STRTLATE;
		    return null;
        }
    }

	/**
	* abstDomain: A16691 (C-0-T14878-A19692-A19781-A16124-A16656-A16691-cpt)
	*/
    public enum SupplyDetectedIssueCode
    {
        
        TOOLATE(0),
        
        TOOSOON(1);
        
        private int code;
        
        SupplyDetectedIssueCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SupplyDetectedIssueCode fromString(String str)
        {
            if (str.equals("TOOLATE"))
                return TOOLATE;
            if (str.equals("TOOSOON"))
                return TOOSOON;
		    return null;
        }
    }

	/**
	* abstDomain: A19782 (C-0-T14878-A19692-A19782-cpt)
	*/
    public enum MedicationOrderReleaseReasonCode
    {
        
        HOLDINAP(0),
        
        HOLDDONE(1);
        
        private int code;
        
        MedicationOrderReleaseReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MedicationOrderReleaseReasonCode fromString(String str)
        {
            if (str.equals("HOLDINAP"))
                return HOLDINAP;
            if (str.equals("HOLDDONE"))
                return HOLDDONE;
		    return null;
        }
    }

	/**
	* abstDomain: A19784 (C-0-T14878-A19692-A19784-cpt)
	*/
    public enum PatientProfileQueryReasonCode
    {
        
        ADMREV(0),
        
        PATCAR(1),
        
        PATREQ(2),
        
        PRCREV(3),
        
        REGUL(4),
        
        RSRCH(5),
        
        LEGAL(6),
        
        VALIDATION(7);
        
        private int code;
        
        PatientProfileQueryReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PatientProfileQueryReasonCode fromString(String str)
        {
            if (str.equals("ADMREV"))
                return ADMREV;
            if (str.equals("PATCAR"))
                return PATCAR;
            if (str.equals("PATREQ"))
                return PATREQ;
            if (str.equals("PRCREV"))
                return PRCREV;
            if (str.equals("REGUL"))
                return REGUL;
            if (str.equals("RSRCH"))
                return RSRCH;
            if (str.equals("LEGAL"))
                return LEGAL;
            if (str.equals("VALIDATION"))
                return VALIDATION;
		    return null;
        }
    }

	/**
	* abstDomain: A19787 (C-0-T14878-A19692-A19787-cpt)
	*/
    public enum SupplyOrderAbortReasonCode
    {
        
        IMPROV(0),
        
        INTOL(1),
        
        NEWSTR(2),
        
        NEWTHER(3);
        
        private int code;
        
        SupplyOrderAbortReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SupplyOrderAbortReasonCode fromString(String str)
        {
            if (str.equals("IMPROV"))
                return IMPROV;
            if (str.equals("INTOL"))
                return INTOL;
            if (str.equals("NEWSTR"))
                return NEWSTR;
            if (str.equals("NEWTHER"))
                return NEWTHER;
		    return null;
        }
    }

	/**
	* abstDomain: A19785 (C-0-T14878-A19785-cpt)
	*/
    public enum PharmacySupplyEventStockReasonCode
    {
        
        FLRSTCK(0),
        
        LTC(1),
        
        OFFICE(2),
        
        PHARM(3),
        
        PROG(4);
        
        private int code;
        
        PharmacySupplyEventStockReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PharmacySupplyEventStockReasonCode fromString(String str)
        {
            if (str.equals("FLRSTCK"))
                return FLRSTCK;
            if (str.equals("LTC"))
                return LTC;
            if (str.equals("OFFICE"))
                return OFFICE;
            if (str.equals("PHARM"))
                return PHARM;
            if (str.equals("PROG"))
                return PROG;
		    return null;
        }
    }

	/**
	* abstDomain: A19786 (C-0-T14878-A19786-cpt)
	*/
    public enum PharmacySupplyRequestRenewalRefusalReasonCode
    {
        
        FAMPHYS(0),
        
        ONHOLD(1),
        
        MODIFY(2),
        
        ALREADYRX(3),
        
        NEEDAPMT(4),
        
        NOTPAT(5),
        
        NOTAVAIL(6),
        
        DISCONT(7),
        
        TOOEARLY(8);
        
        private int code;
        
        PharmacySupplyRequestRenewalRefusalReasonCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PharmacySupplyRequestRenewalRefusalReasonCode fromString(String str)
        {
            if (str.equals("FAMPHYS"))
                return FAMPHYS;
            if (str.equals("ONHOLD"))
                return ONHOLD;
            if (str.equals("MODIFY"))
                return MODIFY;
            if (str.equals("ALREADYRX"))
                return ALREADYRX;
            if (str.equals("NEEDAPMT"))
                return NEEDAPMT;
            if (str.equals("NOTPAT"))
                return NOTPAT;
            if (str.equals("NOTAVAIL"))
                return NOTAVAIL;
            if (str.equals("DISCONT"))
                return DISCONT;
            if (str.equals("TOOEARLY"))
                return TOOEARLY;
		    return null;
        }
    }

	/**
	* abstDomain: A14879 (C-0-T14878-A14879-cpt)
	*/
    public enum SchedulingActReason
    {
        
        MTG(0),
        
        MED(1),
        
        FIN(2),
        
        DEC(3),
        
        PAT(4),
        
        PHY(5),
        
        BLK(6);
        
        private int code;
        
        SchedulingActReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SchedulingActReason fromString(String str)
        {
            if (str.equals("MTG"))
                return MTG;
            if (str.equals("MED"))
                return MED;
            if (str.equals("FIN"))
                return FIN;
            if (str.equals("DEC"))
                return DEC;
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PHY"))
                return PHY;
            if (str.equals("BLK"))
                return BLK;
		    return null;
        }
    }

	/**
	* abstDomain: A19719 (C-0-T14878-A19719-cpt)
	*/
    public enum SubstanceAdminSubstitutionNotAllowedReason
    {
        
        PAT(0),
        
        ALGINT(1),
        
        TRIAL(2),
        
        COMPCON(3),
        
        THERCHAR(4);
        
        private int code;
        
        SubstanceAdminSubstitutionNotAllowedReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubstanceAdminSubstitutionNotAllowedReason fromString(String str)
        {
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("ALGINT"))
                return ALGINT;
            if (str.equals("TRIAL"))
                return TRIAL;
            if (str.equals("COMPCON"))
                return COMPCON;
            if (str.equals("THERCHAR"))
                return THERCHAR;
		    return null;
        }
    }

	/**
	* abstDomain: A19377 (C-0-T14878-A19377-cpt)
	*/
    public enum SubstanceAdminSubstitutionReason
    {
        
        CT(0),
        
        FP(1),
        
        OS(2),
        
        RR(3);
        
        private int code;
        
        SubstanceAdminSubstitutionReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubstanceAdminSubstitutionReason fromString(String str)
        {
            if (str.equals("CT"))
                return CT;
            if (str.equals("FP"))
                return FP;
            if (str.equals("OS"))
                return OS;
            if (str.equals("RR"))
                return RR;
		    return null;
        }
    }

	/**
	* abstDomain: A15983 (C-0-T14878-A15983-cpt)
	*/
    public enum TransferActReason
    {
        
        ER(0),
        
        RQ(1);
        
        private int code;
        
        TransferActReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TransferActReason fromString(String str)
        {
            if (str.equals("ER"))
                return ER;
            if (str.equals("RQ"))
                return RQ;
		    return null;
        }
    }

	/**
	* abstDomain: A19456 (C-0-T14878-A19456-cpt)
	*/
    public enum x_ActEncounterReason
    {
        
        MEDNEC(0),
        
        PAT(1);
        
        private int code;
        
        x_ActEncounterReason(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActEncounterReason fromString(String str)
        {
            if (str.equals("MEDNEC"))
                return MEDNEC;
            if (str.equals("PAT"))
                return PAT;
		    return null;
        }
    }

	/**
	* vocSet: T10349 (C-0-T10349-cpt)
	*/
    public enum ActRelationshipCheckpoint
    {
        
        B(0),
        
        E(1),
        
        S(2),
        
        X(3),
        
        T(4);
        
        private int code;
        
        ActRelationshipCheckpoint(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipCheckpoint fromString(String str)
        {
            if (str.equals("B"))
                return B;
            if (str.equals("E"))
                return E;
            if (str.equals("S"))
                return S;
            if (str.equals("X"))
                return X;
            if (str.equals("T"))
                return T;
		    return null;
        }
    }

	/**
	* vocSet: T10360 (C-0-T10360-cpt)
	*/
    public enum ActRelationshipJoin
    {
        
        D(0),
        
        X(1),
        
        K(2),
        
        W(3);
        
        private int code;
        
        ActRelationshipJoin(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipJoin fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("X"))
                return X;
            if (str.equals("K"))
                return K;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* vocSet: T10355 (C-0-T10355-cpt)
	*/
    public enum ActRelationshipSplit
    {
        
        E1(0),
        
        EW(1),
        
        I1(2),
        
        IW(3);
        
        private int code;
        
        ActRelationshipSplit(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipSplit fromString(String str)
        {
            if (str.equals("E1"))
                return E1;
            if (str.equals("EW"))
                return EW;
            if (str.equals("I1"))
                return I1;
            if (str.equals("IW"))
                return IW;
		    return null;
        }
    }

	/**
	* specDomain: S21368 (C-0-T19613-A19736-S21368-cpt)
	*/
    public enum ExpectedSubset
    {
        
        FUTURE(0),
        
        LAST(1),
        
        NEXT(2),
        
        FUTSUM(3);
        
        private int code;
        
        ExpectedSubset(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExpectedSubset fromString(String str)
        {
            if (str.equals("FUTURE"))
                return FUTURE;
            if (str.equals("LAST"))
                return LAST;
            if (str.equals("NEXT"))
                return NEXT;
            if (str.equals("FUTSUM"))
                return FUTSUM;
		    return null;
        }
    }

	/**
	* specDomain: S21367 (C-0-T19613-S21367-cpt)
	*/
    public enum PastSubset
    {
        
        PAST(0),
        
        FIRST(1),
        
        RECENT(2),
        
        PREVSUM(3);
        
        private int code;
        
        PastSubset(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PastSubset fromString(String str)
        {
            if (str.equals("PAST"))
                return PAST;
            if (str.equals("FIRST"))
                return FIRST;
            if (str.equals("RECENT"))
                return RECENT;
            if (str.equals("PREVSUM"))
                return PREVSUM;
		    return null;
        }
    }

	/**
	* specDomain: S19986 (C-0-T10317-A18977-S10321-S19986-cpt)
	*/
    public enum ActRelationshipMitigates
    {
        
        MITGT(0),
        
        RCVY(1);
        
        private int code;
        
        ActRelationshipMitigates(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipMitigates fromString(String str)
        {
            if (str.equals("MITGT"))
                return MITGT;
            if (str.equals("RCVY"))
                return RCVY;
		    return null;
        }
    }

	/**
	* specDomain: S10318 (C-0-T10317-S10318-cpt)
	*/
    public enum ActRelationshipHasComponent
    {
        
        COMP(0),
        
        ARR(1),
        
        DEP(2),
        
        CTRLV(3);
        
        private int code;
        
        ActRelationshipHasComponent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipHasComponent fromString(String str)
        {
            if (str.equals("COMP"))
                return COMP;
            if (str.equals("ARR"))
                return ARR;
            if (str.equals("DEP"))
                return DEP;
            if (str.equals("CTRLV"))
                return CTRLV;
		    return null;
        }
    }

	/**
	* abstDomain: A19617 (C-0-T10317-S10324-A19617-cpt)
	*/
    public enum ActRelationshipObjective
    {
        
        OBJC(0),
        
        OBJF(1);
        
        private int code;
        
        ActRelationshipObjective(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipObjective fromString(String str)
        {
            if (str.equals("OBJC"))
                return OBJC;
            if (str.equals("OBJF"))
                return OBJF;
		    return null;
        }
    }

	/**
	* abstDomain: A19610 (C-0-T10317-S10329-A14900-A19610-cpt)
	*/
    public enum ActRelationshipCostTracking
    {
        
        CHRG(0),
        
        COST(1);
        
        private int code;
        
        ActRelationshipCostTracking(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipCostTracking fromString(String str)
        {
            if (str.equals("CHRG"))
                return CHRG;
            if (str.equals("COST"))
                return COST;
		    return null;
        }
    }

	/**
	* abstDomain: A19609 (C-0-T10317-S10329-A14900-A19609-cpt)
	*/
    public enum ActRelationshipPosting
    {
        
        CREDIT(0),
        
        DEBIT(1);
        
        private int code;
        
        ActRelationshipPosting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipPosting fromString(String str)
        {
            if (str.equals("CREDIT"))
                return CREDIT;
            if (str.equals("DEBIT"))
                return DEBIT;
		    return null;
        }
    }

	/**
	* specDomain: S10330 (C-0-T10317-S10329-S10330-cpt)
	*/
    public enum ActRelationshipHasSupport
    {
        
        SPRT(0),
        
        SPRTBND(1);
        
        private int code;
        
        ActRelationshipHasSupport(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipHasSupport fromString(String str)
        {
            if (str.equals("SPRT"))
                return SPRT;
            if (str.equals("SPRTBND"))
                return SPRTBND;
		    return null;
        }
    }

	/**
	* abstDomain: A19587 (C-0-T10317-S10329-A19587-cpt)
	*/
    public enum ActRelationshipTemporallyPertains
    {
        
        SAE(0),
        
        SAS(1);
        
        private int code;
        
        ActRelationshipTemporallyPertains(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipTemporallyPertains fromString(String str)
        {
            if (str.equals("SAE"))
                return SAE;
            if (str.equals("SAS"))
                return SAS;
		    return null;
        }
    }

	/**
	* specDomain: S18660 (C-0-T10317-S10337-S18660-cpt)
	*/
    public enum ActRelationshipExcerpt
    {
        
        XCRPT(0),
        
        VRXCRPT(1);
        
        private int code;
        
        ActRelationshipExcerpt(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipExcerpt fromString(String str)
        {
            if (str.equals("XCRPT"))
                return XCRPT;
            if (str.equals("VRXCRPT"))
                return VRXCRPT;
		    return null;
        }
    }

	/**
	* specDomain: S10342 (C-0-T10317-S10337-S10342-cpt)
	*/
    public enum ActRelationshipFulfills
    {
        
        FLFS(0),
        
        OCCR(1),
        
        OREF(2),
        
        SCH(3);
        
        private int code;
        
        ActRelationshipFulfills(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActRelationshipFulfills fromString(String str)
        {
            if (str.equals("FLFS"))
                return FLFS;
            if (str.equals("OCCR"))
                return OCCR;
            if (str.equals("OREF"))
                return OREF;
            if (str.equals("SCH"))
                return SCH;
		    return null;
        }
    }

	/**
	* abstDomain: A11610 (C-0-T10317-A11610-cpt)
	*/
    public enum x_ActRelationshipDocument
    {
        
        APND(0),
        
        RPLC(1),
        
        XFRM(2);
        
        private int code;
        
        x_ActRelationshipDocument(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipDocument fromString(String str)
        {
            if (str.equals("APND"))
                return APND;
            if (str.equals("RPLC"))
                return RPLC;
            if (str.equals("XFRM"))
                return XFRM;
		    return null;
        }
    }

	/**
	* abstDomain: A19446 (C-0-T10317-A19446-cpt)
	*/
    public enum x_ActRelationshipEntry
    {
        
        COMP(0),
        
        DRIV(1);
        
        private int code;
        
        x_ActRelationshipEntry(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipEntry fromString(String str)
        {
            if (str.equals("COMP"))
                return COMP;
            if (str.equals("DRIV"))
                return DRIV;
		    return null;
        }
    }

	/**
	* abstDomain: A19447 (C-0-T10317-A19447-cpt)
	*/
    public enum x_ActRelationshipEntryRelationship
    {
        
        XCRPT(0),
        
        GEVL(1),
        
        COMP(2),
        
        RSON(3),
        
        SUBJ(4),
        
        SPRT(5),
        
        CAUS(6),
        
        MFST(7),
        
        REFR(8),
        
        SAS(9);
        
        private int code;
        
        x_ActRelationshipEntryRelationship(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipEntryRelationship fromString(String str)
        {
            if (str.equals("XCRPT"))
                return XCRPT;
            if (str.equals("GEVL"))
                return GEVL;
            if (str.equals("COMP"))
                return COMP;
            if (str.equals("RSON"))
                return RSON;
            if (str.equals("SUBJ"))
                return SUBJ;
            if (str.equals("SPRT"))
                return SPRT;
            if (str.equals("CAUS"))
                return CAUS;
            if (str.equals("MFST"))
                return MFST;
            if (str.equals("REFR"))
                return REFR;
            if (str.equals("SAS"))
                return SAS;
		    return null;
        }
    }

	/**
	* abstDomain: A19000 (C-0-T10317-A19000-cpt)
	*/
    public enum x_ActRelationshipExternalReference
    {
        
        XCRPT(0),
        
        ELNK(1),
        
        SUBJ(2),
        
        SPRT(3),
        
        REFR(4),
        
        RPLC(5);
        
        private int code;
        
        x_ActRelationshipExternalReference(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipExternalReference fromString(String str)
        {
            if (str.equals("XCRPT"))
                return XCRPT;
            if (str.equals("ELNK"))
                return ELNK;
            if (str.equals("SUBJ"))
                return SUBJ;
            if (str.equals("SPRT"))
                return SPRT;
            if (str.equals("REFR"))
                return REFR;
            if (str.equals("RPLC"))
                return RPLC;
		    return null;
        }
    }

	/**
	* abstDomain: A19005 (C-0-T10317-A19005-cpt)
	*/
    public enum x_ActRelationshipPatientTransport
    {
        
        ARR(0),
        
        DEP(1);
        
        private int code;
        
        x_ActRelationshipPatientTransport(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipPatientTransport fromString(String str)
        {
            if (str.equals("ARR"))
                return ARR;
            if (str.equals("DEP"))
                return DEP;
		    return null;
        }
    }

	/**
	* abstDomain: A19562 (C-0-T10317-A19562-cpt)
	*/
    public enum x_ActRelationshipPertinentInfo
    {
        
        SUBJ(0),
        
        SPRT(1),
        
        CAUS(2),
        
        MFST(3),
        
        REFR(4);
        
        private int code;
        
        x_ActRelationshipPertinentInfo(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipPertinentInfo fromString(String str)
        {
            if (str.equals("SUBJ"))
                return SUBJ;
            if (str.equals("SPRT"))
                return SPRT;
            if (str.equals("CAUS"))
                return CAUS;
            if (str.equals("MFST"))
                return MFST;
            if (str.equals("REFR"))
                return REFR;
		    return null;
        }
    }

	/**
	* abstDomain: A19825 (C-0-T10317-A19825-cpt)
	*/
    public enum x_ActRelationshipRelatedAuthorizations
    {
        
        AUTH(0),
        
        REFR(1);
        
        private int code;
        
        x_ActRelationshipRelatedAuthorizations(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActRelationshipRelatedAuthorizations fromString(String str)
        {
            if (str.equals("AUTH"))
                return AUTH;
            if (str.equals("REFR"))
                return REFR;
		    return null;
        }
    }

	/**
	* abstDomain: A19764 (C-0-T10317-A19764-cpt)
	*/
    public enum x_ActReplaceOrRevise
    {
        
        MOD(0),
        
        RPLC(1);
        
        private int code;
        
        x_ActReplaceOrRevise(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActReplaceOrRevise fromString(String str)
        {
            if (str.equals("MOD"))
                return MOD;
            if (str.equals("RPLC"))
                return RPLC;
		    return null;
        }
    }

	/**
	* abstDomain: A19753 (C-0-T10317-A19753-cpt)
	*/
    public enum x_SUCC_REPL_PREV
    {
        
        PREV(0),
        
        RPLC(1),
        
        SUCC(2);
        
        private int code;
        
        x_SUCC_REPL_PREV(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_SUCC_REPL_PREV fromString(String str)
        {
            if (str.equals("PREV"))
                return PREV;
            if (str.equals("RPLC"))
                return RPLC;
            if (str.equals("SUCC"))
                return SUCC;
		    return null;
        }
    }

	/**
	* abstDomain: A19345 (C-0-T16537-A16538-A19346-A19345-cpt)
	*/
    public enum ArtificialDentition
    {
        
        TID10a(0),
        
        TID10i(1),
        
        TID10p(2),
        
        TID10pd(3),
        
        TID10pm(4),
        
        TID11a(5),
        
        TID11i(6),
        
        TID11p(7),
        
        TID11pd(8),
        
        TID11pm(9),
        
        TID12a(10),
        
        TID12i(11),
        
        TID12p(12),
        
        TID12pd(13),
        
        TID12pm(14),
        
        TID13a(15),
        
        TID13i(16),
        
        TID13p(17),
        
        TID13pd(18),
        
        TID13pm(19),
        
        TID14a(20),
        
        TID14i(21),
        
        TID14p(22),
        
        TID14pd(23),
        
        TID14pm(24),
        
        TID15a(25),
        
        TID15i(26),
        
        TID15p(27),
        
        TID15pd(28),
        
        TID15pm(29),
        
        TID16a(30),
        
        TID16i(31),
        
        TID16p(32),
        
        TID16pd(33),
        
        TID16pm(34),
        
        TID17a(35),
        
        TID17ad(36),
        
        TID17am(37),
        
        TID17i(38),
        
        TID17id(39),
        
        TID17im(40),
        
        TID17p(41),
        
        TID17pd(42),
        
        TID17pm(43),
        
        TID18a(44),
        
        TID18ad(45),
        
        TID18am(46),
        
        TID18i(47),
        
        TID18id(48),
        
        TID18im(49),
        
        TID18p(50),
        
        TID18pd(51),
        
        TID18pm(52),
        
        TID19a(53),
        
        TID19ad(54),
        
        TID19am(55),
        
        TID19i(56),
        
        TID19id(57),
        
        TID19im(58),
        
        TID19p(59),
        
        TID19pd(60),
        
        TID19pm(61),
        
        TID1a(62),
        
        TID1i(63),
        
        TID1p(64),
        
        TID1pd(65),
        
        TID1pm(66),
        
        TID20a(67),
        
        TID20i(68),
        
        TID20p(69),
        
        TID20pd(70),
        
        TID20pm(71),
        
        TID21a(72),
        
        TID21i(73),
        
        TID21p(74),
        
        TID21pd(75),
        
        TID21pm(76),
        
        TID22a(77),
        
        TID22i(78),
        
        TID22p(79),
        
        TID22pd(80),
        
        TID22pm(81),
        
        TID23a(82),
        
        TID23i(83),
        
        TID23p(84),
        
        TID23pd(85),
        
        TID23pm(86),
        
        TID24a(87),
        
        TID24i(88),
        
        TID24p(89),
        
        TID24pd(90),
        
        TID24pm(91),
        
        TID25a(92),
        
        TID25i(93),
        
        TID25p(94),
        
        TID25pd(95),
        
        TID25pm(96),
        
        TID26a(97),
        
        TID26i(98),
        
        TID26p(99),
        
        TID26pd(100),
        
        TID26pm(101),
        
        TID27a(102),
        
        TID27i(103),
        
        TID27p(104),
        
        TID27pd(105),
        
        TID27pm(106),
        
        TID28a(107),
        
        TID28i(108),
        
        TID28p(109),
        
        TID28pd(110),
        
        TID28pm(111),
        
        TID29a(112),
        
        TID29i(113),
        
        TID29p(114),
        
        TID29pd(115),
        
        TID29pm(116),
        
        TID2a(117),
        
        TID2i(118),
        
        TID2p(119),
        
        TID2pd(120),
        
        TID2pm(121),
        
        TID30a(122),
        
        TID30ad(123),
        
        TID30am(124),
        
        TID30i(125),
        
        TID30id(126),
        
        TID30im(127),
        
        TID30p(128),
        
        TID30pd(129),
        
        TID30pm(130),
        
        TID31a(131),
        
        TID31ad(132),
        
        TID31am(133),
        
        TID31i(134),
        
        TID31id(135),
        
        TID31im(136),
        
        TID31p(137),
        
        TID31pd(138),
        
        TID31pm(139),
        
        TID32a(140),
        
        TID32ad(141),
        
        TID32am(142),
        
        TID32i(143),
        
        TID32id(144),
        
        TID32im(145),
        
        TID32p(146),
        
        TID32pd(147),
        
        TID32pm(148),
        
        TID3a(149),
        
        TID3i(150),
        
        TID3p(151),
        
        TID3pd(152),
        
        TID3pm(153),
        
        TID4a(154),
        
        TID4i(155),
        
        TID4p(156),
        
        TID4pd(157),
        
        TID4pm(158),
        
        TID5a(159),
        
        TID5i(160),
        
        TID5p(161),
        
        TID5pd(162),
        
        TID5pm(163),
        
        TID6a(164),
        
        TID6i(165),
        
        TID6p(166),
        
        TID6pd(167),
        
        TID6pm(168),
        
        TID7a(169),
        
        TID7i(170),
        
        TID7p(171),
        
        TID7pd(172),
        
        TID7pm(173),
        
        TID8a(174),
        
        TID8i(175),
        
        TID8p(176),
        
        TID8pd(177),
        
        TID8pm(178),
        
        TID9a(179),
        
        TID9i(180),
        
        TID9p(181),
        
        TID9pd(182),
        
        TID9pm(183);
        
        private int code;
        
        ArtificialDentition(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ArtificialDentition fromString(String str)
        {
            if (str.equals("TID10a"))
                return TID10a;
            if (str.equals("TID10i"))
                return TID10i;
            if (str.equals("TID10p"))
                return TID10p;
            if (str.equals("TID10pd"))
                return TID10pd;
            if (str.equals("TID10pm"))
                return TID10pm;
            if (str.equals("TID11a"))
                return TID11a;
            if (str.equals("TID11i"))
                return TID11i;
            if (str.equals("TID11p"))
                return TID11p;
            if (str.equals("TID11pd"))
                return TID11pd;
            if (str.equals("TID11pm"))
                return TID11pm;
            if (str.equals("TID12a"))
                return TID12a;
            if (str.equals("TID12i"))
                return TID12i;
            if (str.equals("TID12p"))
                return TID12p;
            if (str.equals("TID12pd"))
                return TID12pd;
            if (str.equals("TID12pm"))
                return TID12pm;
            if (str.equals("TID13a"))
                return TID13a;
            if (str.equals("TID13i"))
                return TID13i;
            if (str.equals("TID13p"))
                return TID13p;
            if (str.equals("TID13pd"))
                return TID13pd;
            if (str.equals("TID13pm"))
                return TID13pm;
            if (str.equals("TID14a"))
                return TID14a;
            if (str.equals("TID14i"))
                return TID14i;
            if (str.equals("TID14p"))
                return TID14p;
            if (str.equals("TID14pd"))
                return TID14pd;
            if (str.equals("TID14pm"))
                return TID14pm;
            if (str.equals("TID15a"))
                return TID15a;
            if (str.equals("TID15i"))
                return TID15i;
            if (str.equals("TID15p"))
                return TID15p;
            if (str.equals("TID15pd"))
                return TID15pd;
            if (str.equals("TID15pm"))
                return TID15pm;
            if (str.equals("TID16a"))
                return TID16a;
            if (str.equals("TID16i"))
                return TID16i;
            if (str.equals("TID16p"))
                return TID16p;
            if (str.equals("TID16pd"))
                return TID16pd;
            if (str.equals("TID16pm"))
                return TID16pm;
            if (str.equals("TID17a"))
                return TID17a;
            if (str.equals("TID17ad"))
                return TID17ad;
            if (str.equals("TID17am"))
                return TID17am;
            if (str.equals("TID17i"))
                return TID17i;
            if (str.equals("TID17id"))
                return TID17id;
            if (str.equals("TID17im"))
                return TID17im;
            if (str.equals("TID17p"))
                return TID17p;
            if (str.equals("TID17pd"))
                return TID17pd;
            if (str.equals("TID17pm"))
                return TID17pm;
            if (str.equals("TID18a"))
                return TID18a;
            if (str.equals("TID18ad"))
                return TID18ad;
            if (str.equals("TID18am"))
                return TID18am;
            if (str.equals("TID18i"))
                return TID18i;
            if (str.equals("TID18id"))
                return TID18id;
            if (str.equals("TID18im"))
                return TID18im;
            if (str.equals("TID18p"))
                return TID18p;
            if (str.equals("TID18pd"))
                return TID18pd;
            if (str.equals("TID18pm"))
                return TID18pm;
            if (str.equals("TID19a"))
                return TID19a;
            if (str.equals("TID19ad"))
                return TID19ad;
            if (str.equals("TID19am"))
                return TID19am;
            if (str.equals("TID19i"))
                return TID19i;
            if (str.equals("TID19id"))
                return TID19id;
            if (str.equals("TID19im"))
                return TID19im;
            if (str.equals("TID19p"))
                return TID19p;
            if (str.equals("TID19pd"))
                return TID19pd;
            if (str.equals("TID19pm"))
                return TID19pm;
            if (str.equals("TID1a"))
                return TID1a;
            if (str.equals("TID1i"))
                return TID1i;
            if (str.equals("TID1p"))
                return TID1p;
            if (str.equals("TID1pd"))
                return TID1pd;
            if (str.equals("TID1pm"))
                return TID1pm;
            if (str.equals("TID20a"))
                return TID20a;
            if (str.equals("TID20i"))
                return TID20i;
            if (str.equals("TID20p"))
                return TID20p;
            if (str.equals("TID20pd"))
                return TID20pd;
            if (str.equals("TID20pm"))
                return TID20pm;
            if (str.equals("TID21a"))
                return TID21a;
            if (str.equals("TID21i"))
                return TID21i;
            if (str.equals("TID21p"))
                return TID21p;
            if (str.equals("TID21pd"))
                return TID21pd;
            if (str.equals("TID21pm"))
                return TID21pm;
            if (str.equals("TID22a"))
                return TID22a;
            if (str.equals("TID22i"))
                return TID22i;
            if (str.equals("TID22p"))
                return TID22p;
            if (str.equals("TID22pd"))
                return TID22pd;
            if (str.equals("TID22pm"))
                return TID22pm;
            if (str.equals("TID23a"))
                return TID23a;
            if (str.equals("TID23i"))
                return TID23i;
            if (str.equals("TID23p"))
                return TID23p;
            if (str.equals("TID23pd"))
                return TID23pd;
            if (str.equals("TID23pm"))
                return TID23pm;
            if (str.equals("TID24a"))
                return TID24a;
            if (str.equals("TID24i"))
                return TID24i;
            if (str.equals("TID24p"))
                return TID24p;
            if (str.equals("TID24pd"))
                return TID24pd;
            if (str.equals("TID24pm"))
                return TID24pm;
            if (str.equals("TID25a"))
                return TID25a;
            if (str.equals("TID25i"))
                return TID25i;
            if (str.equals("TID25p"))
                return TID25p;
            if (str.equals("TID25pd"))
                return TID25pd;
            if (str.equals("TID25pm"))
                return TID25pm;
            if (str.equals("TID26a"))
                return TID26a;
            if (str.equals("TID26i"))
                return TID26i;
            if (str.equals("TID26p"))
                return TID26p;
            if (str.equals("TID26pd"))
                return TID26pd;
            if (str.equals("TID26pm"))
                return TID26pm;
            if (str.equals("TID27a"))
                return TID27a;
            if (str.equals("TID27i"))
                return TID27i;
            if (str.equals("TID27p"))
                return TID27p;
            if (str.equals("TID27pd"))
                return TID27pd;
            if (str.equals("TID27pm"))
                return TID27pm;
            if (str.equals("TID28a"))
                return TID28a;
            if (str.equals("TID28i"))
                return TID28i;
            if (str.equals("TID28p"))
                return TID28p;
            if (str.equals("TID28pd"))
                return TID28pd;
            if (str.equals("TID28pm"))
                return TID28pm;
            if (str.equals("TID29a"))
                return TID29a;
            if (str.equals("TID29i"))
                return TID29i;
            if (str.equals("TID29p"))
                return TID29p;
            if (str.equals("TID29pd"))
                return TID29pd;
            if (str.equals("TID29pm"))
                return TID29pm;
            if (str.equals("TID2a"))
                return TID2a;
            if (str.equals("TID2i"))
                return TID2i;
            if (str.equals("TID2p"))
                return TID2p;
            if (str.equals("TID2pd"))
                return TID2pd;
            if (str.equals("TID2pm"))
                return TID2pm;
            if (str.equals("TID30a"))
                return TID30a;
            if (str.equals("TID30ad"))
                return TID30ad;
            if (str.equals("TID30am"))
                return TID30am;
            if (str.equals("TID30i"))
                return TID30i;
            if (str.equals("TID30id"))
                return TID30id;
            if (str.equals("TID30im"))
                return TID30im;
            if (str.equals("TID30p"))
                return TID30p;
            if (str.equals("TID30pd"))
                return TID30pd;
            if (str.equals("TID30pm"))
                return TID30pm;
            if (str.equals("TID31a"))
                return TID31a;
            if (str.equals("TID31ad"))
                return TID31ad;
            if (str.equals("TID31am"))
                return TID31am;
            if (str.equals("TID31i"))
                return TID31i;
            if (str.equals("TID31id"))
                return TID31id;
            if (str.equals("TID31im"))
                return TID31im;
            if (str.equals("TID31p"))
                return TID31p;
            if (str.equals("TID31pd"))
                return TID31pd;
            if (str.equals("TID31pm"))
                return TID31pm;
            if (str.equals("TID32a"))
                return TID32a;
            if (str.equals("TID32ad"))
                return TID32ad;
            if (str.equals("TID32am"))
                return TID32am;
            if (str.equals("TID32i"))
                return TID32i;
            if (str.equals("TID32id"))
                return TID32id;
            if (str.equals("TID32im"))
                return TID32im;
            if (str.equals("TID32p"))
                return TID32p;
            if (str.equals("TID32pd"))
                return TID32pd;
            if (str.equals("TID32pm"))
                return TID32pm;
            if (str.equals("TID3a"))
                return TID3a;
            if (str.equals("TID3i"))
                return TID3i;
            if (str.equals("TID3p"))
                return TID3p;
            if (str.equals("TID3pd"))
                return TID3pd;
            if (str.equals("TID3pm"))
                return TID3pm;
            if (str.equals("TID4a"))
                return TID4a;
            if (str.equals("TID4i"))
                return TID4i;
            if (str.equals("TID4p"))
                return TID4p;
            if (str.equals("TID4pd"))
                return TID4pd;
            if (str.equals("TID4pm"))
                return TID4pm;
            if (str.equals("TID5a"))
                return TID5a;
            if (str.equals("TID5i"))
                return TID5i;
            if (str.equals("TID5p"))
                return TID5p;
            if (str.equals("TID5pd"))
                return TID5pd;
            if (str.equals("TID5pm"))
                return TID5pm;
            if (str.equals("TID6a"))
                return TID6a;
            if (str.equals("TID6i"))
                return TID6i;
            if (str.equals("TID6p"))
                return TID6p;
            if (str.equals("TID6pd"))
                return TID6pd;
            if (str.equals("TID6pm"))
                return TID6pm;
            if (str.equals("TID7a"))
                return TID7a;
            if (str.equals("TID7i"))
                return TID7i;
            if (str.equals("TID7p"))
                return TID7p;
            if (str.equals("TID7pd"))
                return TID7pd;
            if (str.equals("TID7pm"))
                return TID7pm;
            if (str.equals("TID8a"))
                return TID8a;
            if (str.equals("TID8i"))
                return TID8i;
            if (str.equals("TID8p"))
                return TID8p;
            if (str.equals("TID8pd"))
                return TID8pd;
            if (str.equals("TID8pm"))
                return TID8pm;
            if (str.equals("TID9a"))
                return TID9a;
            if (str.equals("TID9i"))
                return TID9i;
            if (str.equals("TID9p"))
                return TID9p;
            if (str.equals("TID9pd"))
                return TID9pd;
            if (str.equals("TID9pm"))
                return TID9pm;
		    return null;
        }
    }

	/**
	* abstDomain: A19342 (C-0-T16537-A16538-A19346-A19342-cpt)
	*/
    public enum PermanentDentition
    {
        
        TID1(0),
        
        TID10(1),
        
        TID11(2),
        
        TID12(3),
        
        TID13(4),
        
        TID14(5),
        
        TID15(6),
        
        TID16(7),
        
        TID17(8),
        
        TID17d(9),
        
        TID17m(10),
        
        TID18(11),
        
        TID18d(12),
        
        TID18m(13),
        
        TID19(14),
        
        TID19d(15),
        
        TID19m(16),
        
        TID2(17),
        
        TID20(18),
        
        TID21(19),
        
        TID22(20),
        
        TID23(21),
        
        TID24(22),
        
        TID25(23),
        
        TID26(24),
        
        TID27(25),
        
        TID28(26),
        
        TID29(27),
        
        TID3(28),
        
        TID30(29),
        
        TID30d(30),
        
        TID30m(31),
        
        TID31(32),
        
        TID31d(33),
        
        TID31m(34),
        
        TID32(35),
        
        TID32d(36),
        
        TID32m(37),
        
        TID4(38),
        
        TID5(39),
        
        TID6(40),
        
        TID7(41),
        
        TID8(42),
        
        TID9(43);
        
        private int code;
        
        PermanentDentition(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PermanentDentition fromString(String str)
        {
            if (str.equals("TID1"))
                return TID1;
            if (str.equals("TID10"))
                return TID10;
            if (str.equals("TID11"))
                return TID11;
            if (str.equals("TID12"))
                return TID12;
            if (str.equals("TID13"))
                return TID13;
            if (str.equals("TID14"))
                return TID14;
            if (str.equals("TID15"))
                return TID15;
            if (str.equals("TID16"))
                return TID16;
            if (str.equals("TID17"))
                return TID17;
            if (str.equals("TID17d"))
                return TID17d;
            if (str.equals("TID17m"))
                return TID17m;
            if (str.equals("TID18"))
                return TID18;
            if (str.equals("TID18d"))
                return TID18d;
            if (str.equals("TID18m"))
                return TID18m;
            if (str.equals("TID19"))
                return TID19;
            if (str.equals("TID19d"))
                return TID19d;
            if (str.equals("TID19m"))
                return TID19m;
            if (str.equals("TID2"))
                return TID2;
            if (str.equals("TID20"))
                return TID20;
            if (str.equals("TID21"))
                return TID21;
            if (str.equals("TID22"))
                return TID22;
            if (str.equals("TID23"))
                return TID23;
            if (str.equals("TID24"))
                return TID24;
            if (str.equals("TID25"))
                return TID25;
            if (str.equals("TID26"))
                return TID26;
            if (str.equals("TID27"))
                return TID27;
            if (str.equals("TID28"))
                return TID28;
            if (str.equals("TID29"))
                return TID29;
            if (str.equals("TID3"))
                return TID3;
            if (str.equals("TID30"))
                return TID30;
            if (str.equals("TID30d"))
                return TID30d;
            if (str.equals("TID30m"))
                return TID30m;
            if (str.equals("TID31"))
                return TID31;
            if (str.equals("TID31d"))
                return TID31d;
            if (str.equals("TID31m"))
                return TID31m;
            if (str.equals("TID32"))
                return TID32;
            if (str.equals("TID32d"))
                return TID32d;
            if (str.equals("TID32m"))
                return TID32m;
            if (str.equals("TID4"))
                return TID4;
            if (str.equals("TID5"))
                return TID5;
            if (str.equals("TID6"))
                return TID6;
            if (str.equals("TID7"))
                return TID7;
            if (str.equals("TID8"))
                return TID8;
            if (str.equals("TID9"))
                return TID9;
		    return null;
        }
    }

	/**
	* abstDomain: A19344 (C-0-T16537-A16538-A19346-A19344-cpt)
	*/
    public enum PrimaryDentition
    {
        
        TIDA(0),
        
        TIDB(1),
        
        TIDC(2),
        
        TIDD(3),
        
        TIDE(4),
        
        TIDF(5),
        
        TIDG(6),
        
        TIDH(7),
        
        TIDI(8),
        
        TIDJ(9),
        
        TIDK(10),
        
        TIDL(11),
        
        TIDM(12),
        
        TIDN(13),
        
        TIDO(14),
        
        TIDP(15),
        
        TIDQ(16),
        
        TIDR(17),
        
        TIDS(18),
        
        TIDT(19);
        
        private int code;
        
        PrimaryDentition(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PrimaryDentition fromString(String str)
        {
            if (str.equals("TIDA"))
                return TIDA;
            if (str.equals("TIDB"))
                return TIDB;
            if (str.equals("TIDC"))
                return TIDC;
            if (str.equals("TIDD"))
                return TIDD;
            if (str.equals("TIDE"))
                return TIDE;
            if (str.equals("TIDF"))
                return TIDF;
            if (str.equals("TIDG"))
                return TIDG;
            if (str.equals("TIDH"))
                return TIDH;
            if (str.equals("TIDI"))
                return TIDI;
            if (str.equals("TIDJ"))
                return TIDJ;
            if (str.equals("TIDK"))
                return TIDK;
            if (str.equals("TIDL"))
                return TIDL;
            if (str.equals("TIDM"))
                return TIDM;
            if (str.equals("TIDN"))
                return TIDN;
            if (str.equals("TIDO"))
                return TIDO;
            if (str.equals("TIDP"))
                return TIDP;
            if (str.equals("TIDQ"))
                return TIDQ;
            if (str.equals("TIDR"))
                return TIDR;
            if (str.equals("TIDS"))
                return TIDS;
            if (str.equals("TIDT"))
                return TIDT;
		    return null;
        }
    }

	/**
	* abstDomain: A19343 (C-0-T16537-A16538-A19346-A19343-cpt)
	*/
    public enum SupernumeraryTooth
    {
        
        TID10s(0),
        
        TID11s(1),
        
        TID12s(2),
        
        TID13s(3),
        
        TID14s(4),
        
        TID15s(5),
        
        TID16s(6),
        
        TID17s(7),
        
        TID18s(8),
        
        TID19s(9),
        
        TID1s(10),
        
        TID20s(11),
        
        TID21s(12),
        
        TID22s(13),
        
        TID23s(14),
        
        TID24s(15),
        
        TID25s(16),
        
        TID26s(17),
        
        TID27s(18),
        
        TID28s(19),
        
        TID29s(20),
        
        TID2s(21),
        
        TID30s(22),
        
        TID31s(23),
        
        TID32s(24),
        
        TID3s(25),
        
        TID4s(26),
        
        TID5s(27),
        
        TID6s(28),
        
        TID7s(29),
        
        TID8s(30),
        
        TID9s(31),
        
        TIDAs(32),
        
        TIDBs(33),
        
        TIDCs(34),
        
        TIDDs(35),
        
        TIDEs(36),
        
        TIDFs(37),
        
        TIDGs(38),
        
        TIDHs(39),
        
        TIDIs(40),
        
        TIDJs(41),
        
        TIDKs(42),
        
        TIDLs(43),
        
        TIDMs(44),
        
        TIDNs(45),
        
        TIDOs(46),
        
        TIDPs(47),
        
        TIDQs(48),
        
        TIDRs(49),
        
        TIDSs(50),
        
        TIDTs(51);
        
        private int code;
        
        SupernumeraryTooth(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SupernumeraryTooth fromString(String str)
        {
            if (str.equals("TID10s"))
                return TID10s;
            if (str.equals("TID11s"))
                return TID11s;
            if (str.equals("TID12s"))
                return TID12s;
            if (str.equals("TID13s"))
                return TID13s;
            if (str.equals("TID14s"))
                return TID14s;
            if (str.equals("TID15s"))
                return TID15s;
            if (str.equals("TID16s"))
                return TID16s;
            if (str.equals("TID17s"))
                return TID17s;
            if (str.equals("TID18s"))
                return TID18s;
            if (str.equals("TID19s"))
                return TID19s;
            if (str.equals("TID1s"))
                return TID1s;
            if (str.equals("TID20s"))
                return TID20s;
            if (str.equals("TID21s"))
                return TID21s;
            if (str.equals("TID22s"))
                return TID22s;
            if (str.equals("TID23s"))
                return TID23s;
            if (str.equals("TID24s"))
                return TID24s;
            if (str.equals("TID25s"))
                return TID25s;
            if (str.equals("TID26s"))
                return TID26s;
            if (str.equals("TID27s"))
                return TID27s;
            if (str.equals("TID28s"))
                return TID28s;
            if (str.equals("TID29s"))
                return TID29s;
            if (str.equals("TID2s"))
                return TID2s;
            if (str.equals("TID30s"))
                return TID30s;
            if (str.equals("TID31s"))
                return TID31s;
            if (str.equals("TID32s"))
                return TID32s;
            if (str.equals("TID3s"))
                return TID3s;
            if (str.equals("TID4s"))
                return TID4s;
            if (str.equals("TID5s"))
                return TID5s;
            if (str.equals("TID6s"))
                return TID6s;
            if (str.equals("TID7s"))
                return TID7s;
            if (str.equals("TID8s"))
                return TID8s;
            if (str.equals("TID9s"))
                return TID9s;
            if (str.equals("TIDAs"))
                return TIDAs;
            if (str.equals("TIDBs"))
                return TIDBs;
            if (str.equals("TIDCs"))
                return TIDCs;
            if (str.equals("TIDDs"))
                return TIDDs;
            if (str.equals("TIDEs"))
                return TIDEs;
            if (str.equals("TIDFs"))
                return TIDFs;
            if (str.equals("TIDGs"))
                return TIDGs;
            if (str.equals("TIDHs"))
                return TIDHs;
            if (str.equals("TIDIs"))
                return TIDIs;
            if (str.equals("TIDJs"))
                return TIDJs;
            if (str.equals("TIDKs"))
                return TIDKs;
            if (str.equals("TIDLs"))
                return TIDLs;
            if (str.equals("TIDMs"))
                return TIDMs;
            if (str.equals("TIDNs"))
                return TIDNs;
            if (str.equals("TIDOs"))
                return TIDOs;
            if (str.equals("TIDPs"))
                return TIDPs;
            if (str.equals("TIDQs"))
                return TIDQs;
            if (str.equals("TIDRs"))
                return TIDRs;
            if (str.equals("TIDSs"))
                return TIDSs;
            if (str.equals("TIDTs"))
                return TIDTs;
		    return null;
        }
    }

	/**
	* abstDomain: A19724 (C-0-T16537-A16538-A19724-cpt)
	*/
    public enum HumanSubstanceAdministrationSite
    {
        
        BE(0),
        
        OU(1),
        
        BU(2),
        
        LACF(3),
        
        LAC(4),
        
        LA(5),
        
        LD(6),
        
        LE(7),
        
        LEJ(8),
        
        OS(9),
        
        LF(10),
        
        LG(11),
        
        LH(12),
        
        LIJ(13),
        
        LLAQ(14),
        
        LLFA(15),
        
        LMFA(16),
        
        LN(17),
        
        LPC(18),
        
        LSC(19),
        
        LT(20),
        
        LUAQ(21),
        
        LUA(22),
        
        LUFA(23),
        
        LVL(24),
        
        LVG(25),
        
        PA(26),
        
        PERIN(27),
        
        RACF(28),
        
        RAC(29),
        
        RA(30),
        
        RD(31),
        
        RE(32),
        
        REJ(33),
        
        OD(34),
        
        RF(35),
        
        RG(36),
        
        RH(37),
        
        RIJ(38),
        
        RLAQ(39),
        
        RLFA(40),
        
        RMFA(41),
        
        RPC(42),
        
        RSC(43),
        
        RT(44),
        
        RUAQ(45),
        
        RUA(46),
        
        RUFA(47),
        
        RVL(48),
        
        RVG(49),
        
        BN(50);
        
        private int code;
        
        HumanSubstanceAdministrationSite(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HumanSubstanceAdministrationSite fromString(String str)
        {
            if (str.equals("BE"))
                return BE;
            if (str.equals("OU"))
                return OU;
            if (str.equals("BU"))
                return BU;
            if (str.equals("LACF"))
                return LACF;
            if (str.equals("LAC"))
                return LAC;
            if (str.equals("LA"))
                return LA;
            if (str.equals("LD"))
                return LD;
            if (str.equals("LE"))
                return LE;
            if (str.equals("LEJ"))
                return LEJ;
            if (str.equals("OS"))
                return OS;
            if (str.equals("LF"))
                return LF;
            if (str.equals("LG"))
                return LG;
            if (str.equals("LH"))
                return LH;
            if (str.equals("LIJ"))
                return LIJ;
            if (str.equals("LLAQ"))
                return LLAQ;
            if (str.equals("LLFA"))
                return LLFA;
            if (str.equals("LMFA"))
                return LMFA;
            if (str.equals("LN"))
                return LN;
            if (str.equals("LPC"))
                return LPC;
            if (str.equals("LSC"))
                return LSC;
            if (str.equals("LT"))
                return LT;
            if (str.equals("LUAQ"))
                return LUAQ;
            if (str.equals("LUA"))
                return LUA;
            if (str.equals("LUFA"))
                return LUFA;
            if (str.equals("LVL"))
                return LVL;
            if (str.equals("LVG"))
                return LVG;
            if (str.equals("PA"))
                return PA;
            if (str.equals("PERIN"))
                return PERIN;
            if (str.equals("RACF"))
                return RACF;
            if (str.equals("RAC"))
                return RAC;
            if (str.equals("RA"))
                return RA;
            if (str.equals("RD"))
                return RD;
            if (str.equals("RE"))
                return RE;
            if (str.equals("REJ"))
                return REJ;
            if (str.equals("OD"))
                return OD;
            if (str.equals("RF"))
                return RF;
            if (str.equals("RG"))
                return RG;
            if (str.equals("RH"))
                return RH;
            if (str.equals("RIJ"))
                return RIJ;
            if (str.equals("RLAQ"))
                return RLAQ;
            if (str.equals("RLFA"))
                return RLFA;
            if (str.equals("RMFA"))
                return RMFA;
            if (str.equals("RPC"))
                return RPC;
            if (str.equals("RSC"))
                return RSC;
            if (str.equals("RT"))
                return RT;
            if (str.equals("RUAQ"))
                return RUAQ;
            if (str.equals("RUA"))
                return RUA;
            if (str.equals("RUFA"))
                return RUFA;
            if (str.equals("RVL"))
                return RVL;
            if (str.equals("RVG"))
                return RVG;
            if (str.equals("BN"))
                return BN;
		    return null;
        }
    }

	/**
	* specDomain: S15936 (C-0-T15933-S15936-cpt)
	*/
    public enum ActStatusNormal
    {
        
        normal(0,"normal"),
        
        aborted(1,"aborted"),
        
        active(2,"active"),
        
        cancelled(3,"cancelled"),
        
        completed(4,"completed"),
        
        held(5,"held"),
        
        _new(6,"new"),
        
        suspended(7,"suspended");
        
        private int code;
        private java.lang.String xmlValue;
        
        ActStatusNormal(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ActStatusNormal fromString(String str)
        {
            if (str.equals("normal"))
                return normal;
            if (str.equals("aborted"))
                return aborted;
            if (str.equals("active"))
                return active;
            if (str.equals("cancelled"))
                return cancelled;
            if (str.equals("completed"))
                return completed;
            if (str.equals("held"))
                return held;
            if (str.equals("new"))
                return _new;
            if (str.equals("suspended"))
                return suspended;
		    return null;
        }
    }

	/**
	* abstDomain: A19890 (C-0-T15933-A19890-cpt)
	*/
    public enum x_ActStatusActiveComplete
    {
        
        active(0),
        
        completed(1);
        
        private int code;
        
        x_ActStatusActiveComplete(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActStatusActiveComplete fromString(String str)
        {
            if (str.equals("active"))
                return active;
            if (str.equals("completed"))
                return completed;
		    return null;
        }
    }

	/**
	* abstDomain: A19891 (C-0-T15933-A19891-cpt)
	*/
    public enum x_ActStatusActiveSuspended
    {
        
        active(0),
        
        suspended(1);
        
        private int code;
        
        x_ActStatusActiveSuspended(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ActStatusActiveSuspended fromString(String str)
        {
            if (str.equals("active"))
                return active;
            if (str.equals("suspended"))
                return suspended;
		    return null;
        }
    }

	/**
	* abstDomain: A16916 (C-0-T15933-A16916-cpt)
	*/
    public enum x_DocumentStatus
    {
        
        active(0,"active"),
        
        cancelled(1,"cancelled"),
        
        _new(2,"new"),
        
        obsolete(3,"obsolete");
        
        private int code;
        private java.lang.String xmlValue;
        
        x_DocumentStatus(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static x_DocumentStatus fromString(String str)
        {
            if (str.equals("active"))
                return active;
            if (str.equals("cancelled"))
                return cancelled;
            if (str.equals("new"))
                return _new;
            if (str.equals("obsolete"))
                return obsolete;
		    return null;
        }
    }

	/**
	* vocSet: T16899 (C-0-T16899-cpt)
	*/
    public enum ActUncertainty
    {
        
        N(0),
        
        U(1);
        
        private int code;
        
        ActUncertainty(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActUncertainty fromString(String str)
        {
            if (str.equals("N"))
                return N;
            if (str.equals("U"))
                return U;
		    return null;
        }
    }

	/**
	* specDomain: S10651 (C-0-T10642-S10651-cpt)
	*/
    public enum AdditionalLocator
    {
        
        ADL(0),
        
        UNIT(1),
        
        UNID(2);
        
        private int code;
        
        AdditionalLocator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdditionalLocator fromString(String str)
        {
            if (str.equals("ADL"))
                return ADL;
            if (str.equals("UNIT"))
                return UNIT;
            if (str.equals("UNID"))
                return UNID;
		    return null;
        }
    }

	/**
	* specDomain: S17887 (C-0-T10642-S17887-cpt)
	*/
    public enum DeliveryAddressLine
    {
        
        DAL(0),
        
        DINSTA(1),
        
        DINSTQ(2),
        
        DINST(3),
        
        DMOD(4),
        
        DMODID(5);
        
        private int code;
        
        DeliveryAddressLine(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DeliveryAddressLine fromString(String str)
        {
            if (str.equals("DAL"))
                return DAL;
            if (str.equals("DINSTA"))
                return DINSTA;
            if (str.equals("DINSTQ"))
                return DINSTQ;
            if (str.equals("DINST"))
                return DINST;
            if (str.equals("DMOD"))
                return DMOD;
            if (str.equals("DMODID"))
                return DMODID;
		    return null;
        }
    }

	/**
	* specDomain: S17882 (C-0-T10642-S14822-S10649-S17882-cpt)
	*/
    public enum BuildingNumberSuffixByBOT
    {
        
        BNS(0),
        
        POB(1);
        
        private int code;
        
        BuildingNumberSuffixByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BuildingNumberSuffixByBOT fromString(String str)
        {
            if (str.equals("BNS"))
                return BNS;
            if (str.equals("POB"))
                return POB;
		    return null;
        }
    }

	/**
	* specDomain: S10648 (C-0-T10642-S14822-S10648-cpt)
	*/
    public enum StreetName
    {
        
        STR(0),
        
        STB(1),
        
        STTYP(2);
        
        private int code;
        
        StreetName(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static StreetName fromString(String str)
        {
            if (str.equals("STR"))
                return STR;
            if (str.equals("STB"))
                return STB;
            if (str.equals("STTYP"))
                return STTYP;
		    return null;
        }
    }

	/**
	* vocSet: T1 (C-0-T1-cpt)
	*/
    public enum AdministrativeGender
    {
        
        F(0),
        
        M(1),
        
        UN(2);
        
        private int code;
        
        AdministrativeGender(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdministrativeGender fromString(String str)
        {
            if (str.equals("F"))
                return F;
            if (str.equals("M"))
                return M;
            if (str.equals("UN"))
                return UN;
		    return null;
        }
    }

	/**
	* abstDomain: A18143 (C-0-T18130-A18131-A18132-A18142-A18143-cpt)
	*/
    public enum ArapahoGrosVentre
    {
        
        x_x002D_ARP(0,"x-ARP"),
        
        x_x002D_ATS(1,"x-ATS");
        
        private int code;
        private java.lang.String xmlValue;
        
        ArapahoGrosVentre(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ArapahoGrosVentre fromString(String str)
        {
            if (str.equals("x-ARP"))
                return x_x002D_ARP;
            if (str.equals("x-ATS"))
                return x_x002D_ATS;
		    return null;
        }
    }

	/**
	* abstDomain: A18136 (C-0-T18130-A18131-A18132-A18135-A18136-cpt)
	*/
    public enum Cree
    {
        
        x_x002D_CRP(0,"x-CRP");
        
        private int code;
        private java.lang.String xmlValue;
        
        Cree(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Cree fromString(String str)
        {
            if (str.equals("x-CRP"))
                return x_x002D_CRP;
		    return null;
        }
    }

	/**
	* abstDomain: A18174 (C-0-T18130-A18131-A18132-A18171-A18174-cpt)
	*/
    public enum Abenakian
    {
        
        x_x002D_AAQ(0,"x-AAQ"),
        
        x_x002D_MAC(1,"x-MAC"),
        
        x_x002D_ABE(2,"x-ABE");
        
        private int code;
        private java.lang.String xmlValue;
        
        Abenakian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Abenakian fromString(String str)
        {
            if (str.equals("x-AAQ"))
                return x_x002D_AAQ;
            if (str.equals("x-MAC"))
                return x_x002D_MAC;
            if (str.equals("x-ABE"))
                return x_x002D_ABE;
		    return null;
        }
    }

	/**
	* abstDomain: A18184 (C-0-T18130-A18131-A18132-A18171-A18184-cpt)
	*/
    public enum Delawaran
    {
        
        x_x002D_DEL(0,"x-DEL");
        
        private int code;
        private java.lang.String xmlValue;
        
        Delawaran(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Delawaran fromString(String str)
        {
            if (str.equals("x-DEL"))
                return x_x002D_DEL;
		    return null;
        }
    }

	/**
	* abstDomain: A18156 (C-0-T18130-A18131-A18132-A18156-cpt)
	*/
    public enum Ojibwayan
    {
        
        x_x002D_POT(0,"x-POT"),
        
        x_x002D_OJB(1,"x-OJB");
        
        private int code;
        private java.lang.String xmlValue;
        
        Ojibwayan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Ojibwayan fromString(String str)
        {
            if (str.equals("x-POT"))
                return x_x002D_POT;
            if (str.equals("x-OJB"))
                return x_x002D_OJB;
		    return null;
        }
    }

	/**
	* abstDomain: A18164 (C-0-T18130-A18131-A18132-A18164-cpt)
	*/
    public enum SaukFoxKickapoo
    {
        
        x_x002D_KIC(0,"x-KIC"),
        
        x_x002D_SAC(1,"x-SAC"),
        
        x_x002D_SJW(2,"x-SJW");
        
        private int code;
        private java.lang.String xmlValue;
        
        SaukFoxKickapoo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SaukFoxKickapoo fromString(String str)
        {
            if (str.equals("x-KIC"))
                return x_x002D_KIC;
            if (str.equals("x-SAC"))
                return x_x002D_SAC;
            if (str.equals("x-SJW"))
                return x_x002D_SJW;
		    return null;
        }
    }

	/**
	* abstDomain: A18189 (C-0-T18130-A18131-A18189-cpt)
	*/
    public enum Ritwan
    {
        
        x_x002D_YUR(0,"x-YUR");
        
        private int code;
        private java.lang.String xmlValue;
        
        Ritwan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Ritwan fromString(String str)
        {
            if (str.equals("x-YUR"))
                return x_x002D_YUR;
		    return null;
        }
    }

	/**
	* abstDomain: A18224 (C-0-T18130-A18223-A18224-cpt)
	*/
    public enum NorthernCaddoan
    {
        
        x_x002D_ARI(0,"x-ARI"),
        
        x_x002D_PAW(1,"x-PAW"),
        
        x_x002D_WIC(2,"x-WIC");
        
        private int code;
        private java.lang.String xmlValue;
        
        NorthernCaddoan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NorthernCaddoan fromString(String str)
        {
            if (str.equals("x-ARI"))
                return x_x002D_ARI;
            if (str.equals("x-PAW"))
                return x_x002D_PAW;
            if (str.equals("x-WIC"))
                return x_x002D_WIC;
		    return null;
        }
    }

	/**
	* abstDomain: A18233 (C-0-T18130-A18223-A18233-cpt)
	*/
    public enum SouthernCaddoan
    {
        
        x_x002D_CAD(0,"x-CAD");
        
        private int code;
        private java.lang.String xmlValue;
        
        SouthernCaddoan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SouthernCaddoan fromString(String str)
        {
            if (str.equals("x-CAD"))
                return x_x002D_CAD;
		    return null;
        }
    }

	/**
	* abstDomain: A18238 (C-0-T18130-A18238-cpt)
	*/
    public enum Chimakuan
    {
        
        x_x002D_QUI(0,"x-QUI");
        
        private int code;
        private java.lang.String xmlValue;
        
        Chimakuan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Chimakuan fromString(String str)
        {
            if (str.equals("x-QUI"))
                return x_x002D_QUI;
		    return null;
        }
    }

	/**
	* abstDomain: A18221 (C-0-T18130-A18191-A18221-cpt)
	*/
    public enum Aleut
    {
        
        x_x002D_ALW(0,"x-ALW");
        
        private int code;
        private java.lang.String xmlValue;
        
        Aleut(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Aleut fromString(String str)
        {
            if (str.equals("x-ALW"))
                return x_x002D_ALW;
		    return null;
        }
    }

	/**
	* abstDomain: A18210 (C-0-T18130-A18191-A18192-A18210-cpt)
	*/
    public enum InuitInupiaq
    {
        
        x_x002D_ESI(0,"x-ESI"),
        
        x_x002D_ESK(1,"x-ESK");
        
        private int code;
        private java.lang.String xmlValue;
        
        InuitInupiaq(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static InuitInupiaq fromString(String str)
        {
            if (str.equals("x-ESI"))
                return x_x002D_ESI;
            if (str.equals("x-ESK"))
                return x_x002D_ESK;
		    return null;
        }
    }

	/**
	* abstDomain: A18193 (C-0-T18130-A18191-A18192-A18193-cpt)
	*/
    public enum SirenikskiYupik
    {
        
        x_x002D_ESU(0,"x-ESU"),
        
        x_x002D_ESS(1,"x-ESS"),
        
        x_x002D_EMS(2,"x-EMS");
        
        private int code;
        private java.lang.String xmlValue;
        
        SirenikskiYupik(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SirenikskiYupik fromString(String str)
        {
            if (str.equals("x-ESU"))
                return x_x002D_ESU;
            if (str.equals("x-ESS"))
                return x_x002D_ESS;
            if (str.equals("x-EMS"))
                return x_x002D_EMS;
		    return null;
        }
    }

	/**
	* abstDomain: A18292 (C-0-T18130-A18241-A18274-A18275-A18291-A18292-cpt)
	*/
    public enum Diegueno
    {
        
        x_x002D_DIH(0,"x-DIH");
        
        private int code;
        private java.lang.String xmlValue;
        
        Diegueno(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Diegueno fromString(String str)
        {
            if (str.equals("x-DIH"))
                return x_x002D_DIH;
		    return null;
        }
    }

	/**
	* abstDomain: A18276 (C-0-T18130-A18241-A18274-A18275-A18276-cpt)
	*/
    public enum Pai
    {
        
        x_x002D_YUF(0,"x-YUF");
        
        private int code;
        private java.lang.String xmlValue;
        
        Pai(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Pai fromString(String str)
        {
            if (str.equals("x-YUF"))
                return x_x002D_YUF;
		    return null;
        }
    }

	/**
	* abstDomain: A18282 (C-0-T18130-A18241-A18274-A18275-A18282-cpt)
	*/
    public enum River
    {
        
        x_x002D_MRC(0,"x-MRC"),
        
        x_x002D_MOV(1,"x-MOV"),
        
        x_x002D_YUM(2,"x-YUM");
        
        private int code;
        private java.lang.String xmlValue;
        
        River(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static River fromString(String str)
        {
            if (str.equals("x-MRC"))
                return x_x002D_MRC;
            if (str.equals("x-MOV"))
                return x_x002D_MOV;
            if (str.equals("x-YUM"))
                return x_x002D_YUM;
		    return null;
        }
    }

	/**
	* abstDomain: A18248 (C-0-T18130-A18241-A18248-cpt)
	*/
    public enum Palaihnihan
    {
        
        x_x002D_ACH(0,"x-ACH"),
        
        x_x002D_ATW(1,"x-ATW");
        
        private int code;
        private java.lang.String xmlValue;
        
        Palaihnihan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Palaihnihan fromString(String str)
        {
            if (str.equals("x-ACH"))
                return x_x002D_ACH;
            if (str.equals("x-ATW"))
                return x_x002D_ATW;
		    return null;
        }
    }

	/**
	* abstDomain: A18253 (C-0-T18130-A18241-A18253-cpt)
	*/
    public enum Pomoan
    {
        
        x_x002D_POO(0,"x-POO"),
        
        x_x002D_KJU(1,"x-KJU"),
        
        x_x002D_PEF(2,"x-PEF"),
        
        x_x002D_PEO(3,"x-PEO"),
        
        x_x002D_PEQ(4,"x-PEQ");
        
        private int code;
        private java.lang.String xmlValue;
        
        Pomoan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Pomoan fromString(String str)
        {
            if (str.equals("x-POO"))
                return x_x002D_POO;
            if (str.equals("x-KJU"))
                return x_x002D_KJU;
            if (str.equals("x-PEF"))
                return x_x002D_PEF;
            if (str.equals("x-PEO"))
                return x_x002D_PEO;
            if (str.equals("x-PEQ"))
                return x_x002D_PEQ;
		    return null;
        }
    }

	/**
	* abstDomain: A18244 (C-0-T18130-A18241-A18244-cpt)
	*/
    public enum Shasta
    {
        
        x_x002D_SHT(0,"x-SHT");
        
        private int code;
        private java.lang.String xmlValue;
        
        Shasta(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Shasta fromString(String str)
        {
            if (str.equals("x-SHT"))
                return x_x002D_SHT;
		    return null;
        }
    }

	/**
	* abstDomain: A18307 (C-0-T18130-A18306-A18307-cpt)
	*/
    public enum NorthernIroquoian
    {
        
        x_x002D_CAY(0,"x-CAY"),
        
        x_x002D_MOH(1,"x-MOH"),
        
        x_x002D_ONE(2,"x-ONE"),
        
        x_x002D_ONO(3,"x-ONO"),
        
        x_x002D_SEE(4,"x-SEE"),
        
        x_x002D_TUS(5,"x-TUS");
        
        private int code;
        private java.lang.String xmlValue;
        
        NorthernIroquoian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NorthernIroquoian fromString(String str)
        {
            if (str.equals("x-CAY"))
                return x_x002D_CAY;
            if (str.equals("x-MOH"))
                return x_x002D_MOH;
            if (str.equals("x-ONE"))
                return x_x002D_ONE;
            if (str.equals("x-ONO"))
                return x_x002D_ONO;
            if (str.equals("x-SEE"))
                return x_x002D_SEE;
            if (str.equals("x-TUS"))
                return x_x002D_TUS;
		    return null;
        }
    }

	/**
	* abstDomain: A18319 (C-0-T18130-A18319-cpt)
	*/
    public enum Keresan
    {
        
        x_x002D_KJQ(0,"x-KJQ"),
        
        x_x002D_KEE(1,"x-KEE");
        
        private int code;
        private java.lang.String xmlValue;
        
        Keresan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Keresan fromString(String str)
        {
            if (str.equals("x-KJQ"))
                return x_x002D_KJQ;
            if (str.equals("x-KEE"))
                return x_x002D_KEE;
		    return null;
        }
    }

	/**
	* abstDomain: A18331 (C-0-T18130-A18327-A18331-cpt)
	*/
    public enum Tiwa
    {
        
        x_x002D_TAO(0,"x-TAO"),
        
        x_x002D_TIX(1,"x-TIX");
        
        private int code;
        private java.lang.String xmlValue;
        
        Tiwa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Tiwa fromString(String str)
        {
            if (str.equals("x-TAO"))
                return x_x002D_TAO;
            if (str.equals("x-TIX"))
                return x_x002D_TIX;
		    return null;
        }
    }

	/**
	* abstDomain: A18342 (C-0-T18130-A18338-A18342-cpt)
	*/
    public enum CentralMuskogean
    {
        
        x_x002D_AKZ(0,"x-AKZ"),
        
        x_x002D_CKU(1,"x-CKU"),
        
        x_x002D_MIK(2,"x-MIK");
        
        private int code;
        private java.lang.String xmlValue;
        
        CentralMuskogean(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CentralMuskogean fromString(String str)
        {
            if (str.equals("x-AKZ"))
                return x_x002D_AKZ;
            if (str.equals("x-CKU"))
                return x_x002D_CKU;
            if (str.equals("x-MIK"))
                return x_x002D_MIK;
		    return null;
        }
    }

	/**
	* abstDomain: A18339 (C-0-T18130-A18338-A18339-cpt)
	*/
    public enum WesternMuskogean
    {
        
        x_x002D_CIC(0,"x-CIC"),
        
        x_x002D_CCT(1,"x-CCT");
        
        private int code;
        private java.lang.String xmlValue;
        
        WesternMuskogean(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static WesternMuskogean fromString(String str)
        {
            if (str.equals("x-CIC"))
                return x_x002D_CIC;
            if (str.equals("x-CCT"))
                return x_x002D_CCT;
		    return null;
        }
    }

	/**
	* abstDomain: A18407 (C-0-T18130-A18352-A18356-A18358-A18399-A18407-cpt)
	*/
    public enum EasternApachean
    {
        
        x_x002D_APJ(0,"x-APJ"),
        
        x_x002D_APL(1,"x-APL");
        
        private int code;
        private java.lang.String xmlValue;
        
        EasternApachean(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EasternApachean fromString(String str)
        {
            if (str.equals("x-APJ"))
                return x_x002D_APJ;
            if (str.equals("x-APL"))
                return x_x002D_APL;
		    return null;
        }
    }

	/**
	* abstDomain: A18400 (C-0-T18130-A18352-A18356-A18358-A18399-A18400-cpt)
	*/
    public enum WesternApachean
    {
        
        x_x002D_NAV(0,"x-NAV"),
        
        x_x002D_APM(1,"x-APM"),
        
        x_x002D_APW(2,"x-APW");
        
        private int code;
        private java.lang.String xmlValue;
        
        WesternApachean(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static WesternApachean fromString(String str)
        {
            if (str.equals("x-NAV"))
                return x_x002D_NAV;
            if (str.equals("x-APM"))
                return x_x002D_APM;
            if (str.equals("x-APW"))
                return x_x002D_APW;
		    return null;
        }
    }

	/**
	* abstDomain: A18366 (C-0-T18130-A18352-A18356-A18358-A18365-A18366-cpt)
	*/
    public enum KoyukonIngalik
    {
        
        x_x002D_ING(0,"x-ING"),
        
        x_x002D_HOI(1,"x-HOI"),
        
        x_x002D_KOY(2,"x-KOY");
        
        private int code;
        private java.lang.String xmlValue;
        
        KoyukonIngalik(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static KoyukonIngalik fromString(String str)
        {
            if (str.equals("x-ING"))
                return x_x002D_ING;
            if (str.equals("x-HOI"))
                return x_x002D_HOI;
            if (str.equals("x-KOY"))
                return x_x002D_KOY;
		    return null;
        }
    }

	/**
	* abstDomain: A18379 (C-0-T18130-A18352-A18356-A18358-A18365-A18379-cpt)
	*/
    public enum KutchinHan
    {
        
        x_x002D_HAA(0,"x-HAA"),
        
        x_x002D_KUC(1,"x-KUC");
        
        private int code;
        private java.lang.String xmlValue;
        
        KutchinHan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static KutchinHan fromString(String str)
        {
            if (str.equals("x-HAA"))
                return x_x002D_HAA;
            if (str.equals("x-KUC"))
                return x_x002D_KUC;
		    return null;
        }
    }

	/**
	* abstDomain: A18374 (C-0-T18130-A18352-A18356-A18358-A18365-A18371-A18374-cpt)
	*/
    public enum Tanana
    {
        
        x_x002D_TAA(0,"x-TAA"),
        
        x_x002D_TCB(1,"x-TCB"),
        
        x_x002D_TAU(2,"x-TAU");
        
        private int code;
        private java.lang.String xmlValue;
        
        Tanana(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Tanana fromString(String str)
        {
            if (str.equals("x-TAA"))
                return x_x002D_TAA;
            if (str.equals("x-TCB"))
                return x_x002D_TCB;
            if (str.equals("x-TAU"))
                return x_x002D_TAU;
		    return null;
        }
    }

	/**
	* abstDomain: A18391 (C-0-T18130-A18352-A18356-A18358-A18386-A18391-cpt)
	*/
    public enum CaliforniaAthapaskan
    {
        
        x_x002D_KTW(0,"x-KTW"),
        
        x_x002D_HUP(1,"x-HUP");
        
        private int code;
        private java.lang.String xmlValue;
        
        CaliforniaAthapaskan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CaliforniaAthapaskan fromString(String str)
        {
            if (str.equals("x-KTW"))
                return x_x002D_KTW;
            if (str.equals("x-HUP"))
                return x_x002D_HUP;
		    return null;
        }
    }

	/**
	* abstDomain: A18387 (C-0-T18130-A18352-A18356-A18358-A18386-A18387-cpt)
	*/
    public enum OregonAthapaskan
    {
        
        x_x002D_TOL(0,"x-TOL"),
        
        x_x002D_TUU(1,"x-TUU");
        
        private int code;
        private java.lang.String xmlValue;
        
        OregonAthapaskan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OregonAthapaskan fromString(String str)
        {
            if (str.equals("x-TOL"))
                return x_x002D_TOL;
            if (str.equals("x-TUU"))
                return x_x002D_TUU;
		    return null;
        }
    }

	/**
	* abstDomain: A18359 (C-0-T18130-A18352-A18356-A18358-A18359-cpt)
	*/
    public enum SouthernAlaska
    {
        
        x_x002D_AHT(0,"x-AHT"),
        
        x_x002D_TFN(1,"x-TFN");
        
        private int code;
        private java.lang.String xmlValue;
        
        SouthernAlaska(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SouthernAlaska fromString(String str)
        {
            if (str.equals("x-AHT"))
                return x_x002D_AHT;
            if (str.equals("x-TFN"))
                return x_x002D_TFN;
		    return null;
        }
    }

	/**
	* abstDomain: A18415 (C-0-T18130-A18413-A18414-A18415-cpt)
	*/
    public enum UpperChinook
    {
        
        x_x002D_WAC(0,"x-WAC");
        
        private int code;
        private java.lang.String xmlValue;
        
        UpperChinook(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static UpperChinook fromString(String str)
        {
            if (str.equals("x-WAC"))
                return x_x002D_WAC;
		    return null;
        }
    }

	/**
	* abstDomain: A18421 (C-0-T18130-A18413-A18421-cpt)
	*/
    public enum Coosan
    {
        
        x_x002D_COS(0,"x-COS");
        
        private int code;
        private java.lang.String xmlValue;
        
        Coosan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Coosan fromString(String str)
        {
            if (str.equals("x-COS"))
                return x_x002D_COS;
		    return null;
        }
    }

	/**
	* abstDomain: A18435 (C-0-T18130-A18413-A18435-cpt)
	*/
    public enum Maiduan
    {
        
        x_x002D_NSZ(0,"x-NSZ"),
        
        x_x002D_NMU(1,"x-NMU"),
        
        x_x002D_MAI(2,"x-MAI");
        
        private int code;
        private java.lang.String xmlValue;
        
        Maiduan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Maiduan fromString(String str)
        {
            if (str.equals("x-NSZ"))
                return x_x002D_NSZ;
            if (str.equals("x-NMU"))
                return x_x002D_NMU;
            if (str.equals("x-MAI"))
                return x_x002D_MAI;
		    return null;
        }
    }

	/**
	* abstDomain: A18500 (C-0-T18130-A18413-A18498-A18500-cpt)
	*/
    public enum Sahaptian
    {
        
        x_x002D_WAR(0,"x-WAR"),
        
        x_x002D_UMA(1,"x-UMA"),
        
        x_x002D_WAA(2,"x-WAA"),
        
        x_x002D_YAK(3,"x-YAK");
        
        private int code;
        private java.lang.String xmlValue;
        
        Sahaptian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Sahaptian fromString(String str)
        {
            if (str.equals("x-WAR"))
                return x_x002D_WAR;
            if (str.equals("x-UMA"))
                return x_x002D_UMA;
            if (str.equals("x-WAA"))
                return x_x002D_WAA;
            if (str.equals("x-YAK"))
                return x_x002D_YAK;
		    return null;
        }
    }

	/**
	* abstDomain: A18425 (C-0-T18130-A18413-A18424-A18425-cpt)
	*/
    public enum Kalapuyan
    {
        
        x_x002D_KAL(0,"x-KAL");
        
        private int code;
        private java.lang.String xmlValue;
        
        Kalapuyan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Kalapuyan fromString(String str)
        {
            if (str.equals("x-KAL"))
                return x_x002D_KAL;
		    return null;
        }
    }

	/**
	* abstDomain: A18511 (C-0-T18130-A18413-A18511-cpt)
	*/
    public enum Tsimshianic
    {
        
        x_x002D_TSI(0,"x-TSI");
        
        private int code;
        private java.lang.String xmlValue;
        
        Tsimshianic(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Tsimshianic fromString(String str)
        {
            if (str.equals("x-TSI"))
                return x_x002D_TSI;
		    return null;
        }
    }

	/**
	* abstDomain: A18463 (C-0-T18130-A18413-A18458-A18459-A18463-cpt)
	*/
    public enum EasternMiwok
    {
        
        x_x002D_CSM(0,"x-CSM"),
        
        x_x002D_NSQ(1,"x-NSQ"),
        
        x_x002D_PMW(2,"x-PMW"),
        
        x_x002D_SKD(3,"x-SKD");
        
        private int code;
        private java.lang.String xmlValue;
        
        EasternMiwok(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EasternMiwok fromString(String str)
        {
            if (str.equals("x-CSM"))
                return x_x002D_CSM;
            if (str.equals("x-NSQ"))
                return x_x002D_NSQ;
            if (str.equals("x-PMW"))
                return x_x002D_PMW;
            if (str.equals("x-SKD"))
                return x_x002D_SKD;
		    return null;
        }
    }

	/**
	* abstDomain: A18460 (C-0-T18130-A18413-A18458-A18459-A18460-cpt)
	*/
    public enum WesternMiwok
    {
        
        x_x002D_CSI(0,"x-CSI"),
        
        x_x002D_LMW(1,"x-LMW");
        
        private int code;
        private java.lang.String xmlValue;
        
        WesternMiwok(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static WesternMiwok fromString(String str)
        {
            if (str.equals("x-CSI"))
                return x_x002D_CSI;
            if (str.equals("x-LMW"))
                return x_x002D_LMW;
		    return null;
        }
    }

	/**
	* abstDomain: A18431 (C-0-T18130-A18413-A18431-cpt)
	*/
    public enum Wintuan
    {
        
        x_x002D_WIT(0,"x-WIT");
        
        private int code;
        private java.lang.String xmlValue;
        
        Wintuan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Wintuan fromString(String str)
        {
            if (str.equals("x-WIT"))
                return x_x002D_WIT;
		    return null;
        }
    }

	/**
	* abstDomain: A18479 (C-0-T18130-A18413-A18479-cpt)
	*/
    public enum Yokutsan
    {
        
        x_x002D_GSH(0,"x-GSH"),
        
        x_x002D_ENH(1,"x-ENH"),
        
        x_x002D_PYL(2,"x-PYL"),
        
        x_x002D_TKH(3,"x-TKH");
        
        private int code;
        private java.lang.String xmlValue;
        
        Yokutsan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Yokutsan fromString(String str)
        {
            if (str.equals("x-GSH"))
                return x_x002D_GSH;
            if (str.equals("x-ENH"))
                return x_x002D_ENH;
            if (str.equals("x-PYL"))
                return x_x002D_PYL;
            if (str.equals("x-TKH"))
                return x_x002D_TKH;
		    return null;
        }
    }

	/**
	* abstDomain: A18518 (C-0-T18130-A18518-cpt)
	*/
    public enum Pidgin
    {
        
        x_x002D_CHH(0,"x-CHH");
        
        private int code;
        private java.lang.String xmlValue;
        
        Pidgin(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Pidgin fromString(String str)
        {
            if (str.equals("x-CHH"))
                return x_x002D_CHH;
		    return null;
        }
    }

	/**
	* abstDomain: A18524 (C-0-T18130-A18523-A18524-cpt)
	*/
    public enum CentralSalish
    {
        
        x_x002D_CLM(0,"x-CLM"),
        
        x_x002D_LUT(1,"x-LUT"),
        
        x_x002D_STR(2,"x-STR");
        
        private int code;
        private java.lang.String xmlValue;
        
        CentralSalish(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CentralSalish fromString(String str)
        {
            if (str.equals("x-CLM"))
                return x_x002D_CLM;
            if (str.equals("x-LUT"))
                return x_x002D_LUT;
            if (str.equals("x-STR"))
                return x_x002D_STR;
		    return null;
        }
    }

	/**
	* abstDomain: A18540 (C-0-T18130-A18523-A18540-cpt)
	*/
    public enum InteriorSalish
    {
        
        x_x002D_CRD(0,"x-CRD"),
        
        x_x002D_COL(1,"x-COL"),
        
        x_x002D_FLA(2,"x-FLA"),
        
        x_x002D_OKA(3,"x-OKA");
        
        private int code;
        private java.lang.String xmlValue;
        
        InteriorSalish(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static InteriorSalish fromString(String str)
        {
            if (str.equals("x-CRD"))
                return x_x002D_CRD;
            if (str.equals("x-COL"))
                return x_x002D_COL;
            if (str.equals("x-FLA"))
                return x_x002D_FLA;
            if (str.equals("x-OKA"))
                return x_x002D_OKA;
		    return null;
        }
    }

	/**
	* abstDomain: A18533 (C-0-T18130-A18523-A18533-cpt)
	*/
    public enum Tsamosan
    {
        
        x_x002D_COW(0,"x-COW"),
        
        x_x002D_CEA(1,"x-CEA"),
        
        x_x002D_QUN(2,"x-QUN"),
        
        x_x002D_CJH(3,"x-CJH");
        
        private int code;
        private java.lang.String xmlValue;
        
        Tsamosan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Tsamosan fromString(String str)
        {
            if (str.equals("x-COW"))
                return x_x002D_COW;
            if (str.equals("x-CEA"))
                return x_x002D_CEA;
            if (str.equals("x-QUN"))
                return x_x002D_QUN;
            if (str.equals("x-CJH"))
                return x_x002D_CJH;
		    return null;
        }
    }

	/**
	* abstDomain: A18593 (C-0-T18130-A18552-A18553-A18562-A18593-cpt)
	*/
    public enum ChiwereWinnebago
    {
        
        x_x002D_IOW(0,"x-IOW"),
        
        x_x002D_WIN(1,"x-WIN");
        
        private int code;
        private java.lang.String xmlValue;
        
        ChiwereWinnebago(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ChiwereWinnebago fromString(String str)
        {
            if (str.equals("x-IOW"))
                return x_x002D_IOW;
            if (str.equals("x-WIN"))
                return x_x002D_WIN;
		    return null;
        }
    }

	/**
	* abstDomain: A18563 (C-0-T18130-A18552-A18553-A18562-A18563-cpt)
	*/
    public enum Dakotan
    {
        
        x_x002D_ASB(0,"x-ASB"),
        
        x_x002D_DHG(1,"x-DHG"),
        
        x_x002D_LKT(2,"x-LKT"),
        
        x_x002D_NKT(3,"x-NKT");
        
        private int code;
        private java.lang.String xmlValue;
        
        Dakotan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Dakotan fromString(String str)
        {
            if (str.equals("x-ASB"))
                return x_x002D_ASB;
            if (str.equals("x-DHG"))
                return x_x002D_DHG;
            if (str.equals("x-LKT"))
                return x_x002D_LKT;
            if (str.equals("x-NKT"))
                return x_x002D_NKT;
		    return null;
        }
    }

	/**
	* abstDomain: A18580 (C-0-T18130-A18552-A18553-A18562-A18580-cpt)
	*/
    public enum Dhegiha
    {
        
        x_x002D_KAA(0,"x-KAA"),
        
        x_x002D_OMA(1,"x-OMA"),
        
        x_x002D_OSA(2,"x-OSA"),
        
        x_x002D_QUA(3,"x-QUA");
        
        private int code;
        private java.lang.String xmlValue;
        
        Dhegiha(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Dhegiha fromString(String str)
        {
            if (str.equals("x-KAA"))
                return x_x002D_KAA;
            if (str.equals("x-OMA"))
                return x_x002D_OMA;
            if (str.equals("x-OSA"))
                return x_x002D_OSA;
            if (str.equals("x-QUA"))
                return x_x002D_QUA;
		    return null;
        }
    }

	/**
	* abstDomain: A18554 (C-0-T18130-A18552-A18553-A18554-cpt)
	*/
    public enum MissouriRiver
    {
        
        x_x002D_CRO(0,"x-CRO"),
        
        x_x002D_HID(1,"x-HID");
        
        private int code;
        private java.lang.String xmlValue;
        
        MissouriRiver(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MissouriRiver fromString(String str)
        {
            if (str.equals("x-CRO"))
                return x_x002D_CRO;
            if (str.equals("x-HID"))
                return x_x002D_HID;
		    return null;
        }
    }

	/**
	* abstDomain: A18611 (C-0-T18130-A18605-A18606-A18611-cpt)
	*/
    public enum CentralNumic
    {
        
        x_x002D_COM(0,"x-COM"),
        
        x_x002D_PAR(1,"x-PAR"),
        
        x_x002D_SHH(2,"x-SHH");
        
        private int code;
        private java.lang.String xmlValue;
        
        CentralNumic(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CentralNumic fromString(String str)
        {
            if (str.equals("x-COM"))
                return x_x002D_COM;
            if (str.equals("x-PAR"))
                return x_x002D_PAR;
            if (str.equals("x-SHH"))
                return x_x002D_SHH;
		    return null;
        }
    }

	/**
	* abstDomain: A18617 (C-0-T18130-A18605-A18606-A18617-cpt)
	*/
    public enum SouthernNumic
    {
        
        x_x002D_KAW(0,"x-KAW"),
        
        x_x002D_UTE(1,"x-UTE");
        
        private int code;
        private java.lang.String xmlValue;
        
        SouthernNumic(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SouthernNumic fromString(String str)
        {
            if (str.equals("x-KAW"))
                return x_x002D_KAW;
            if (str.equals("x-UTE"))
                return x_x002D_UTE;
		    return null;
        }
    }

	/**
	* abstDomain: A18607 (C-0-T18130-A18605-A18606-A18607-cpt)
	*/
    public enum WesternNumic
    {
        
        x_x002D_MON(0,"x-MON"),
        
        x_x002D_PAO(1,"x-PAO");
        
        private int code;
        private java.lang.String xmlValue;
        
        WesternNumic(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static WesternNumic fromString(String str)
        {
            if (str.equals("x-MON"))
                return x_x002D_MON;
            if (str.equals("x-PAO"))
                return x_x002D_PAO;
		    return null;
        }
    }

	/**
	* abstDomain: A18624 (C-0-T18130-A18605-A18621-A18624-cpt)
	*/
    public enum Cupan
    {
        
        x_x002D_CHL(0,"x-CHL"),
        
        x_x002D_CUP(1,"x-CUP"),
        
        x_x002D_LUI(2,"x-LUI");
        
        private int code;
        private java.lang.String xmlValue;
        
        Cupan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Cupan fromString(String str)
        {
            if (str.equals("x-CHL"))
                return x_x002D_CHL;
            if (str.equals("x-CUP"))
                return x_x002D_CUP;
            if (str.equals("x-LUI"))
                return x_x002D_LUI;
		    return null;
        }
    }

	/**
	* abstDomain: A18622 (C-0-T18130-A18605-A18621-A18622-cpt)
	*/
    public enum SerranoGabrielino
    {
        
        x_x002D_SER(0,"x-SER");
        
        private int code;
        private java.lang.String xmlValue;
        
        SerranoGabrielino(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SerranoGabrielino fromString(String str)
        {
            if (str.equals("x-SER"))
                return x_x002D_SER;
		    return null;
        }
    }

	/**
	* abstDomain: A18637 (C-0-T18130-A18605-A18636-A18637-cpt)
	*/
    public enum Cahitan
    {
        
        x_x002D_YAQ(0,"x-YAQ");
        
        private int code;
        private java.lang.String xmlValue;
        
        Cahitan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Cahitan fromString(String str)
        {
            if (str.equals("x-YAQ"))
                return x_x002D_YAQ;
		    return null;
        }
    }

	/**
	* abstDomain: A18629 (C-0-T18130-A18605-A18629-cpt)
	*/
    public enum Tepiman
    {
        
        x_x002D_PAP(0,"x-PAP");
        
        private int code;
        private java.lang.String xmlValue;
        
        Tepiman(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Tepiman fromString(String str)
        {
            if (str.equals("x-PAP"))
                return x_x002D_PAP;
		    return null;
        }
    }

	/**
	* abstDomain: A18641 (C-0-T18130-A18640-A18641-cpt)
	*/
    public enum Nootkan
    {
        
        x_x002D_MYH(0,"x-MYH");
        
        private int code;
        private java.lang.String xmlValue;
        
        Nootkan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Nootkan fromString(String str)
        {
            if (str.equals("x-MYH"))
                return x_x002D_MYH;
		    return null;
        }
    }

	/**
	* abstDomain: A18646 (C-0-T18130-A18646-cpt)
	*/
    public enum Yukian
    {
        
        x_x002D_WAO(0,"x-WAO"),
        
        x_x002D_YUK(1,"x-YUK");
        
        private int code;
        private java.lang.String xmlValue;
        
        Yukian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Yukian fromString(String str)
        {
            if (str.equals("x-WAO"))
                return x_x002D_WAO;
            if (str.equals("x-YUK"))
                return x_x002D_YUK;
		    return null;
        }
    }

	/**
	* vocSet: T17422 (C-0-T17422-cpt)
	*/
    public enum Calendar
    {
        
        GREG(0);
        
        private int code;
        
        Calendar(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Calendar fromString(String str)
        {
            if (str.equals("GREG"))
                return GREG;
		    return null;
        }
    }

	/**
	* abstDomain: A10701 (C-0-T10684-A10701-cpt)
	*/
    public enum CalendarCycleOneLetter
    {
        
        D(0),
        
        J(1),
        
        H(2),
        
        N(3),
        
        M(4),
        
        S(5),
        
        W(6),
        
        Y(7);
        
        private int code;
        
        CalendarCycleOneLetter(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CalendarCycleOneLetter fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("J"))
                return J;
            if (str.equals("H"))
                return H;
            if (str.equals("N"))
                return N;
            if (str.equals("M"))
                return M;
            if (str.equals("S"))
                return S;
            if (str.equals("W"))
                return W;
            if (str.equals("Y"))
                return Y;
		    return null;
        }
    }

	/**
	* vocSet: T10682 (C-0-T10682-cpt)
	*/
    public enum CalendarType
    {
        
        GREG(0);
        
        private int code;
        
        CalendarType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CalendarType fromString(String str)
        {
            if (str.equals("GREG"))
                return GREG;
		    return null;
        }
    }

	/**
	* vocSet: T14853 (C-0-T14853-cpt)
	*/
    public enum Charset
    {
        
        EBCDIC(0,"EBCDIC"),
        
        ISO_x002D_10646_x002D_UCS_x002D_2(1,"ISO-10646-UCS-2"),
        
        ISO_x002D_10646_x002D_UCS_x002D_4(2,"ISO-10646-UCS-4"),
        
        ISO_x002D_8859_x002D_1(3,"ISO-8859-1"),
        
        ISO_x002D_8859_x002D_2(4,"ISO-8859-2"),
        
        ISO_x002D_8859_x002D_5(5,"ISO-8859-5"),
        
        JIS_x002D_2022_x002D_JP(6,"JIS-2022-JP"),
        
        US_x002D_ASCII(7,"US-ASCII"),
        
        UTF_x002D_7(8,"UTF-7"),
        
        UTF_x002D_8(9,"UTF-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        Charset(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Charset fromString(String str)
        {
            if (str.equals("EBCDIC"))
                return EBCDIC;
            if (str.equals("ISO-10646-UCS-2"))
                return ISO_x002D_10646_x002D_UCS_x002D_2;
            if (str.equals("ISO-10646-UCS-4"))
                return ISO_x002D_10646_x002D_UCS_x002D_4;
            if (str.equals("ISO-8859-1"))
                return ISO_x002D_8859_x002D_1;
            if (str.equals("ISO-8859-2"))
                return ISO_x002D_8859_x002D_2;
            if (str.equals("ISO-8859-5"))
                return ISO_x002D_8859_x002D_5;
            if (str.equals("JIS-2022-JP"))
                return JIS_x002D_2022_x002D_JP;
            if (str.equals("US-ASCII"))
                return US_x002D_ASCII;
            if (str.equals("UTF-7"))
                return UTF_x002D_7;
            if (str.equals("UTF-8"))
                return UTF_x002D_8;
		    return null;
        }
    }

	/**
	* vocSet: T396 (C-0-T396-cpt)
	*/
    public enum CodeSystem
    {
        
        ABCcodes(0,"ABCcodes"),
        
        AS4E(1,"AS4E"),
        
        AS4(2,"AS4"),
        
        AcknowledgementDetailType(3,"AcknowledgementDetailType"),
        
        AcknowledgementCondition(4,"AcknowledgementCondition"),
        
        AcknowledgementDetailCode(5,"AcknowledgementDetailCode"),
        
        AcknowledgementType(6,"AcknowledgementType"),
        
        ActClass(7,"ActClass"),
        
        ActCode(8,"ActCode"),
        
        ActExposureLevelCode(9,"ActExposureLevelCode"),
        
        ActInvoiceElementModifier(10,"ActInvoiceElementModifier"),
        
        ActMood(11,"ActMood"),
        
        ActPriority(12,"ActPriority"),
        
        ActReason(13,"ActReason"),
        
        ActRelationshipCheckpoint(14,"ActRelationshipCheckpoint"),
        
        ActRelationshipJoin(15,"ActRelationshipJoin"),
        
        ActRelationshipSplit(16,"ActRelationshipSplit"),
        
        ActRelationshipSubset(17,"ActRelationshipSubset"),
        
        ActRelationshipType(18,"ActRelationshipType"),
        
        ActSite(19,"ActSite"),
        
        ActStatus(20,"ActStatus"),
        
        ActUncertainty(21,"ActUncertainty"),
        
        AddressPartType(22,"AddressPartType"),
        
        AdministrativeGender(23,"AdministrativeGender"),
        
        ACR(24,"ACR"),
        
        ATC(25,"ATC"),
        
        AmericanIndianAlaskaNativeLanguages(26,"AmericanIndianAlaskaNativeLanguages"),
        
        CAMNCVS(27,"CAMNCVS"),
        
        CSAID(28,"CSAID"),
        
        CDCA(29,"CDCA"),
        
        CDCM(30,"CDCM"),
        
        CDS(31,"CDS"),
        
        CVX(32,"CVX"),
        
        MVX(33,"MVX"),
        
        CD2(34,"CD2"),
        
        CE(35,"CE"),
        
        CLP(36,"CLP"),
        
        CST(37,"CST"),
        
        C4(38,"C4"),
        
        C5(39,"C5"),
        
        Calendar(40,"Calendar"),
        
        CalendarCycle(41,"CalendarCycle"),
        
        CalendarType(42,"CalendarType"),
        
        CCI(43,"CCI"),
        
        ICD_x002D_10_x002D_CA(44,"ICD-10-CA"),
        
        Charset(45,"Charset"),
        
        CAS(46,"CAS"),
        
        CodeSystem(47,"CodeSystem"),
        
        CodingRationale(48,"CodingRationale"),
        
        CommunicationFunctionType(49,"CommunicationFunctionType"),
        
        CompressionAlgorithm(50,"CompressionAlgorithm"),
        
        ConceptGenerality(51,"ConceptGenerality"),
        
        Confidentiality(52,"Confidentiality"),
        
        ContainerCap(53,"ContainerCap"),
        
        ContainerSeparator(54,"ContainerSeparator"),
        
        ContentProcessingMode(55,"ContentProcessingMode"),
        
        ContextControl(56,"ContextControl"),
        
        Currency(57,"Currency"),
        
        DCL(58,"DCL"),
        
        DQL(59,"DQL"),
        
        DCM(60,"DCM"),
        
        DataType(61,"DataType"),
        
        Dentition(62,"Dentition"),
        
        DeviceAlertLevel(63,"DeviceAlertLevel"),
        
        DocumentCompletion(64,"DocumentCompletion"),
        
        DocumentStorage(65,"DocumentStorage"),
        
        EPSG_x002D_GeodeticParameterDataset(66,"EPSG-GeodeticParameterDataset"),
        
        E(67,"E"),
        
        EditStatus(68,"EditStatus"),
        
        EducationLevel(69,"EducationLevel"),
        
        EmployeeJobClass(70,"EmployeeJobClass"),
        
        EncounterAcuity(71,"EncounterAcuity"),
        
        EncounterAccident(72,"EncounterAccident"),
        
        EncounterAdmissionSource(73,"EncounterAdmissionSource"),
        
        EncounterReferralSource(74,"EncounterReferralSource"),
        
        EncounterSpecialCourtesy(75,"EncounterSpecialCourtesy"),
        
        EntityClass(76,"EntityClass"),
        
        EntityCode(77,"EntityCode"),
        
        EntityDeterminer(78,"EntityDeterminer"),
        
        EntityHandling(79,"EntityHandling"),
        
        EntityNamePartQualifier(80,"EntityNamePartQualifier"),
        
        EntityNamePartType(81,"EntityNamePartType"),
        
        EntityNameUse(82,"EntityNameUse"),
        
        EntityRisk(83,"EntityRisk"),
        
        EntityStatus(84,"EntityStatus"),
        
        ENZC(85,"ENZC"),
        
        EquipmentAlertLevel(86,"EquipmentAlertLevel"),
        
        Ethnicity(87,"Ethnicity"),
        
        E5(88,"E5"),
        
        E7(89,"E7"),
        
        E6(90,"E6"),
        
        ExposureMode(91,"ExposureMode"),
        
        FDK(92,"FDK"),
        
        FDDX(93,"FDDX"),
        
        FDDC(94,"FDDC"),
        
        GTSAbbreviation(95,"GTSAbbreviation"),
        
        GenderStatus(96,"GenderStatus"),
        
        HPC(97,"HPC"),
        
        HB(98,"HB"),
        
        CodeSystemType(99,"CodeSystemType"),
        
        ConceptStatus(100,"ConceptStatus"),
        
        HL7ITSVersionCode(101,"HL7ITSVersionCode"),
        
        ConceptProperty(102,"ConceptProperty"),
        
        HL7CommitteeIDInRIM(103,"HL7CommitteeIDInRIM"),
        
        HL7ConformanceInclusion(104,"HL7ConformanceInclusion"),
        
        HL7DefinedRoseProperty(105,"HL7DefinedRoseProperty"),
        
        HL7StandardVersionCode(106,"HL7StandardVersionCode"),
        
        HL7UpdateMode(107,"HL7UpdateMode"),
        
        HI(108,"HI"),
        
        HealthcareProviderTaxonomyHIPAA(109,"HealthcareProviderTaxonomyHIPAA"),
        
        HHC(110,"HHC"),
        
        HtmlLinkType(111,"HtmlLinkType"),
        
        ICS(112,"ICS"),
        
        I10(113,"I10"),
        
        I10P(114,"I10P"),
        
        I9C(115,"I9C"),
        
        I9(116,"I9"),
        
        IC2(117,"IC2"),
        
        IETF1766(118,"IETF1766"),
        
        IBT(119,"IBT"),
        
        MDC(120,"MDC"),
        
        ISO3166_x002D_1(121,"ISO3166-1"),
        
        ISO3166_x002D_2(122,"ISO3166-2"),
        
        ISO3166_x002D_3(123,"ISO3166-3"),
        
        ISO4217(124,"ISO4217"),
        
        IUPC(125,"IUPC"),
        
        IUPP(126,"IUPP"),
        
        IntegrityCheckAlgorithm(127,"IntegrityCheckAlgorithm"),
        
        ICDO(128,"ICDO"),
        
        ICSD(129,"ICSD"),
        
        JC8(130,"JC8"),
        
        LanguageAbilityMode(131,"LanguageAbilityMode"),
        
        LanguageAbilityProficiency(132,"LanguageAbilityProficiency"),
        
        LivingArrangement(133,"LivingArrangement"),
        
        LocalMarkupIgnore(134,"LocalMarkupIgnore"),
        
        LocalRemoteControlState(135,"LocalRemoteControlState"),
        
        LN(136,"LN"),
        
        MDFAttributeType(137,"MDFAttributeType"),
        
        MDFSubjectAreaPrefix(138,"MDFSubjectAreaPrefix"),
        
        UMD(139,"UMD"),
        
        MEDCIN(140,"MEDCIN"),
        
        MIME(141,"MIME"),
        
        ManagedParticipationStatus(142,"ManagedParticipationStatus"),
        
        MapRelationship(143,"MapRelationship"),
        
        MaritalStatus(144,"MaritalStatus"),
        
        MaterialType(145,"MaterialType"),
        
        MdfHmdMetSourceType(146,"MdfHmdMetSourceType"),
        
        MdfHmdRowType(147,"MdfHmdRowType"),
        
        MdfRmimRowType(148,"MdfRmimRowType"),
        
        MediaType(149,"MediaType"),
        
        MEDR(150,"MEDR"),
        
        MEDX(151,"MEDX"),
        
        MEDC(152,"MEDC"),
        
        MDDX(153,"MDDX"),
        
        MGPI(154,"MGPI"),
        
        MessageWaitingPriority(155,"MessageWaitingPriority"),
        
        MessageCondition(156,"MessageCondition"),
        
        ModifyIndicator(157,"ModifyIndicator"),
        
        MULTUM(158,"MULTUM"),
        
        NAACCR(159,"NAACCR"),
        
        NDA(160,"NDA"),
        
        NOC(161,"NOC"),
        
        NUCCProviderCodes(162,"NUCCProviderCodes"),
        
        NUBC_x002D_UB92(163,"NUBC-UB92"),
        
        NDC(164,"NDC"),
        
        NAICS(165,"NAICS"),
        
        NullFlavor(166,"NullFlavor"),
        
        NIC(167,"NIC"),
        
        NMMDS(168,"NMMDS"),
        
        ObservationInterpretation(169,"ObservationInterpretation"),
        
        ObservationMethod(170,"ObservationMethod"),
        
        ObservationValue(171,"ObservationValue"),
        
        OHA(172,"OHA"),
        
        OrderableDrugForm(173,"OrderableDrugForm"),
        
        OrganizationNameType(174,"OrganizationNameType"),
        
        POS(175,"POS"),
        
        ParameterizedDataType(176,"ParameterizedDataType"),
        
        ParticipationFunction(177,"ParticipationFunction"),
        
        ParticipationMode(178,"ParticipationMode"),
        
        ParticipationSignature(179,"ParticipationSignature"),
        
        ParticipationType(180,"ParticipationType"),
        
        PatientImportance(181,"PatientImportance"),
        
        PaymentTerms(182,"PaymentTerms"),
        
        PeriodicIntervalOfTimeAbbreviation(183,"PeriodicIntervalOfTimeAbbreviation"),
        
        PNDS(184,"PNDS"),
        
        PersonDisabilityType(185,"PersonDisabilityType"),
        
        ConceptCodeRelationship(186,"ConceptCodeRelationship"),
        
        PostalAddressUse(187,"PostalAddressUse"),
        
        ProbabilityDistributionType(188,"ProbabilityDistributionType"),
        
        ProcedureMethod(189,"ProcedureMethod"),
        
        ProcessingID(190,"ProcessingID"),
        
        ProcessingMode(191,"ProcessingMode"),
        
        QueryParameterValue(192,"QueryParameterValue"),
        
        QueryPriority(193,"QueryPriority"),
        
        QueryQuantityUnit(194,"QueryQuantityUnit"),
        
        QueryRequestLimit(195,"QueryRequestLimit"),
        
        QueryResponse(196,"QueryResponse"),
        
        QueryStatusCode(197,"QueryStatusCode"),
        
        Race(198,"Race"),
        
        RC(199,"RC"),
        
        RelationalOperator(200,"RelationalOperator"),
        
        RelationshipConjunction(201,"RelationshipConjunction"),
        
        ReligiousAffiliation(202,"ReligiousAffiliation"),
        
        ResponseLevel(203,"ResponseLevel"),
        
        ResponseModality(204,"ResponseModality"),
        
        ResponseMode(205,"ResponseMode"),
        
        RoleClass(206,"RoleClass"),
        
        RoleCode(207,"RoleCode"),
        
        RoleLinkType(208,"RoleLinkType"),
        
        RoleStatus(209,"RoleStatus"),
        
        RouteOfAdministration(210,"RouteOfAdministration"),
        
        SCDHEC_x002D_GISSpatialAccuracyTiers(211,"SCDHEC-GISSpatialAccuracyTiers"),
        
        SNM3(212,"SNM3"),
        
        SNT(213,"SNT"),
        
        SDM(214,"SDM"),
        
        Sequencing(215,"Sequencing"),
        
        SetOperator(216,"SetOperator"),
        
        SpecialArrangement(217,"SpecialArrangement"),
        
        SpecimenType(218,"SpecimenType"),
        
        StyleType(219,"StyleType"),
        
        SubstanceAdminSubstitution(220,"SubstanceAdminSubstitution"),
        
        SubstitutionCondition(221,"SubstitutionCondition"),
        
        SNM(222,"SNM"),
        
        TableCellHorizontalAlign(223,"TableCellHorizontalAlign"),
        
        TableCellScope(224,"TableCellScope"),
        
        TableCellVerticalAlign(225,"TableCellVerticalAlign"),
        
        TableFrame(226,"TableFrame"),
        
        TableRules(227,"TableRules"),
        
        IETF3066(228,"IETF3066"),
        
        TargetAwareness(229,"TargetAwareness"),
        
        TelecommunicationAddressUse(230,"TelecommunicationAddressUse"),
        
        RCFB(231,"RCFB"),
        
        RCV2(232,"RCV2"),
        
        TimingEvent(233,"TimingEvent"),
        
        TransmissionRelationshipTypeCode(234,"TransmissionRelationshipTypeCode"),
        
        TribalEntityUS(235,"TribalEntityUS"),
        
        UC(236,"UC"),
        
        UCUM(237,"UCUM"),
        
        URLScheme(238,"URLScheme"),
        
        UML(239,"UML"),
        
        UnitsOfMeasure(240,"UnitsOfMeasure"),
        
        UPC(241,"UPC"),
        
        VaccineManufacturer(242,"VaccineManufacturer"),
        
        VaccineType(243,"VaccineType"),
        
        VocabularyDomainQualifier(244,"VocabularyDomainQualifier"),
        
        WC(245,"WC"),
        
        ART(246,"ART"),
        
        W4(247,"W4"),
        
        W1_x002D_W2(248,"W1-W2");
        
        private int code;
        private java.lang.String xmlValue;
        
        CodeSystem(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CodeSystem fromString(String str)
        {
            if (str.equals("ABCcodes"))
                return ABCcodes;
            if (str.equals("AS4E"))
                return AS4E;
            if (str.equals("AS4"))
                return AS4;
            if (str.equals("AcknowledgementDetailType"))
                return AcknowledgementDetailType;
            if (str.equals("AcknowledgementCondition"))
                return AcknowledgementCondition;
            if (str.equals("AcknowledgementDetailCode"))
                return AcknowledgementDetailCode;
            if (str.equals("AcknowledgementType"))
                return AcknowledgementType;
            if (str.equals("ActClass"))
                return ActClass;
            if (str.equals("ActCode"))
                return ActCode;
            if (str.equals("ActExposureLevelCode"))
                return ActExposureLevelCode;
            if (str.equals("ActInvoiceElementModifier"))
                return ActInvoiceElementModifier;
            if (str.equals("ActMood"))
                return ActMood;
            if (str.equals("ActPriority"))
                return ActPriority;
            if (str.equals("ActReason"))
                return ActReason;
            if (str.equals("ActRelationshipCheckpoint"))
                return ActRelationshipCheckpoint;
            if (str.equals("ActRelationshipJoin"))
                return ActRelationshipJoin;
            if (str.equals("ActRelationshipSplit"))
                return ActRelationshipSplit;
            if (str.equals("ActRelationshipSubset"))
                return ActRelationshipSubset;
            if (str.equals("ActRelationshipType"))
                return ActRelationshipType;
            if (str.equals("ActSite"))
                return ActSite;
            if (str.equals("ActStatus"))
                return ActStatus;
            if (str.equals("ActUncertainty"))
                return ActUncertainty;
            if (str.equals("AddressPartType"))
                return AddressPartType;
            if (str.equals("AdministrativeGender"))
                return AdministrativeGender;
            if (str.equals("ACR"))
                return ACR;
            if (str.equals("ATC"))
                return ATC;
            if (str.equals("AmericanIndianAlaskaNativeLanguages"))
                return AmericanIndianAlaskaNativeLanguages;
            if (str.equals("CAMNCVS"))
                return CAMNCVS;
            if (str.equals("CSAID"))
                return CSAID;
            if (str.equals("CDCA"))
                return CDCA;
            if (str.equals("CDCM"))
                return CDCM;
            if (str.equals("CDS"))
                return CDS;
            if (str.equals("CVX"))
                return CVX;
            if (str.equals("MVX"))
                return MVX;
            if (str.equals("CD2"))
                return CD2;
            if (str.equals("CE"))
                return CE;
            if (str.equals("CLP"))
                return CLP;
            if (str.equals("CST"))
                return CST;
            if (str.equals("C4"))
                return C4;
            if (str.equals("C5"))
                return C5;
            if (str.equals("Calendar"))
                return Calendar;
            if (str.equals("CalendarCycle"))
                return CalendarCycle;
            if (str.equals("CalendarType"))
                return CalendarType;
            if (str.equals("CCI"))
                return CCI;
            if (str.equals("ICD-10-CA"))
                return ICD_x002D_10_x002D_CA;
            if (str.equals("Charset"))
                return Charset;
            if (str.equals("CAS"))
                return CAS;
            if (str.equals("CodeSystem"))
                return CodeSystem;
            if (str.equals("CodingRationale"))
                return CodingRationale;
            if (str.equals("CommunicationFunctionType"))
                return CommunicationFunctionType;
            if (str.equals("CompressionAlgorithm"))
                return CompressionAlgorithm;
            if (str.equals("ConceptGenerality"))
                return ConceptGenerality;
            if (str.equals("Confidentiality"))
                return Confidentiality;
            if (str.equals("ContainerCap"))
                return ContainerCap;
            if (str.equals("ContainerSeparator"))
                return ContainerSeparator;
            if (str.equals("ContentProcessingMode"))
                return ContentProcessingMode;
            if (str.equals("ContextControl"))
                return ContextControl;
            if (str.equals("Currency"))
                return Currency;
            if (str.equals("DCL"))
                return DCL;
            if (str.equals("DQL"))
                return DQL;
            if (str.equals("DCM"))
                return DCM;
            if (str.equals("DataType"))
                return DataType;
            if (str.equals("Dentition"))
                return Dentition;
            if (str.equals("DeviceAlertLevel"))
                return DeviceAlertLevel;
            if (str.equals("DocumentCompletion"))
                return DocumentCompletion;
            if (str.equals("DocumentStorage"))
                return DocumentStorage;
            if (str.equals("EPSG-GeodeticParameterDataset"))
                return EPSG_x002D_GeodeticParameterDataset;
            if (str.equals("E"))
                return E;
            if (str.equals("EditStatus"))
                return EditStatus;
            if (str.equals("EducationLevel"))
                return EducationLevel;
            if (str.equals("EmployeeJobClass"))
                return EmployeeJobClass;
            if (str.equals("EncounterAcuity"))
                return EncounterAcuity;
            if (str.equals("EncounterAccident"))
                return EncounterAccident;
            if (str.equals("EncounterAdmissionSource"))
                return EncounterAdmissionSource;
            if (str.equals("EncounterReferralSource"))
                return EncounterReferralSource;
            if (str.equals("EncounterSpecialCourtesy"))
                return EncounterSpecialCourtesy;
            if (str.equals("EntityClass"))
                return EntityClass;
            if (str.equals("EntityCode"))
                return EntityCode;
            if (str.equals("EntityDeterminer"))
                return EntityDeterminer;
            if (str.equals("EntityHandling"))
                return EntityHandling;
            if (str.equals("EntityNamePartQualifier"))
                return EntityNamePartQualifier;
            if (str.equals("EntityNamePartType"))
                return EntityNamePartType;
            if (str.equals("EntityNameUse"))
                return EntityNameUse;
            if (str.equals("EntityRisk"))
                return EntityRisk;
            if (str.equals("EntityStatus"))
                return EntityStatus;
            if (str.equals("ENZC"))
                return ENZC;
            if (str.equals("EquipmentAlertLevel"))
                return EquipmentAlertLevel;
            if (str.equals("Ethnicity"))
                return Ethnicity;
            if (str.equals("E5"))
                return E5;
            if (str.equals("E7"))
                return E7;
            if (str.equals("E6"))
                return E6;
            if (str.equals("ExposureMode"))
                return ExposureMode;
            if (str.equals("FDK"))
                return FDK;
            if (str.equals("FDDX"))
                return FDDX;
            if (str.equals("FDDC"))
                return FDDC;
            if (str.equals("GTSAbbreviation"))
                return GTSAbbreviation;
            if (str.equals("GenderStatus"))
                return GenderStatus;
            if (str.equals("HPC"))
                return HPC;
            if (str.equals("HB"))
                return HB;
            if (str.equals("CodeSystemType"))
                return CodeSystemType;
            if (str.equals("ConceptStatus"))
                return ConceptStatus;
            if (str.equals("HL7ITSVersionCode"))
                return HL7ITSVersionCode;
            if (str.equals("ConceptProperty"))
                return ConceptProperty;
            if (str.equals("HL7CommitteeIDInRIM"))
                return HL7CommitteeIDInRIM;
            if (str.equals("HL7ConformanceInclusion"))
                return HL7ConformanceInclusion;
            if (str.equals("HL7DefinedRoseProperty"))
                return HL7DefinedRoseProperty;
            if (str.equals("HL7StandardVersionCode"))
                return HL7StandardVersionCode;
            if (str.equals("HL7UpdateMode"))
                return HL7UpdateMode;
            if (str.equals("HI"))
                return HI;
            if (str.equals("HealthcareProviderTaxonomyHIPAA"))
                return HealthcareProviderTaxonomyHIPAA;
            if (str.equals("HHC"))
                return HHC;
            if (str.equals("HtmlLinkType"))
                return HtmlLinkType;
            if (str.equals("ICS"))
                return ICS;
            if (str.equals("I10"))
                return I10;
            if (str.equals("I10P"))
                return I10P;
            if (str.equals("I9C"))
                return I9C;
            if (str.equals("I9"))
                return I9;
            if (str.equals("IC2"))
                return IC2;
            if (str.equals("IETF1766"))
                return IETF1766;
            if (str.equals("IBT"))
                return IBT;
            if (str.equals("MDC"))
                return MDC;
            if (str.equals("ISO3166-1"))
                return ISO3166_x002D_1;
            if (str.equals("ISO3166-2"))
                return ISO3166_x002D_2;
            if (str.equals("ISO3166-3"))
                return ISO3166_x002D_3;
            if (str.equals("ISO4217"))
                return ISO4217;
            if (str.equals("IUPC"))
                return IUPC;
            if (str.equals("IUPP"))
                return IUPP;
            if (str.equals("IntegrityCheckAlgorithm"))
                return IntegrityCheckAlgorithm;
            if (str.equals("ICDO"))
                return ICDO;
            if (str.equals("ICSD"))
                return ICSD;
            if (str.equals("JC8"))
                return JC8;
            if (str.equals("LanguageAbilityMode"))
                return LanguageAbilityMode;
            if (str.equals("LanguageAbilityProficiency"))
                return LanguageAbilityProficiency;
            if (str.equals("LivingArrangement"))
                return LivingArrangement;
            if (str.equals("LocalMarkupIgnore"))
                return LocalMarkupIgnore;
            if (str.equals("LocalRemoteControlState"))
                return LocalRemoteControlState;
            if (str.equals("LN"))
                return LN;
            if (str.equals("MDFAttributeType"))
                return MDFAttributeType;
            if (str.equals("MDFSubjectAreaPrefix"))
                return MDFSubjectAreaPrefix;
            if (str.equals("UMD"))
                return UMD;
            if (str.equals("MEDCIN"))
                return MEDCIN;
            if (str.equals("MIME"))
                return MIME;
            if (str.equals("ManagedParticipationStatus"))
                return ManagedParticipationStatus;
            if (str.equals("MapRelationship"))
                return MapRelationship;
            if (str.equals("MaritalStatus"))
                return MaritalStatus;
            if (str.equals("MaterialType"))
                return MaterialType;
            if (str.equals("MdfHmdMetSourceType"))
                return MdfHmdMetSourceType;
            if (str.equals("MdfHmdRowType"))
                return MdfHmdRowType;
            if (str.equals("MdfRmimRowType"))
                return MdfRmimRowType;
            if (str.equals("MediaType"))
                return MediaType;
            if (str.equals("MEDR"))
                return MEDR;
            if (str.equals("MEDX"))
                return MEDX;
            if (str.equals("MEDC"))
                return MEDC;
            if (str.equals("MDDX"))
                return MDDX;
            if (str.equals("MGPI"))
                return MGPI;
            if (str.equals("MessageWaitingPriority"))
                return MessageWaitingPriority;
            if (str.equals("MessageCondition"))
                return MessageCondition;
            if (str.equals("ModifyIndicator"))
                return ModifyIndicator;
            if (str.equals("MULTUM"))
                return MULTUM;
            if (str.equals("NAACCR"))
                return NAACCR;
            if (str.equals("NDA"))
                return NDA;
            if (str.equals("NOC"))
                return NOC;
            if (str.equals("NUCCProviderCodes"))
                return NUCCProviderCodes;
            if (str.equals("NUBC-UB92"))
                return NUBC_x002D_UB92;
            if (str.equals("NDC"))
                return NDC;
            if (str.equals("NAICS"))
                return NAICS;
            if (str.equals("NullFlavor"))
                return NullFlavor;
            if (str.equals("NIC"))
                return NIC;
            if (str.equals("NMMDS"))
                return NMMDS;
            if (str.equals("ObservationInterpretation"))
                return ObservationInterpretation;
            if (str.equals("ObservationMethod"))
                return ObservationMethod;
            if (str.equals("ObservationValue"))
                return ObservationValue;
            if (str.equals("OHA"))
                return OHA;
            if (str.equals("OrderableDrugForm"))
                return OrderableDrugForm;
            if (str.equals("OrganizationNameType"))
                return OrganizationNameType;
            if (str.equals("POS"))
                return POS;
            if (str.equals("ParameterizedDataType"))
                return ParameterizedDataType;
            if (str.equals("ParticipationFunction"))
                return ParticipationFunction;
            if (str.equals("ParticipationMode"))
                return ParticipationMode;
            if (str.equals("ParticipationSignature"))
                return ParticipationSignature;
            if (str.equals("ParticipationType"))
                return ParticipationType;
            if (str.equals("PatientImportance"))
                return PatientImportance;
            if (str.equals("PaymentTerms"))
                return PaymentTerms;
            if (str.equals("PeriodicIntervalOfTimeAbbreviation"))
                return PeriodicIntervalOfTimeAbbreviation;
            if (str.equals("PNDS"))
                return PNDS;
            if (str.equals("PersonDisabilityType"))
                return PersonDisabilityType;
            if (str.equals("ConceptCodeRelationship"))
                return ConceptCodeRelationship;
            if (str.equals("PostalAddressUse"))
                return PostalAddressUse;
            if (str.equals("ProbabilityDistributionType"))
                return ProbabilityDistributionType;
            if (str.equals("ProcedureMethod"))
                return ProcedureMethod;
            if (str.equals("ProcessingID"))
                return ProcessingID;
            if (str.equals("ProcessingMode"))
                return ProcessingMode;
            if (str.equals("QueryParameterValue"))
                return QueryParameterValue;
            if (str.equals("QueryPriority"))
                return QueryPriority;
            if (str.equals("QueryQuantityUnit"))
                return QueryQuantityUnit;
            if (str.equals("QueryRequestLimit"))
                return QueryRequestLimit;
            if (str.equals("QueryResponse"))
                return QueryResponse;
            if (str.equals("QueryStatusCode"))
                return QueryStatusCode;
            if (str.equals("Race"))
                return Race;
            if (str.equals("RC"))
                return RC;
            if (str.equals("RelationalOperator"))
                return RelationalOperator;
            if (str.equals("RelationshipConjunction"))
                return RelationshipConjunction;
            if (str.equals("ReligiousAffiliation"))
                return ReligiousAffiliation;
            if (str.equals("ResponseLevel"))
                return ResponseLevel;
            if (str.equals("ResponseModality"))
                return ResponseModality;
            if (str.equals("ResponseMode"))
                return ResponseMode;
            if (str.equals("RoleClass"))
                return RoleClass;
            if (str.equals("RoleCode"))
                return RoleCode;
            if (str.equals("RoleLinkType"))
                return RoleLinkType;
            if (str.equals("RoleStatus"))
                return RoleStatus;
            if (str.equals("RouteOfAdministration"))
                return RouteOfAdministration;
            if (str.equals("SCDHEC-GISSpatialAccuracyTiers"))
                return SCDHEC_x002D_GISSpatialAccuracyTiers;
            if (str.equals("SNM3"))
                return SNM3;
            if (str.equals("SNT"))
                return SNT;
            if (str.equals("SDM"))
                return SDM;
            if (str.equals("Sequencing"))
                return Sequencing;
            if (str.equals("SetOperator"))
                return SetOperator;
            if (str.equals("SpecialArrangement"))
                return SpecialArrangement;
            if (str.equals("SpecimenType"))
                return SpecimenType;
            if (str.equals("StyleType"))
                return StyleType;
            if (str.equals("SubstanceAdminSubstitution"))
                return SubstanceAdminSubstitution;
            if (str.equals("SubstitutionCondition"))
                return SubstitutionCondition;
            if (str.equals("SNM"))
                return SNM;
            if (str.equals("TableCellHorizontalAlign"))
                return TableCellHorizontalAlign;
            if (str.equals("TableCellScope"))
                return TableCellScope;
            if (str.equals("TableCellVerticalAlign"))
                return TableCellVerticalAlign;
            if (str.equals("TableFrame"))
                return TableFrame;
            if (str.equals("TableRules"))
                return TableRules;
            if (str.equals("IETF3066"))
                return IETF3066;
            if (str.equals("TargetAwareness"))
                return TargetAwareness;
            if (str.equals("TelecommunicationAddressUse"))
                return TelecommunicationAddressUse;
            if (str.equals("RCFB"))
                return RCFB;
            if (str.equals("RCV2"))
                return RCV2;
            if (str.equals("TimingEvent"))
                return TimingEvent;
            if (str.equals("TransmissionRelationshipTypeCode"))
                return TransmissionRelationshipTypeCode;
            if (str.equals("TribalEntityUS"))
                return TribalEntityUS;
            if (str.equals("UC"))
                return UC;
            if (str.equals("UCUM"))
                return UCUM;
            if (str.equals("URLScheme"))
                return URLScheme;
            if (str.equals("UML"))
                return UML;
            if (str.equals("UnitsOfMeasure"))
                return UnitsOfMeasure;
            if (str.equals("UPC"))
                return UPC;
            if (str.equals("VaccineManufacturer"))
                return VaccineManufacturer;
            if (str.equals("VaccineType"))
                return VaccineType;
            if (str.equals("VocabularyDomainQualifier"))
                return VocabularyDomainQualifier;
            if (str.equals("WC"))
                return WC;
            if (str.equals("ART"))
                return ART;
            if (str.equals("W4"))
                return W4;
            if (str.equals("W1-W2"))
                return W1_x002D_W2;
		    return null;
        }
    }

	/**
	* vocSet: T19359 (C-0-T19359-cpt)
	*/
    public enum CodeSystemType
    {
        
        E(0),
        
        EI(1),
        
        I(2);
        
        private int code;
        
        CodeSystemType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CodeSystemType fromString(String str)
        {
            if (str.equals("E"))
                return E;
            if (str.equals("EI"))
                return EI;
            if (str.equals("I"))
                return I;
		    return null;
        }
    }

	/**
	* vocSet: T19250 (C-0-T19250-cpt)
	*/
    public enum CodingRationale
    {
        
        SH(0),
        
        HL7(1),
        
        SRC(2);
        
        private int code;
        
        CodingRationale(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CodingRationale fromString(String str)
        {
            if (str.equals("SH"))
                return SH;
            if (str.equals("HL7"))
                return HL7;
            if (str.equals("SRC"))
                return SRC;
		    return null;
        }
    }

	/**
	* vocSet: T16031 (C-0-T16031-cpt)
	*/
    public enum CommunicationFunctionType
    {
        
        RCV(0),
        
        RSP(1),
        
        SND(2);
        
        private int code;
        
        CommunicationFunctionType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CommunicationFunctionType fromString(String str)
        {
            if (str.equals("RCV"))
                return RCV;
            if (str.equals("RSP"))
                return RSP;
            if (str.equals("SND"))
                return SND;
		    return null;
        }
    }

	/**
	* vocSet: T10620 (C-0-T10620-cpt)
	*/
    public enum CompressionAlgorithm
    {
        
        Z(0),
        
        DF(1),
        
        GZ(2),
        
        ZL(3);
        
        private int code;
        
        CompressionAlgorithm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CompressionAlgorithm fromString(String str)
        {
            if (str.equals("Z"))
                return Z;
            if (str.equals("DF"))
                return DF;
            if (str.equals("GZ"))
                return GZ;
            if (str.equals("ZL"))
                return ZL;
		    return null;
        }
    }

	/**
	* vocSet: T19363 (C-0-T19363-cpt)
	*/
    public enum ConceptCodeRelationship
    {
        
        hasPart(0),
        
        hasSubtype(1),
        
        smallerThan(2);
        
        private int code;
        
        ConceptCodeRelationship(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConceptCodeRelationship fromString(String str)
        {
            if (str.equals("hasPart"))
                return hasPart;
            if (str.equals("hasSubtype"))
                return hasSubtype;
            if (str.equals("smallerThan"))
                return smallerThan;
		    return null;
        }
    }

	/**
	* vocSet: T11033 (C-0-T11033-cpt)
	*/
    public enum ConceptGenerality
    {
        
        A(0),
        
        L(1),
        
        S(2);
        
        private int code;
        
        ConceptGenerality(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConceptGenerality fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("L"))
                return L;
            if (str.equals("S"))
                return S;
		    return null;
        }
    }

	/**
	* vocSet: T19361 (C-0-T19361-cpt)
	*/
    public enum ConceptPropertyId
    {
        
        OID(0),
        
        _ValueSetPropertyId(1),
        
        appliesTo(2),
        
        howApplies(3),
        
        inverseRelationship(4),
        
        openIssue(5);
        
        private int code;
        
        ConceptPropertyId(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConceptPropertyId fromString(String str)
        {
            if (str.equals("OID"))
                return OID;
            if (str.equals("_ValueSetPropertyId"))
                return _ValueSetPropertyId;
            if (str.equals("appliesTo"))
                return appliesTo;
            if (str.equals("howApplies"))
                return howApplies;
            if (str.equals("inverseRelationship"))
                return inverseRelationship;
            if (str.equals("openIssue"))
                return openIssue;
		    return null;
        }
    }

	/**
	* vocSet: T19360 (C-0-T19360-cpt)
	*/
    public enum ConceptStatus
    {
        
        A(0),
        
        D(1),
        
        P(2),
        
        R(3);
        
        private int code;
        
        ConceptStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConceptStatus fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("D"))
                return D;
            if (str.equals("P"))
                return P;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* abstDomain: A10229 (C-0-T10228-A10229-cpt)
	*/
    public enum ConfidentialityByAccessKind
    {
        
        B(0),
        
        D(1),
        
        I(2),
        
        L(3),
        
        N(4),
        
        R(5),
        
        V(6);
        
        private int code;
        
        ConfidentialityByAccessKind(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConfidentialityByAccessKind fromString(String str)
        {
            if (str.equals("B"))
                return B;
            if (str.equals("D"))
                return D;
            if (str.equals("I"))
                return I;
            if (str.equals("L"))
                return L;
            if (str.equals("N"))
                return N;
            if (str.equals("R"))
                return R;
            if (str.equals("V"))
                return V;
		    return null;
        }
    }

	/**
	* abstDomain: A10240 (C-0-T10228-A10240-cpt)
	*/
    public enum ConfidentialityByInfoType
    {
        
        HIV(0),
        
        PSY(1),
        
        SDV(2),
        
        ETH(3);
        
        private int code;
        
        ConfidentialityByInfoType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConfidentialityByInfoType fromString(String str)
        {
            if (str.equals("HIV"))
                return HIV;
            if (str.equals("PSY"))
                return PSY;
            if (str.equals("SDV"))
                return SDV;
            if (str.equals("ETH"))
                return ETH;
		    return null;
        }
    }

	/**
	* abstDomain: A10236 (C-0-T10228-A10236-cpt)
	*/
    public enum ConfidentialityModifiers
    {
        
        C(0),
        
        S(1),
        
        T(2);
        
        private int code;
        
        ConfidentialityModifiers(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ConfidentialityModifiers fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("S"))
                return S;
            if (str.equals("T"))
                return T;
		    return null;
        }
    }

	/**
	* abstDomain: A16926 (C-0-T10228-A16926-cpt)
	*/
    public enum x_BasicConfidentialityKind
    {
        
        N(0),
        
        R(1),
        
        V(2);
        
        private int code;
        
        x_BasicConfidentialityKind(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_BasicConfidentialityKind fromString(String str)
        {
            if (str.equals("N"))
                return N;
            if (str.equals("R"))
                return R;
            if (str.equals("V"))
                return V;
		    return null;
        }
    }

	/**
	* abstDomain: A19738 (C-0-T10228-A19738-cpt)
	*/
    public enum x_VeryBasicConfidentialityKind
    {
        
        N(0),
        
        R(1);
        
        private int code;
        
        x_VeryBasicConfidentialityKind(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_VeryBasicConfidentialityKind fromString(String str)
        {
            if (str.equals("N"))
                return N;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* abstDomain: A16184 (C-0-T14049-A16184-cpt)
	*/
    public enum MedicationCap
    {
        
        CHILD(0),
        
        EASY(1);
        
        private int code;
        
        MedicationCap(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MedicationCap fromString(String str)
        {
            if (str.equals("CHILD"))
                return CHILD;
            if (str.equals("EASY"))
                return EASY;
		    return null;
        }
    }

	/**
	* vocSet: T14054 (C-0-T14054-cpt)
	*/
    public enum ContainerSeparator
    {
        
        GEL(0),
        
        NONE(1);
        
        private int code;
        
        ContainerSeparator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContainerSeparator fromString(String str)
        {
            if (str.equals("GEL"))
                return GEL;
            if (str.equals("NONE"))
                return NONE;
		    return null;
        }
    }

	/**
	* vocSet: T19823 (C-0-T19823-cpt)
	*/
    public enum ContentProcessingMode
    {
        
        SEQL(0),
        
        UNOR(1);
        
        private int code;
        
        ContentProcessingMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContentProcessingMode fromString(String str)
        {
            if (str.equals("SEQL"))
                return SEQL;
            if (str.equals("UNOR"))
                return UNOR;
		    return null;
        }
    }

	/**
	* abstDomain: A18934 (C-0-T16478-A18934-cpt)
	*/
    public enum ContextControlAdditive
    {
        
        AN(0),
        
        AP(1);
        
        private int code;
        
        ContextControlAdditive(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContextControlAdditive fromString(String str)
        {
            if (str.equals("AN"))
                return AN;
            if (str.equals("AP"))
                return AP;
		    return null;
        }
    }

	/**
	* abstDomain: A18937 (C-0-T16478-A18937-cpt)
	*/
    public enum ContextControlNonPropagating
    {
        
        AN(0),
        
        ON(1);
        
        private int code;
        
        ContextControlNonPropagating(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContextControlNonPropagating fromString(String str)
        {
            if (str.equals("AN"))
                return AN;
            if (str.equals("ON"))
                return ON;
		    return null;
        }
    }

	/**
	* abstDomain: A18935 (C-0-T16478-A18935-cpt)
	*/
    public enum ContextControlOverriding
    {
        
        ON(0),
        
        OP(1);
        
        private int code;
        
        ContextControlOverriding(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContextControlOverriding fromString(String str)
        {
            if (str.equals("ON"))
                return ON;
            if (str.equals("OP"))
                return OP;
		    return null;
        }
    }

	/**
	* abstDomain: A18936 (C-0-T16478-A18936-cpt)
	*/
    public enum ContextControlPropagating
    {
        
        AP(0),
        
        OP(1);
        
        private int code;
        
        ContextControlPropagating(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ContextControlPropagating fromString(String str)
        {
            if (str.equals("AP"))
                return AP;
            if (str.equals("OP"))
                return OP;
		    return null;
        }
    }

	/**
	* vocSet: T17388 (C-0-T17388-cpt)
	*/
    public enum Currency
    {
        
        ARS(0),
        
        AUD(1),
        
        THB(2),
        
        BRL(3),
        
        CAD(4),
        
        DEM(5),
        
        EUR(6),
        
        FRF(7),
        
        INR(8),
        
        TRL(9),
        
        FIM(10),
        
        MXN(11),
        
        NLG(12),
        
        NZD(13),
        
        PHP(14),
        
        GBP(15),
        
        ZAR(16),
        
        RUR(17),
        
        ILS(18),
        
        ESP(19),
        
        CHF(20),
        
        TWD(21),
        
        USD(22),
        
        CLF(23),
        
        KRW(24),
        
        JPY(25),
        
        CNY(26);
        
        private int code;
        
        Currency(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Currency fromString(String str)
        {
            if (str.equals("ARS"))
                return ARS;
            if (str.equals("AUD"))
                return AUD;
            if (str.equals("THB"))
                return THB;
            if (str.equals("BRL"))
                return BRL;
            if (str.equals("CAD"))
                return CAD;
            if (str.equals("DEM"))
                return DEM;
            if (str.equals("EUR"))
                return EUR;
            if (str.equals("FRF"))
                return FRF;
            if (str.equals("INR"))
                return INR;
            if (str.equals("TRL"))
                return TRL;
            if (str.equals("FIM"))
                return FIM;
            if (str.equals("MXN"))
                return MXN;
            if (str.equals("NLG"))
                return NLG;
            if (str.equals("NZD"))
                return NZD;
            if (str.equals("PHP"))
                return PHP;
            if (str.equals("GBP"))
                return GBP;
            if (str.equals("ZAR"))
                return ZAR;
            if (str.equals("RUR"))
                return RUR;
            if (str.equals("ILS"))
                return ILS;
            if (str.equals("ESP"))
                return ESP;
            if (str.equals("CHF"))
                return CHF;
            if (str.equals("TWD"))
                return TWD;
            if (str.equals("USD"))
                return USD;
            if (str.equals("CLF"))
                return CLF;
            if (str.equals("KRW"))
                return KRW;
            if (str.equals("JPY"))
                return JPY;
            if (str.equals("CNY"))
                return CNY;
		    return null;
        }
    }

	/**
	* specDomain: S10846 (C-0-T10774-A10775-S10845-S10846-cpt)
	*/
    public enum DataTypeAnnotatedConceptDescriptor
    {
        
        ANT_x003C_CD_x003E_(0,"ANT<CD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeAnnotatedConceptDescriptor(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeAnnotatedConceptDescriptor fromString(String str)
        {
            if (str.equals("ANT<CD>"))
                return ANT_x003C_CD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10848 (C-0-T10774-A10775-S10845-S10848-cpt)
	*/
    public enum DataTypeAnnotatedPhysicalQuantity
    {
        
        ANT_x003C_PQ_x003E_(0,"ANT<PQ>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeAnnotatedPhysicalQuantity(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeAnnotatedPhysicalQuantity fromString(String str)
        {
            if (str.equals("ANT<PQ>"))
                return ANT_x003C_PQ_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10832 (C-0-T10774-A10775-S10831-S10832-cpt)
	*/
    public enum DataTypeBagOfConceptDescriptors
    {
        
        BAG_x003C_CD_x003E_(0,"BAG<CD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeBagOfConceptDescriptors(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeBagOfConceptDescriptors fromString(String str)
        {
            if (str.equals("BAG<CD>"))
                return BAG_x003C_CD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10833 (C-0-T10774-A10775-S10831-S10833-cpt)
	*/
    public enum DataTypeBagOfPhysicalQuantities
    {
        
        BAG_x003C_PQ_x003E_(0,"BAG<PQ>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeBagOfPhysicalQuantities(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeBagOfPhysicalQuantities fromString(String str)
        {
            if (str.equals("BAG<PQ>"))
                return BAG_x003C_PQ_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10776 (C-0-T10774-A10775-S10776-cpt)
	*/
    public enum DataTypeBoolean
    {
        
        BL(0);
        
        private int code;
        
        DataTypeBoolean(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeBoolean fromString(String str)
        {
            if (str.equals("BL"))
                return BL;
		    return null;
        }
    }

	/**
	* specDomain: S10782 (C-0-T10774-A10775-S10780-S10782-cpt)
	*/
    public enum DataTypeCodedSimpleValue
    {
        
        CS(0);
        
        private int code;
        
        DataTypeCodedSimpleValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeCodedSimpleValue fromString(String str)
        {
            if (str.equals("CS"))
                return CS;
		    return null;
        }
    }

	/**
	* specDomain: S10783 (C-0-T10774-A10775-S10780-S10783-cpt)
	*/
    public enum DataTypeCodedValue
    {
        
        CV(0);
        
        private int code;
        
        DataTypeCodedValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeCodedValue fromString(String str)
        {
            if (str.equals("CV"))
                return CV;
		    return null;
        }
    }

	/**
	* specDomain: S10784 (C-0-T10774-A10775-S10780-S10784-cpt)
	*/
    public enum DataTypeCodedWithEquivalents
    {
        
        CE(0);
        
        private int code;
        
        DataTypeCodedWithEquivalents(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeCodedWithEquivalents fromString(String str)
        {
            if (str.equals("CE"))
                return CE;
		    return null;
        }
    }

	/**
	* specDomain: S10781 (C-0-T10774-A10775-S10781-cpt)
	*/
    public enum DataTypeConceptRole
    {
        
        CR(0);
        
        private int code;
        
        DataTypeConceptRole(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeConceptRole fromString(String str)
        {
            if (str.equals("CR"))
                return CR;
		    return null;
        }
    }

	/**
	* specDomain: S10851 (C-0-T10774-A10775-S10850-S10851-cpt)
	*/
    public enum DataTypeHistoricalAddress
    {
        
        HXIT_x003C_AD_x003E_(0,"HXIT<AD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeHistoricalAddress(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeHistoricalAddress fromString(String str)
        {
            if (str.equals("HXIT<AD>"))
                return HXIT_x003C_AD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10785 (C-0-T10774-A10775-S10785-cpt)
	*/
    public enum DataTypeInstanceIdentifier
    {
        
        II(0);
        
        private int code;
        
        DataTypeInstanceIdentifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeInstanceIdentifier fromString(String str)
        {
            if (str.equals("II"))
                return II;
		    return null;
        }
    }

	/**
	* specDomain: S10835 (C-0-T10774-A10775-S10834-S10835-cpt)
	*/
    public enum DataTypeIntervalOfIntegerNumbers
    {
        
        IVL_x003C_INT_x003E_(0,"IVL<INT>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeIntervalOfIntegerNumbers(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeIntervalOfIntegerNumbers fromString(String str)
        {
            if (str.equals("IVL<INT>"))
                return IVL_x003C_INT_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10844 (C-0-T10774-A10775-S10834-S10841-S10807-S10844-cpt)
	*/
    public enum DataTypeEventRelatedInterval
    {
        
        EIVL_x003C_TS_x003E_(0,"EIVL<TS>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeEventRelatedInterval(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeEventRelatedInterval fromString(String str)
        {
            if (str.equals("EIVL<TS>"))
                return EIVL_x003C_TS_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10808 (C-0-T10774-A10775-S10834-S10841-S10807-S10808-cpt)
	*/
    public enum DataTypeGeneralTimingSpecification
    {
        
        GTS(0);
        
        private int code;
        
        DataTypeGeneralTimingSpecification(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeGeneralTimingSpecification fromString(String str)
        {
            if (str.equals("GTS"))
                return GTS;
		    return null;
        }
    }

	/**
	* specDomain: S10843 (C-0-T10774-A10775-S10834-S10841-S10807-S10843-cpt)
	*/
    public enum DataTypePeriodicIntervalOfTime
    {
        
        PIVL_x003C_TS_x003E_(0,"PIVL<TS>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypePeriodicIntervalOfTime(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypePeriodicIntervalOfTime fromString(String str)
        {
            if (str.equals("PIVL<TS>"))
                return PIVL_x003C_TS_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10837 (C-0-T10774-A10775-S10834-S10837-cpt)
	*/
    public enum DataTypeIntervalOfRealNumbers
    {
        
        IVL_x003C_REAL_x003E_(0,"IVL<REAL>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeIntervalOfRealNumbers(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeIntervalOfRealNumbers fromString(String str)
        {
            if (str.equals("IVL<REAL>"))
                return IVL_x003C_REAL_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10786 (C-0-T10774-A10775-S10786-cpt)
	*/
    public enum DataTypeObjectIdentifier
    {
        
        OID(0);
        
        private int code;
        
        DataTypeObjectIdentifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeObjectIdentifier fromString(String str)
        {
            if (str.equals("OID"))
                return OID;
		    return null;
        }
    }

	/**
	* specDomain: S10795 (C-0-T10774-A10775-A10794-S10795-cpt)
	*/
    public enum DataTypeIntegerNumber
    {
        
        INT(0);
        
        private int code;
        
        DataTypeIntegerNumber(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeIntegerNumber fromString(String str)
        {
            if (str.equals("INT"))
                return INT;
		    return null;
        }
    }

	/**
	* specDomain: S10798 (C-0-T10774-A10775-A10794-S10798-cpt)
	*/
    public enum DataTypeMonetaryAmount
    {
        
        MO(0);
        
        private int code;
        
        DataTypeMonetaryAmount(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeMonetaryAmount fromString(String str)
        {
            if (str.equals("MO"))
                return MO;
		    return null;
        }
    }

	/**
	* specDomain: S10864 (C-0-T10774-A10775-A10794-S10864-cpt)
	*/
    public enum DataTypeParametricProbabilityDistribution
    {
        
        PPD_x003C_QTY_x003E_(0,"PPD<QTY>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeParametricProbabilityDistribution(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeParametricProbabilityDistribution fromString(String str)
        {
            if (str.equals("PPD<QTY>"))
                return PPD_x003C_QTY_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10866 (C-0-T10774-A10775-A10794-S10797-S10866-cpt)
	*/
    public enum DataTypeParametricProbabilityDistributionOfPhysicalQuantities
    {
        
        PPD_x003C_PQ_x003E_(0,"PPD<PQ>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeParametricProbabilityDistributionOfPhysicalQuantities(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeParametricProbabilityDistributionOfPhysicalQuantities fromString(String str)
        {
            if (str.equals("PPD<PQ>"))
                return PPD_x003C_PQ_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10799 (C-0-T10774-A10775-A10794-S10799-cpt)
	*/
    public enum DataTypePointInTime
    {
        
        TS(0);
        
        private int code;
        
        DataTypePointInTime(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypePointInTime fromString(String str)
        {
            if (str.equals("TS"))
                return TS;
		    return null;
        }
    }

	/**
	* specDomain: S10800 (C-0-T10774-A10775-A10794-S10800-cpt)
	*/
    public enum DataTypeRatio
    {
        
        RTO(0);
        
        private int code;
        
        DataTypeRatio(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeRatio fromString(String str)
        {
            if (str.equals("RTO"))
                return RTO;
		    return null;
        }
    }

	/**
	* specDomain: S10865 (C-0-T10774-A10775-A10794-S10796-S10865-cpt)
	*/
    public enum DataTypeParametricProbabilityDistributionOfRealNumbers
    {
        
        PPD_x003C_REAL_x003E_(0,"PPD<REAL>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeParametricProbabilityDistributionOfRealNumbers(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeParametricProbabilityDistributionOfRealNumbers fromString(String str)
        {
            if (str.equals("PPD<REAL>"))
                return PPD_x003C_REAL_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10792 (C-0-T10774-A10775-S10821-S10822-S10777-S10778-S10779-S10792-cpt)
	*/
    public enum DataTypeAddressPart
    {
        
        ADXP(0);
        
        private int code;
        
        DataTypeAddressPart(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeAddressPart fromString(String str)
        {
            if (str.equals("ADXP"))
                return ADXP;
		    return null;
        }
    }

	/**
	* specDomain: S10793 (C-0-T10774-A10775-S10821-S10822-S10777-S10778-S10779-S10793-cpt)
	*/
    public enum DataTypeOrganizationName
    {
        
        ON(0);
        
        private int code;
        
        DataTypeOrganizationName(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeOrganizationName fromString(String str)
        {
            if (str.equals("ON"))
                return ON;
		    return null;
        }
    }

	/**
	* specDomain: S10790 (C-0-T10774-A10775-S10821-S10822-S10777-S10778-S10779-S10790-cpt)
	*/
    public enum DataTypePersonNamePart
    {
        
        PNXP(0);
        
        private int code;
        
        DataTypePersonNamePart(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypePersonNamePart fromString(String str)
        {
            if (str.equals("PNXP"))
                return PNXP;
		    return null;
        }
    }

	/**
	* specDomain: S10789 (C-0-T10774-A10775-S10821-S10823-S10824-S10825-S10826-S10827-S10828-S10789-cpt)
	*/
    public enum DataTypePersonNameType
    {
        
        PN(0);
        
        private int code;
        
        DataTypePersonNameType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypePersonNameType fromString(String str)
        {
            if (str.equals("PN"))
                return PN;
		    return null;
        }
    }

	/**
	* specDomain: S10791 (C-0-T10774-A10775-S10821-S10823-S10824-S10825-S10826-S10827-S10829-S10791-cpt)
	*/
    public enum DataTypePostalAndResidentialAddress
    {
        
        AD(0);
        
        private int code;
        
        DataTypePostalAndResidentialAddress(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypePostalAndResidentialAddress fromString(String str)
        {
            if (str.equals("AD"))
                return AD;
		    return null;
        }
    }

	/**
	* specDomain: S10809 (C-0-T10774-A10775-S10801-S10809-cpt)
	*/
    public enum DataTypeSetOfCharacterStrings
    {
        
        SET_x003C_ST_x003E_(0,"SET<ST>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfCharacterStrings(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfCharacterStrings fromString(String str)
        {
            if (str.equals("SET<ST>"))
                return SET_x003C_ST_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10803 (C-0-T10774-A10775-S10801-S10802-S10803-cpt)
	*/
    public enum DataTypeSetOfCodedSimpleValue
    {
        
        SET_x003C_CS_x003E_(0,"SET<CS>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfCodedSimpleValue(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfCodedSimpleValue fromString(String str)
        {
            if (str.equals("SET<CS>"))
                return SET_x003C_CS_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10804 (C-0-T10774-A10775-S10801-S10802-S10804-cpt)
	*/
    public enum DataTypeSetOfCodedValue
    {
        
        SET_x003C_CV_x003E_(0,"SET<CV>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfCodedValue(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfCodedValue fromString(String str)
        {
            if (str.equals("SET<CV>"))
                return SET_x003C_CV_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10805 (C-0-T10774-A10775-S10801-S10802-S10805-cpt)
	*/
    public enum DataTypeSetOfCodedWithEquivalents
    {
        
        SET_x003C_CE_x003E_(0,"SET<CE>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfCodedWithEquivalents(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfCodedWithEquivalents fromString(String str)
        {
            if (str.equals("SET<CE>"))
                return SET_x003C_CE_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10867 (C-0-T10774-A10775-S10801-S10867-cpt)
	*/
    public enum DataTypeSetOfIntegerNumbers
    {
        
        SET_x003C_INT_x003E_(0,"SET<INT>"),
        
        IVL_x003C_INT_x003E_(1,"IVL<INT>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfIntegerNumbers(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfIntegerNumbers fromString(String str)
        {
            if (str.equals("SET<INT>"))
                return SET_x003C_INT_x003E_;
            if (str.equals("IVL<INT>"))
                return IVL_x003C_INT_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10818 (C-0-T10774-A10775-S10801-S10818-cpt)
	*/
    public enum DataTypeSetOfPhysicalQuantities
    {
        
        SET_x003C_PQ_x003E_(0,"SET<PQ>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfPhysicalQuantities(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfPhysicalQuantities fromString(String str)
        {
            if (str.equals("SET<PQ>"))
                return SET_x003C_PQ_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10868 (C-0-T10774-A10775-S10801-S10868-cpt)
	*/
    public enum DataTypeSetOfRealNumbers
    {
        
        SET_x003C_REAL_x003E_(0,"SET<REAL>"),
        
        IVL_x003C_REAL_x003E_(1,"IVL<REAL>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeSetOfRealNumbers(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeSetOfRealNumbers fromString(String str)
        {
            if (str.equals("SET<REAL>"))
                return SET_x003C_REAL_x003E_;
            if (str.equals("IVL<REAL>"))
                return IVL_x003C_REAL_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10813 (C-0-T10774-A10775-S10801-S10810-S10811-S10812-S10813-cpt)
	*/
    public enum DataTypeHistoryOfAddress
    {
        
        HIST_x003C_AD_x003E_(0,"HIST<AD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeHistoryOfAddress(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeHistoryOfAddress fromString(String str)
        {
            if (str.equals("HIST<AD>"))
                return HIST_x003C_AD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10862 (C-0-T10774-A10775-S10801-S10816-S10862-cpt)
	*/
    public enum DataTypeNonParametricProbabilityDistributionOfConceptDescriptor
    {
        
        NPPD_x003C_CD_x003E_(0,"NPPD<CD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeNonParametricProbabilityDistributionOfConceptDescriptor(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeNonParametricProbabilityDistributionOfConceptDescriptor fromString(String str)
        {
            if (str.equals("NPPD<CD>"))
                return NPPD_x003C_CD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10863 (C-0-T10774-A10775-S10801-S10819-S10863-cpt)
	*/
    public enum DataTypeNonParametricProbabilityDistributionOfIntervalOfPhysicalQuantities
    {
        
        NPPD_x003C_IVL_x003C_PQ_x003E__x003E_(0,"NPPD<IVL<PQ>>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeNonParametricProbabilityDistributionOfIntervalOfPhysicalQuantities(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeNonParametricProbabilityDistributionOfIntervalOfPhysicalQuantities fromString(String str)
        {
            if (str.equals("NPPD<IVL<PQ>>"))
                return NPPD_x003C_IVL_x003C_PQ_x003E__x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10815 (C-0-T10774-A10775-S10801-S10814-S10815-cpt)
	*/
    public enum DataTypeNonParametricProbabilityDistribution
    {
        
        NPPD_x003C_ANY_x003E_(0,"NPPD<ANY>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeNonParametricProbabilityDistribution(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeNonParametricProbabilityDistribution fromString(String str)
        {
            if (str.equals("NPPD<ANY>"))
                return NPPD_x003C_ANY_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10854 (C-0-T10774-A10775-S10853-S10854-cpt)
	*/
    public enum DataTypeUncertainNarrativeConceptDescriptor
    {
        
        UVN_x003C_CD_x003E_(0,"UVN<CD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeUncertainNarrativeConceptDescriptor(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeUncertainNarrativeConceptDescriptor fromString(String str)
        {
            if (str.equals("UVN<CD>"))
                return UVN_x003C_CD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10857 (C-0-T10774-A10775-S10856-S10857-cpt)
	*/
    public enum DataTypeUncertainProbabilisticConceptDescriptor
    {
        
        UVP_x003C_CD_x003E_(0,"UVP<CD>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeUncertainProbabilisticConceptDescriptor(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeUncertainProbabilisticConceptDescriptor fromString(String str)
        {
            if (str.equals("UVP<CD>"))
                return UVP_x003C_CD_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10859 (C-0-T10774-A10775-S10856-S10859-cpt)
	*/
    public enum DataTypeUncertainProbabilisticIntervalOfPhysicalQuantities
    {
        
        UVP_x003C_IVL_x003C_PQ_x003E__x003E_(0,"UVP<IVL<PQ>>");
        
        private int code;
        private java.lang.String xmlValue;
        
        DataTypeUncertainProbabilisticIntervalOfPhysicalQuantities(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DataTypeUncertainProbabilisticIntervalOfPhysicalQuantities fromString(String str)
        {
            if (str.equals("UVP<IVL<PQ>>"))
                return UVP_x003C_IVL_x003C_PQ_x003E__x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10787 (C-0-T10774-A10775-S10788-S10787-cpt)
	*/
    public enum DataTypeTelecommunicationAddress
    {
        
        TEL(0);
        
        private int code;
        
        DataTypeTelecommunicationAddress(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DataTypeTelecommunicationAddress fromString(String str)
        {
            if (str.equals("TEL"))
                return TEL;
		    return null;
        }
    }

	/**
	* vocSet: T14066 (C-0-T14066-cpt)
	*/
    public enum DeviceAlertLevel
    {
        
        C(0),
        
        N(1),
        
        S(2),
        
        W(3);
        
        private int code;
        
        DeviceAlertLevel(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DeviceAlertLevel fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("N"))
                return N;
            if (str.equals("S"))
                return S;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* vocSet: T271 (C-0-T271-cpt)
	*/
    public enum DocumentCompletion
    {
        
        AU(0),
        
        DI(1),
        
        DO(2),
        
        IP(3),
        
        IN(4),
        
        LA(5),
        
        PA(6);
        
        private int code;
        
        DocumentCompletion(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DocumentCompletion fromString(String str)
        {
            if (str.equals("AU"))
                return AU;
            if (str.equals("DI"))
                return DI;
            if (str.equals("DO"))
                return DO;
            if (str.equals("IP"))
                return IP;
            if (str.equals("IN"))
                return IN;
            if (str.equals("LA"))
                return LA;
            if (str.equals("PA"))
                return PA;
		    return null;
        }
    }

	/**
	* specDomain: S10584 (C-0-T275-S10584-cpt)
	*/
    public enum DocumentStorageActive
    {
        
        AC(0),
        
        AA(1);
        
        private int code;
        
        DocumentStorageActive(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DocumentStorageActive fromString(String str)
        {
            if (str.equals("AC"))
                return AC;
            if (str.equals("AA"))
                return AA;
		    return null;
        }
    }

	/**
	* specDomain: S11042 (C-0-T11040-S11042-cpt)
	*/
    public enum ActiveEditStatus
    {
        
        A(0);
        
        private int code;
        
        ActiveEditStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ActiveEditStatus fromString(String str)
        {
            if (str.equals("A"))
                return A;
		    return null;
        }
    }

	/**
	* specDomain: S11044 (C-0-T11040-S11044-cpt)
	*/
    public enum InactiveEditStatus
    {
        
        I(0);
        
        private int code;
        
        InactiveEditStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InactiveEditStatus fromString(String str)
        {
            if (str.equals("I"))
                return I;
		    return null;
        }
    }

	/**
	* specDomain: S11045 (C-0-T11040-S11045-cpt)
	*/
    public enum ObsoleteEditStatus
    {
        
        O(0);
        
        private int code;
        
        ObsoleteEditStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObsoleteEditStatus fromString(String str)
        {
            if (str.equals("O"))
                return O;
		    return null;
        }
    }

	/**
	* specDomain: S11043 (C-0-T11040-S11043-cpt)
	*/
    public enum RejectedEditStatus
    {
        
        R(0);
        
        private int code;
        
        RejectedEditStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RejectedEditStatus fromString(String str)
        {
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* vocSet: T19175 (C-0-T19175-cpt)
	*/
    public enum EducationLevel
    {
        
        ASSOC(0),
        
        BD(1),
        
        POSTG(2),
        
        ELEM(3),
        
        GD(4),
        
        HS(5),
        
        SCOL(6),
        
        PB(7),
        
        SEC(8);
        
        private int code;
        
        EducationLevel(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EducationLevel fromString(String str)
        {
            if (str.equals("ASSOC"))
                return ASSOC;
            if (str.equals("BD"))
                return BD;
            if (str.equals("POSTG"))
                return POSTG;
            if (str.equals("ELEM"))
                return ELEM;
            if (str.equals("GD"))
                return GD;
            if (str.equals("HS"))
                return HS;
            if (str.equals("SCOL"))
                return SCOL;
            if (str.equals("PB"))
                return PB;
            if (str.equals("SEC"))
                return SEC;
		    return null;
        }
    }

	/**
	* vocSet: T12234 (C-0-T12234-cpt)
	*/
    public enum EncounterAdmissionSource
    {
        
        E(0),
        
        LD(1),
        
        NB(2);
        
        private int code;
        
        EncounterAdmissionSource(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EncounterAdmissionSource fromString(String str)
        {
            if (str.equals("E"))
                return E;
            if (str.equals("LD"))
                return LD;
            if (str.equals("NB"))
                return NB;
		    return null;
        }
    }

	/**
	* vocSet: T12242 (C-0-T12242-cpt)
	*/
    public enum EncounterSpecialCourtesy
    {
        
        EXT(0),
        
        NRM(1),
        
        PRF(2),
        
        STF(3),
        
        VIP(4);
        
        private int code;
        
        EncounterSpecialCourtesy(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EncounterSpecialCourtesy fromString(String str)
        {
            if (str.equals("EXT"))
                return EXT;
            if (str.equals("NRM"))
                return NRM;
            if (str.equals("PRF"))
                return PRF;
            if (str.equals("STF"))
                return STF;
            if (str.equals("VIP"))
                return VIP;
		    return null;
        }
    }

	/**
	* specDomain: S11621 (C-0-T10882-S13922-S10884-S11621-cpt)
	*/
    public enum EntityClassNonPersonLivingSubject
    {
        
        NLIV(0),
        
        ANM(1),
        
        MIC(2),
        
        PLNT(3);
        
        private int code;
        
        EntityClassNonPersonLivingSubject(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityClassNonPersonLivingSubject fromString(String str)
        {
            if (str.equals("NLIV"))
                return NLIV;
            if (str.equals("ANM"))
                return ANM;
            if (str.equals("MIC"))
                return MIC;
            if (str.equals("PLNT"))
                return PLNT;
		    return null;
        }
    }

	/**
	* specDomain: S11622 (C-0-T10882-S13922-S10883-S13934-S11622-cpt)
	*/
    public enum EntityClassContainer
    {
        
        CONT(0),
        
        HOLD(1);
        
        private int code;
        
        EntityClassContainer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityClassContainer fromString(String str)
        {
            if (str.equals("CONT"))
                return CONT;
            if (str.equals("HOLD"))
                return HOLD;
		    return null;
        }
    }

	/**
	* specDomain: S11623 (C-0-T10882-S13922-S10883-S13934-S11623-cpt)
	*/
    public enum EntityClassDevice
    {
        
        DEV(0),
        
        CER(1),
        
        MODDV(2);
        
        private int code;
        
        EntityClassDevice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityClassDevice fromString(String str)
        {
            if (str.equals("DEV"))
                return DEV;
            if (str.equals("CER"))
                return CER;
            if (str.equals("MODDV"))
                return MODDV;
		    return null;
        }
    }

	/**
	* specDomain: S10890 (C-0-T10882-S13922-S10889-S10890-cpt)
	*/
    public enum EntityClassState
    {
        
        STATE(0),
        
        NAT(1);
        
        private int code;
        
        EntityClassState(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityClassState fromString(String str)
        {
            if (str.equals("STATE"))
                return STATE;
            if (str.equals("NAT"))
                return NAT;
		    return null;
        }
    }

	/**
	* specDomain: S10892 (C-0-T10882-S13922-S10892-cpt)
	*/
    public enum EntityClassPlace
    {
        
        PLC(0),
        
        CITY(1),
        
        COUNTRY(2),
        
        COUNTY(3),
        
        PROVINCE(4);
        
        private int code;
        
        EntityClassPlace(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityClassPlace fromString(String str)
        {
            if (str.equals("PLC"))
                return PLC;
            if (str.equals("CITY"))
                return CITY;
            if (str.equals("COUNTRY"))
                return COUNTRY;
            if (str.equals("COUNTY"))
                return COUNTY;
            if (str.equals("PROVINCE"))
                return PROVINCE;
		    return null;
        }
    }

	/**
	* abstDomain: A19462 (C-0-T10882-A19462-cpt)
	*/
    public enum x_EntityClassDocumentReceiving
    {
        
        HCE(0),
        
        PSN(1);
        
        private int code;
        
        x_EntityClassDocumentReceiving(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_EntityClassDocumentReceiving fromString(String str)
        {
            if (str.equals("HCE"))
                return HCE;
            if (str.equals("PSN"))
                return PSN;
		    return null;
        }
    }

	/**
	* abstDomain: A19463 (C-0-T10882-A19463-cpt)
	*/
    public enum x_EntityClassPersonOrOrgReceiving
    {
        
        PSN(0);
        
        private int code;
        
        x_EntityClassPersonOrOrgReceiving(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_EntityClassPersonOrOrgReceiving fromString(String str)
        {
            if (str.equals("PSN"))
                return PSN;
		    return null;
        }
    }

	/**
	* abstDomain: A19699 (C-0-T16040-A16041-A19698-A19699-cpt)
	*/
    public enum NonDrugAgentEntity
    {
        
        NDA16(0),
        
        NDA17(1),
        
        NDA01(2),
        
        NDA02(3),
        
        NDA08(4),
        
        NDA03(5),
        
        NDA12(6),
        
        NDA10(7),
        
        NDA04(8),
        
        NDA13(9),
        
        NDA09(10),
        
        NDA05(11),
        
        NDA14(12),
        
        NDA06(13),
        
        NDA15(14),
        
        NDA11(15),
        
        NDA07(16);
        
        private int code;
        
        NonDrugAgentEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NonDrugAgentEntity fromString(String str)
        {
            if (str.equals("NDA16"))
                return NDA16;
            if (str.equals("NDA17"))
                return NDA17;
            if (str.equals("NDA01"))
                return NDA01;
            if (str.equals("NDA02"))
                return NDA02;
            if (str.equals("NDA08"))
                return NDA08;
            if (str.equals("NDA03"))
                return NDA03;
            if (str.equals("NDA12"))
                return NDA12;
            if (str.equals("NDA10"))
                return NDA10;
            if (str.equals("NDA04"))
                return NDA04;
            if (str.equals("NDA13"))
                return NDA13;
            if (str.equals("NDA09"))
                return NDA09;
            if (str.equals("NDA05"))
                return NDA05;
            if (str.equals("NDA14"))
                return NDA14;
            if (str.equals("NDA06"))
                return NDA06;
            if (str.equals("NDA15"))
                return NDA15;
            if (str.equals("NDA11"))
                return NDA11;
            if (str.equals("NDA07"))
                return NDA07;
		    return null;
        }
    }

	/**
	* abstDomain: A19464 (C-0-T16040-A16041-A19464-cpt)
	*/
    public enum SpecimenEntityType
    {
        
        ABS(0),
        
        AMN(1),
        
        ASP(2),
        
        BPH(3),
        
        BIFL(4),
        
        BLDCO(5),
        
        BLDA(6),
        
        BBL(7),
        
        BLDC(8),
        
        BPU(9),
        
        BLDV(10),
        
        FLU(11),
        
        BON(12),
        
        MILK(13),
        
        BRO(14),
        
        BRN(15),
        
        CALC(16),
        
        STON(17),
        
        CNL(18),
        
        CDM(19),
        
        CTP(20),
        
        CSF(21),
        
        CVM(22),
        
        CVX(23),
        
        COL(24),
        
        CNJT(25),
        
        CRN(26),
        
        CUR(27),
        
        CYST(28),
        
        DIAF(29),
        
        DOSE(30),
        
        DRN(31),
        
        DUFL(32),
        
        EAR(33),
        
        EARW(34),
        
        ELT(35),
        
        ENDC(36),
        
        ENDM(37),
        
        EOS(38),
        
        RBC(39),
        
        BRTH(40),
        
        EXG(41),
        
        EYE(42),
        
        FIB(43),
        
        FLT(44),
        
        FIST(45),
        
        FOOD(46),
        
        GAS(47),
        
        GAST(48),
        
        GEN(49),
        
        GENC(50),
        
        GENF(51),
        
        GENL(52),
        
        GENV(53),
        
        HAR(54),
        
        IHG(55),
        
        IT(56),
        
        ISLT(57),
        
        LAM(58),
        
        WBC(59),
        
        LN(60),
        
        LNA(61),
        
        LNV(62),
        
        LIQ(63),
        
        LYM(64),
        
        MAC(65),
        
        MAR(66),
        
        MEC(67),
        
        MBLD(68),
        
        MLK(69),
        
        NAIL(70),
        
        NOS(71),
        
        PAFL(72),
        
        PAT(73),
        
        PRT(74),
        
        PLC(75),
        
        PLAS(76),
        
        PLB(77),
        
        PPP(78),
        
        PRP(79),
        
        PLR(80),
        
        PMN(81),
        
        PUS(82),
        
        SAL(83),
        
        SMN(84),
        
        SMPLS(85),
        
        SER(86),
        
        SKM(87),
        
        SKN(88),
        
        SPRM(89),
        
        SPT(90),
        
        SPTC(91),
        
        SPTT(92),
        
        STL(93),
        
        SWT(94),
        
        SNV(95),
        
        TEAR(96),
        
        THRT(97),
        
        THRB(98),
        
        TISG(99),
        
        TLGI(100),
        
        TLNG(101),
        
        TISPL(102),
        
        TSMI(103),
        
        TISU(104),
        
        TISS(105),
        
        TUB(106),
        
        ULC(107),
        
        UMB(108),
        
        UMED(109),
        
        USUB(110),
        
        URTH(111),
        
        UR(112),
        
        URT(113),
        
        URC(114),
        
        URNS(115),
        
        VOM(116),
        
        WAT(117),
        
        BLD(118),
        
        BDY(119),
        
        WICK(120),
        
        WND(121),
        
        WNDA(122),
        
        WNDD(123),
        
        WNDE(124);
        
        private int code;
        
        SpecimenEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SpecimenEntityType fromString(String str)
        {
            if (str.equals("ABS"))
                return ABS;
            if (str.equals("AMN"))
                return AMN;
            if (str.equals("ASP"))
                return ASP;
            if (str.equals("BPH"))
                return BPH;
            if (str.equals("BIFL"))
                return BIFL;
            if (str.equals("BLDCO"))
                return BLDCO;
            if (str.equals("BLDA"))
                return BLDA;
            if (str.equals("BBL"))
                return BBL;
            if (str.equals("BLDC"))
                return BLDC;
            if (str.equals("BPU"))
                return BPU;
            if (str.equals("BLDV"))
                return BLDV;
            if (str.equals("FLU"))
                return FLU;
            if (str.equals("BON"))
                return BON;
            if (str.equals("MILK"))
                return MILK;
            if (str.equals("BRO"))
                return BRO;
            if (str.equals("BRN"))
                return BRN;
            if (str.equals("CALC"))
                return CALC;
            if (str.equals("STON"))
                return STON;
            if (str.equals("CNL"))
                return CNL;
            if (str.equals("CDM"))
                return CDM;
            if (str.equals("CTP"))
                return CTP;
            if (str.equals("CSF"))
                return CSF;
            if (str.equals("CVM"))
                return CVM;
            if (str.equals("CVX"))
                return CVX;
            if (str.equals("COL"))
                return COL;
            if (str.equals("CNJT"))
                return CNJT;
            if (str.equals("CRN"))
                return CRN;
            if (str.equals("CUR"))
                return CUR;
            if (str.equals("CYST"))
                return CYST;
            if (str.equals("DIAF"))
                return DIAF;
            if (str.equals("DOSE"))
                return DOSE;
            if (str.equals("DRN"))
                return DRN;
            if (str.equals("DUFL"))
                return DUFL;
            if (str.equals("EAR"))
                return EAR;
            if (str.equals("EARW"))
                return EARW;
            if (str.equals("ELT"))
                return ELT;
            if (str.equals("ENDC"))
                return ENDC;
            if (str.equals("ENDM"))
                return ENDM;
            if (str.equals("EOS"))
                return EOS;
            if (str.equals("RBC"))
                return RBC;
            if (str.equals("BRTH"))
                return BRTH;
            if (str.equals("EXG"))
                return EXG;
            if (str.equals("EYE"))
                return EYE;
            if (str.equals("FIB"))
                return FIB;
            if (str.equals("FLT"))
                return FLT;
            if (str.equals("FIST"))
                return FIST;
            if (str.equals("FOOD"))
                return FOOD;
            if (str.equals("GAS"))
                return GAS;
            if (str.equals("GAST"))
                return GAST;
            if (str.equals("GEN"))
                return GEN;
            if (str.equals("GENC"))
                return GENC;
            if (str.equals("GENF"))
                return GENF;
            if (str.equals("GENL"))
                return GENL;
            if (str.equals("GENV"))
                return GENV;
            if (str.equals("HAR"))
                return HAR;
            if (str.equals("IHG"))
                return IHG;
            if (str.equals("IT"))
                return IT;
            if (str.equals("ISLT"))
                return ISLT;
            if (str.equals("LAM"))
                return LAM;
            if (str.equals("WBC"))
                return WBC;
            if (str.equals("LN"))
                return LN;
            if (str.equals("LNA"))
                return LNA;
            if (str.equals("LNV"))
                return LNV;
            if (str.equals("LIQ"))
                return LIQ;
            if (str.equals("LYM"))
                return LYM;
            if (str.equals("MAC"))
                return MAC;
            if (str.equals("MAR"))
                return MAR;
            if (str.equals("MEC"))
                return MEC;
            if (str.equals("MBLD"))
                return MBLD;
            if (str.equals("MLK"))
                return MLK;
            if (str.equals("NAIL"))
                return NAIL;
            if (str.equals("NOS"))
                return NOS;
            if (str.equals("PAFL"))
                return PAFL;
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PRT"))
                return PRT;
            if (str.equals("PLC"))
                return PLC;
            if (str.equals("PLAS"))
                return PLAS;
            if (str.equals("PLB"))
                return PLB;
            if (str.equals("PPP"))
                return PPP;
            if (str.equals("PRP"))
                return PRP;
            if (str.equals("PLR"))
                return PLR;
            if (str.equals("PMN"))
                return PMN;
            if (str.equals("PUS"))
                return PUS;
            if (str.equals("SAL"))
                return SAL;
            if (str.equals("SMN"))
                return SMN;
            if (str.equals("SMPLS"))
                return SMPLS;
            if (str.equals("SER"))
                return SER;
            if (str.equals("SKM"))
                return SKM;
            if (str.equals("SKN"))
                return SKN;
            if (str.equals("SPRM"))
                return SPRM;
            if (str.equals("SPT"))
                return SPT;
            if (str.equals("SPTC"))
                return SPTC;
            if (str.equals("SPTT"))
                return SPTT;
            if (str.equals("STL"))
                return STL;
            if (str.equals("SWT"))
                return SWT;
            if (str.equals("SNV"))
                return SNV;
            if (str.equals("TEAR"))
                return TEAR;
            if (str.equals("THRT"))
                return THRT;
            if (str.equals("THRB"))
                return THRB;
            if (str.equals("TISG"))
                return TISG;
            if (str.equals("TLGI"))
                return TLGI;
            if (str.equals("TLNG"))
                return TLNG;
            if (str.equals("TISPL"))
                return TISPL;
            if (str.equals("TSMI"))
                return TSMI;
            if (str.equals("TISU"))
                return TISU;
            if (str.equals("TISS"))
                return TISS;
            if (str.equals("TUB"))
                return TUB;
            if (str.equals("ULC"))
                return ULC;
            if (str.equals("UMB"))
                return UMB;
            if (str.equals("UMED"))
                return UMED;
            if (str.equals("USUB"))
                return USUB;
            if (str.equals("URTH"))
                return URTH;
            if (str.equals("UR"))
                return UR;
            if (str.equals("URT"))
                return URT;
            if (str.equals("URC"))
                return URC;
            if (str.equals("URNS"))
                return URNS;
            if (str.equals("VOM"))
                return VOM;
            if (str.equals("WAT"))
                return WAT;
            if (str.equals("BLD"))
                return BLD;
            if (str.equals("BDY"))
                return BDY;
            if (str.equals("WICK"))
                return WICK;
            if (str.equals("WND"))
                return WND;
            if (str.equals("WNDA"))
                return WNDA;
            if (str.equals("WNDD"))
                return WNDD;
            if (str.equals("WNDE"))
                return WNDE;
		    return null;
        }
    }

	/**
	* specDomain: S16145 (C-0-T16040-A16041-A19867-A16143-S16144-S16145-cpt)
	*/
    public enum KitEntityType
    {
        
        KIT(0),
        
        SYSTM(1);
        
        private int code;
        
        KitEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static KitEntityType fromString(String str)
        {
            if (str.equals("KIT"))
                return KIT;
            if (str.equals("SYSTM"))
                return SYSTM;
		    return null;
        }
    }

	/**
	* abstDomain: A16147 (C-0-T16040-A16041-A19867-A16143-S16144-A16147-cpt)
	*/
    public enum NonRigidContainerEntityType
    {
        
        BAG(0),
        
        PACKT(1),
        
        PCH(2),
        
        SACH(3);
        
        private int code;
        
        NonRigidContainerEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NonRigidContainerEntityType fromString(String str)
        {
            if (str.equals("BAG"))
                return BAG;
            if (str.equals("PACKT"))
                return PACKT;
            if (str.equals("PCH"))
                return PCH;
            if (str.equals("SACH"))
                return SACH;
		    return null;
        }
    }

	/**
	* specDomain: S16171 (C-0-T16040-A16041-A19867-A16143-S16144-A16152-S16171-cpt)
	*/
    public enum BlisterPackEntityType
    {
        
        BLSTRPK(0),
        
        CARD(1);
        
        private int code;
        
        BlisterPackEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BlisterPackEntityType fromString(String str)
        {
            if (str.equals("BLSTRPK"))
                return BLSTRPK;
            if (str.equals("CARD"))
                return CARD;
		    return null;
        }
    }

	/**
	* abstDomain: A16176 (C-0-T16040-A16041-A19867-A16143-S16144-A16152-A16176-cpt)
	*/
    public enum IndividualPackageEntityType
    {
        
        AMP(0),
        
        MINIM(1),
        
        NEBAMP(2),
        
        OVUL(3);
        
        private int code;
        
        IndividualPackageEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IndividualPackageEntityType fromString(String str)
        {
            if (str.equals("AMP"))
                return AMP;
            if (str.equals("MINIM"))
                return MINIM;
            if (str.equals("NEBAMP"))
                return NEBAMP;
            if (str.equals("OVUL"))
                return OVUL;
		    return null;
        }
    }

	/**
	* specDomain: S16159 (C-0-T16040-A16041-A19867-A16143-S16144-A16152-A16153-S16155-S16159-cpt)
	*/
    public enum PlasticBottleEntityType
    {
        
        BOTP(0),
        
        BOTPLY(1);
        
        private int code;
        
        PlasticBottleEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PlasticBottleEntityType fromString(String str)
        {
            if (str.equals("BOTP"))
                return BOTP;
            if (str.equals("BOTPLY"))
                return BOTPLY;
		    return null;
        }
    }

	/**
	* abstDomain: A16042 (C-0-T16040-A16041-A19867-A16042-cpt)
	*/
    public enum MaterialEntityAdditive
    {
        
        F10(0),
        
        C32(1),
        
        C38(2),
        
        HCL6(3),
        
        ACDA(4),
        
        ACDB(5),
        
        ACET(6),
        
        AMIES(7),
        
        HEPA(8),
        
        BACTM(9),
        
        BOR(10),
        
        BOUIN(11),
        
        BF10(12),
        
        WEST(13),
        
        BSKM(14),
        
        CTAD(15),
        
        CARS(16),
        
        CARY(17),
        
        CHLTM(18),
        
        ENT(19),
        
        JKM(20),
        
        KARN(21),
        
        LIA(22),
        
        HEPL(23),
        
        M4(24),
        
        M4RT(25),
        
        M5(26),
        
        MMDTM(27),
        
        MICHTM(28),
        
        HNO3(29),
        
        NONE(30),
        
        PAGE(31),
        
        PHENOL(32),
        
        PVA(33),
        
        KOX(34),
        
        EDTK15(35),
        
        EDTK75(36),
        
        RLM(37),
        
        SST(38),
        
        SILICA(39),
        
        NAF(40),
        
        FL100(41),
        
        FL10(42),
        
        SPS(43),
        
        HEPN(44),
        
        EDTN(45),
        
        STUTM(46),
        
        THROM(47),
        
        FDP(48),
        
        THYMOL(49),
        
        THYO(50),
        
        TOLU(51),
        
        URETM(52),
        
        VIRTM(53);
        
        private int code;
        
        MaterialEntityAdditive(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MaterialEntityAdditive fromString(String str)
        {
            if (str.equals("F10"))
                return F10;
            if (str.equals("C32"))
                return C32;
            if (str.equals("C38"))
                return C38;
            if (str.equals("HCL6"))
                return HCL6;
            if (str.equals("ACDA"))
                return ACDA;
            if (str.equals("ACDB"))
                return ACDB;
            if (str.equals("ACET"))
                return ACET;
            if (str.equals("AMIES"))
                return AMIES;
            if (str.equals("HEPA"))
                return HEPA;
            if (str.equals("BACTM"))
                return BACTM;
            if (str.equals("BOR"))
                return BOR;
            if (str.equals("BOUIN"))
                return BOUIN;
            if (str.equals("BF10"))
                return BF10;
            if (str.equals("WEST"))
                return WEST;
            if (str.equals("BSKM"))
                return BSKM;
            if (str.equals("CTAD"))
                return CTAD;
            if (str.equals("CARS"))
                return CARS;
            if (str.equals("CARY"))
                return CARY;
            if (str.equals("CHLTM"))
                return CHLTM;
            if (str.equals("ENT"))
                return ENT;
            if (str.equals("JKM"))
                return JKM;
            if (str.equals("KARN"))
                return KARN;
            if (str.equals("LIA"))
                return LIA;
            if (str.equals("HEPL"))
                return HEPL;
            if (str.equals("M4"))
                return M4;
            if (str.equals("M4RT"))
                return M4RT;
            if (str.equals("M5"))
                return M5;
            if (str.equals("MMDTM"))
                return MMDTM;
            if (str.equals("MICHTM"))
                return MICHTM;
            if (str.equals("HNO3"))
                return HNO3;
            if (str.equals("NONE"))
                return NONE;
            if (str.equals("PAGE"))
                return PAGE;
            if (str.equals("PHENOL"))
                return PHENOL;
            if (str.equals("PVA"))
                return PVA;
            if (str.equals("KOX"))
                return KOX;
            if (str.equals("EDTK15"))
                return EDTK15;
            if (str.equals("EDTK75"))
                return EDTK75;
            if (str.equals("RLM"))
                return RLM;
            if (str.equals("SST"))
                return SST;
            if (str.equals("SILICA"))
                return SILICA;
            if (str.equals("NAF"))
                return NAF;
            if (str.equals("FL100"))
                return FL100;
            if (str.equals("FL10"))
                return FL10;
            if (str.equals("SPS"))
                return SPS;
            if (str.equals("HEPN"))
                return HEPN;
            if (str.equals("EDTN"))
                return EDTN;
            if (str.equals("STUTM"))
                return STUTM;
            if (str.equals("THROM"))
                return THROM;
            if (str.equals("FDP"))
                return FDP;
            if (str.equals("THYMOL"))
                return THYMOL;
            if (str.equals("THYO"))
                return THYO;
            if (str.equals("TOLU"))
                return TOLU;
            if (str.equals("URETM"))
                return URETM;
            if (str.equals("VIRTM"))
                return VIRTM;
		    return null;
        }
    }

	/**
	* specDomain: S16201 (C-0-T16040-A16041-A19867-A16188-A16200-S16201-cpt)
	*/
    public enum LineAccessMedicalDevice
    {
        
        LINE(0),
        
        IALINE(1),
        
        IVLINE(2);
        
        private int code;
        
        LineAccessMedicalDevice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LineAccessMedicalDevice fromString(String str)
        {
            if (str.equals("LINE"))
                return LINE;
            if (str.equals("IALINE"))
                return IALINE;
            if (str.equals("IVLINE"))
                return IVLINE;
		    return null;
        }
    }

	/**
	* specDomain: S16196 (C-0-T16040-A16041-A19867-A16188-A16189-S16196-cpt)
	*/
    public enum InhalerMedicalDevice
    {
        
        INH(0),
        
        DSKUNH(1),
        
        DSKS(2),
        
        TRBINH(3);
        
        private int code;
        
        InhalerMedicalDevice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InhalerMedicalDevice fromString(String str)
        {
            if (str.equals("INH"))
                return INH;
            if (str.equals("DSKUNH"))
                return DSKUNH;
            if (str.equals("DSKS"))
                return DSKS;
            if (str.equals("TRBINH"))
                return TRBINH;
		    return null;
        }
    }

	/**
	* abstDomain: A16191 (C-0-T16040-A16041-A19867-A16188-A16189-A16191-cpt)
	*/
    public enum InjectionMedicalDevice
    {
        
        AINJ(0),
        
        PEN(1),
        
        SYR(2);
        
        private int code;
        
        InjectionMedicalDevice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InjectionMedicalDevice fromString(String str)
        {
            if (str.equals("AINJ"))
                return AINJ;
            if (str.equals("PEN"))
                return PEN;
            if (str.equals("SYR"))
                return SYR;
		    return null;
        }
    }

	/**
	* abstDomain: A19652 (C-0-T16040-A19652-cpt)
	*/
    public enum ResourceGroupEntityType
    {
        
        PRAC(0);
        
        private int code;
        
        ResourceGroupEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ResourceGroupEntityType fromString(String str)
        {
            if (str.equals("PRAC"))
                return PRAC;
		    return null;
        }
    }

	/**
	* specDomain: S21458 (C-0-T16040-A19667-A19668-S21458-cpt)
	*/
    public enum VaccineEntityType
    {
        
        VCCNE(0);
        
        private int code;
        
        VaccineEntityType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaccineEntityType fromString(String str)
        {
            if (str.equals("VCCNE"))
                return VCCNE;
		    return null;
        }
    }

	/**
	* specDomain: S10879 (C-0-T10878-S10879-cpt)
	*/
    public enum EntityDeterminerDetermined
    {
        
        KIND(0),
        
        QUANTIFIED_KIND(1);
        
        private int code;
        
        EntityDeterminerDetermined(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityDeterminerDetermined fromString(String str)
        {
            if (str.equals("KIND"))
                return KIND;
            if (str.equals("QUANTIFIED_KIND"))
                return QUANTIFIED_KIND;
		    return null;
        }
    }

	/**
	* abstDomain: A19670 (C-0-T10878-A19670-cpt)
	*/
    public enum x_DeterminerInstanceKind
    {
        
        KIND(0),
        
        QUANTIFIED_KIND(1),
        
        INSTANCE(2);
        
        private int code;
        
        x_DeterminerInstanceKind(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DeterminerInstanceKind fromString(String str)
        {
            if (str.equals("KIND"))
                return KIND;
            if (str.equals("QUANTIFIED_KIND"))
                return QUANTIFIED_KIND;
            if (str.equals("INSTANCE"))
                return INSTANCE;
		    return null;
        }
    }

	/**
	* vocSet: T13988 (C-0-T13988-cpt)
	*/
    public enum EntityHandling
    {
        
        AMB(0),
        
        C37(1),
        
        CAMB(2),
        
        CFRZ(3),
        
        CREF(4),
        
        DFRZ(5),
        
        MTLF(6),
        
        CATM(7),
        
        PRTL(8),
        
        REF(9),
        
        SBU(10),
        
        UFRZ(11),
        
        PSA(12),
        
        DRY(13),
        
        FRZ(14),
        
        NTR(15),
        
        PSO(16),
        
        UPR(17);
        
        private int code;
        
        EntityHandling(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityHandling fromString(String str)
        {
            if (str.equals("AMB"))
                return AMB;
            if (str.equals("C37"))
                return C37;
            if (str.equals("CAMB"))
                return CAMB;
            if (str.equals("CFRZ"))
                return CFRZ;
            if (str.equals("CREF"))
                return CREF;
            if (str.equals("DFRZ"))
                return DFRZ;
            if (str.equals("MTLF"))
                return MTLF;
            if (str.equals("CATM"))
                return CATM;
            if (str.equals("PRTL"))
                return PRTL;
            if (str.equals("REF"))
                return REF;
            if (str.equals("SBU"))
                return SBU;
            if (str.equals("UFRZ"))
                return UFRZ;
            if (str.equals("PSA"))
                return PSA;
            if (str.equals("DRY"))
                return DRY;
            if (str.equals("FRZ"))
                return FRZ;
            if (str.equals("NTR"))
                return NTR;
            if (str.equals("PSO"))
                return PSO;
            if (str.equals("UPR"))
                return UPR;
		    return null;
        }
    }

	/**
	* abstDomain: A15889 (C-0-T15888-A15889-cpt)
	*/
    public enum OrganizationNamePartQualifier
    {
        
        LS(0);
        
        private int code;
        
        OrganizationNamePartQualifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OrganizationNamePartQualifier fromString(String str)
        {
            if (str.equals("LS"))
                return LS;
		    return null;
        }
    }

	/**
	* abstDomain: A10666 (C-0-T15888-A10659-A10666-cpt)
	*/
    public enum PersonNamePartAffixTypes
    {
        
        AC(0),
        
        NB(1),
        
        PR(2),
        
        VV(3);
        
        private int code;
        
        PersonNamePartAffixTypes(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PersonNamePartAffixTypes fromString(String str)
        {
            if (str.equals("AC"))
                return AC;
            if (str.equals("NB"))
                return NB;
            if (str.equals("PR"))
                return PR;
            if (str.equals("VV"))
                return VV;
		    return null;
        }
    }

	/**
	* abstDomain: A10660 (C-0-T15888-A10659-A10660-cpt)
	*/
    public enum PersonNamePartChangeQualifier
    {
        
        AD(0),
        
        BR(1),
        
        SP(2);
        
        private int code;
        
        PersonNamePartChangeQualifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PersonNamePartChangeQualifier fromString(String str)
        {
            if (str.equals("AD"))
                return AD;
            if (str.equals("BR"))
                return BR;
            if (str.equals("SP"))
                return SP;
		    return null;
        }
    }

	/**
	* abstDomain: A10671 (C-0-T15888-A10659-A10671-cpt)
	*/
    public enum PersonNamePartMiscQualifier
    {
        
        CL(0);
        
        private int code;
        
        PersonNamePartMiscQualifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PersonNamePartMiscQualifier fromString(String str)
        {
            if (str.equals("CL"))
                return CL;
		    return null;
        }
    }

	/**
	* abstDomain: A15881 (C-0-T15880-A15881-cpt)
	*/
    public enum x_OrganizationNamePartType
    {
        
        DEL(0),
        
        PFX(1),
        
        SFX(2);
        
        private int code;
        
        x_OrganizationNamePartType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_OrganizationNamePartType fromString(String str)
        {
            if (str.equals("DEL"))
                return DEL;
            if (str.equals("PFX"))
                return PFX;
            if (str.equals("SFX"))
                return SFX;
		    return null;
        }
    }

	/**
	* abstDomain: A10653 (C-0-T15880-A10653-cpt)
	*/
    public enum x_PersonNamePartType
    {
        
        DEL(0),
        
        FAM(1),
        
        GIV(2),
        
        PFX(3),
        
        SFX(4);
        
        private int code;
        
        x_PersonNamePartType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_PersonNamePartType fromString(String str)
        {
            if (str.equals("DEL"))
                return DEL;
            if (str.equals("FAM"))
                return FAM;
            if (str.equals("GIV"))
                return GIV;
            if (str.equals("PFX"))
                return PFX;
            if (str.equals("SFX"))
                return SFX;
		    return null;
        }
    }

	/**
	* specDomain: S10176 (C-0-T15913-S10176-cpt)
	*/
    public enum NameLegalUse
    {
        
        L(0),
        
        OR(1);
        
        private int code;
        
        NameLegalUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NameLegalUse fromString(String str)
        {
            if (str.equals("L"))
                return L;
            if (str.equals("OR"))
                return OR;
		    return null;
        }
    }

	/**
	* specDomain: S10176 (C-0-T15913-A15914-S10176-cpt)
	*/
    public enum OrganizationNameUseLegalByBOT
    {
        
        L(0),
        
        OR(1);
        
        private int code;
        
        OrganizationNameUseLegalByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OrganizationNameUseLegalByBOT fromString(String str)
        {
            if (str.equals("L"))
                return L;
            if (str.equals("OR"))
                return OR;
		    return null;
        }
    }

	/**
	* specDomain: S21363 (C-0-T15913-A200-S21363-cpt)
	*/
    public enum EntityNameSearchUse
    {
        
        SRCH(0),
        
        SNDX(1),
        
        PHON(2);
        
        private int code;
        
        EntityNameSearchUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityNameSearchUse fromString(String str)
        {
            if (str.equals("SRCH"))
                return SRCH;
            if (str.equals("SNDX"))
                return SNDX;
            if (str.equals("PHON"))
                return PHON;
		    return null;
        }
    }

	/**
	* specDomain: S10176 (C-0-T15913-A200-S10176-cpt)
	*/
    public enum PersonNameUseLegalByBOT
    {
        
        L(0),
        
        OR(1);
        
        private int code;
        
        PersonNameUseLegalByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PersonNameUseLegalByBOT fromString(String str)
        {
            if (str.equals("L"))
                return L;
            if (str.equals("OR"))
                return OR;
		    return null;
        }
    }

	/**
	* specDomain: S21321 (C-0-T15913-A200-S21321-cpt)
	*/
    public enum PersonNameUsePseudonym
    {
        
        P(0),
        
        A(1);
        
        private int code;
        
        PersonNameUsePseudonym(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PersonNameUsePseudonym fromString(String str)
        {
            if (str.equals("P"))
                return P;
            if (str.equals("A"))
                return A;
		    return null;
        }
    }

	/**
	* specDomain: S10407 (C-0-T10405-S10407-cpt)
	*/
    public enum MaterialDangerInfectious
    {
        
        INF(0),
        
        BHZ(1);
        
        private int code;
        
        MaterialDangerInfectious(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MaterialDangerInfectious fromString(String str)
        {
            if (str.equals("INF"))
                return INF;
            if (str.equals("BHZ"))
                return BHZ;
		    return null;
        }
    }

	/**
	* specDomain: S10412 (C-0-T10405-S10412-cpt)
	*/
    public enum MaterialDangerInflammable
    {
        
        IFL(0),
        
        EXP(1);
        
        private int code;
        
        MaterialDangerInflammable(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MaterialDangerInflammable fromString(String str)
        {
            if (str.equals("IFL"))
                return IFL;
            if (str.equals("EXP"))
                return EXP;
		    return null;
        }
    }

	/**
	* specDomain: S16006 (C-0-T16005-S16006-cpt)
	*/
    public enum EntityStatusNormal
    {
        
        normal(0),
        
        active(1),
        
        inactive(2);
        
        private int code;
        
        EntityStatusNormal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntityStatusNormal fromString(String str)
        {
            if (str.equals("normal"))
                return normal;
            if (str.equals("active"))
                return active;
            if (str.equals("inactive"))
                return inactive;
		    return null;
        }
    }

	/**
	* vocSet: T10896 (C-0-T10896-cpt)
	*/
    public enum EquipmentAlertLevel
    {
        
        C(0),
        
        N(1),
        
        S(2),
        
        W(3);
        
        private int code;
        
        EquipmentAlertLevel(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EquipmentAlertLevel fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("N"))
                return N;
            if (str.equals("S"))
                return S;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* specDomain: S15854 (C-0-T15836-S15837-S15854-cpt)
	*/
    public enum EthnicityHispanicCentralAmerican
    {
        
        _2155_x002D_0(0,"2155-0"),
        
        _2163_x002D_4(1,"2163-4"),
        
        _2162_x002D_6(2,"2162-6"),
        
        _2156_x002D_8(3,"2156-8"),
        
        _2157_x002D_6(4,"2157-6"),
        
        _2158_x002D_4(5,"2158-4"),
        
        _2159_x002D_2(6,"2159-2"),
        
        _2160_x002D_0(7,"2160-0"),
        
        _2161_x002D_8(8,"2161-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        EthnicityHispanicCentralAmerican(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EthnicityHispanicCentralAmerican fromString(String str)
        {
            if (str.equals("2155-0"))
                return _2155_x002D_0;
            if (str.equals("2163-4"))
                return _2163_x002D_4;
            if (str.equals("2162-6"))
                return _2162_x002D_6;
            if (str.equals("2156-8"))
                return _2156_x002D_8;
            if (str.equals("2157-6"))
                return _2157_x002D_6;
            if (str.equals("2158-4"))
                return _2158_x002D_4;
            if (str.equals("2159-2"))
                return _2159_x002D_2;
            if (str.equals("2160-0"))
                return _2160_x002D_0;
            if (str.equals("2161-8"))
                return _2161_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15848 (C-0-T15836-S15837-S15848-cpt)
	*/
    public enum EthnicityHispanicMexican
    {
        
        _2148_x002D_5(0,"2148-5"),
        
        _2151_x002D_9(1,"2151-9"),
        
        _2152_x002D_7(2,"2152-7"),
        
        _2149_x002D_3(3,"2149-3"),
        
        _2153_x002D_5(4,"2153-5"),
        
        _2150_x002D_1(5,"2150-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        EthnicityHispanicMexican(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EthnicityHispanicMexican fromString(String str)
        {
            if (str.equals("2148-5"))
                return _2148_x002D_5;
            if (str.equals("2151-9"))
                return _2151_x002D_9;
            if (str.equals("2152-7"))
                return _2152_x002D_7;
            if (str.equals("2149-3"))
                return _2149_x002D_3;
            if (str.equals("2153-5"))
                return _2153_x002D_5;
            if (str.equals("2150-1"))
                return _2150_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15863 (C-0-T15836-S15837-S15863-cpt)
	*/
    public enum EthnicityHispanicSouthAmerican
    {
        
        _2165_x002D_9(0,"2165-9"),
        
        _2166_x002D_7(1,"2166-7"),
        
        _2167_x002D_5(2,"2167-5"),
        
        _2168_x002D_3(3,"2168-3"),
        
        _2169_x002D_1(4,"2169-1"),
        
        _2176_x002D_6(5,"2176-6"),
        
        _2170_x002D_9(6,"2170-9"),
        
        _2171_x002D_7(7,"2171-7"),
        
        _2172_x002D_5(8,"2172-5"),
        
        _2175_x002D_8(9,"2175-8"),
        
        _2173_x002D_3(10,"2173-3"),
        
        _2174_x002D_1(11,"2174-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        EthnicityHispanicSouthAmerican(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EthnicityHispanicSouthAmerican fromString(String str)
        {
            if (str.equals("2165-9"))
                return _2165_x002D_9;
            if (str.equals("2166-7"))
                return _2166_x002D_7;
            if (str.equals("2167-5"))
                return _2167_x002D_5;
            if (str.equals("2168-3"))
                return _2168_x002D_3;
            if (str.equals("2169-1"))
                return _2169_x002D_1;
            if (str.equals("2176-6"))
                return _2176_x002D_6;
            if (str.equals("2170-9"))
                return _2170_x002D_9;
            if (str.equals("2171-7"))
                return _2171_x002D_7;
            if (str.equals("2172-5"))
                return _2172_x002D_5;
            if (str.equals("2175-8"))
                return _2175_x002D_8;
            if (str.equals("2173-3"))
                return _2173_x002D_3;
            if (str.equals("2174-1"))
                return _2174_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15838 (C-0-T15836-S15837-S15838-cpt)
	*/
    public enum EthnicityHispanicSpaniard
    {
        
        _2137_x002D_8(0,"2137-8"),
        
        _2138_x002D_6(1,"2138-6"),
        
        _2139_x002D_4(2,"2139-4"),
        
        _2142_x002D_8(3,"2142-8"),
        
        _2145_x002D_1(4,"2145-1"),
        
        _2140_x002D_2(5,"2140-2"),
        
        _2141_x002D_0(6,"2141-0"),
        
        _2143_x002D_6(7,"2143-6"),
        
        _2146_x002D_9(8,"2146-9"),
        
        _2144_x002D_4(9,"2144-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        EthnicityHispanicSpaniard(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EthnicityHispanicSpaniard fromString(String str)
        {
            if (str.equals("2137-8"))
                return _2137_x002D_8;
            if (str.equals("2138-6"))
                return _2138_x002D_6;
            if (str.equals("2139-4"))
                return _2139_x002D_4;
            if (str.equals("2142-8"))
                return _2142_x002D_8;
            if (str.equals("2145-1"))
                return _2145_x002D_1;
            if (str.equals("2140-2"))
                return _2140_x002D_2;
            if (str.equals("2141-0"))
                return _2141_x002D_0;
            if (str.equals("2143-6"))
                return _2143_x002D_6;
            if (str.equals("2146-9"))
                return _2146_x002D_9;
            if (str.equals("2144-4"))
                return _2144_x002D_4;
		    return null;
        }
    }

	/**
	* vocSet: T19940 (C-0-T19940-cpt)
	*/
    public enum ExposureMode
    {
        
        AIRBORNE(0),
        
        CONTACT(1),
        
        FOODBORNE(2),
        
        WATERBORNE(3);
        
        private int code;
        
        ExposureMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExposureMode fromString(String str)
        {
            if (str.equals("AIRBORNE"))
                return AIRBORNE;
            if (str.equals("CONTACT"))
                return CONTACT;
            if (str.equals("FOODBORNE"))
                return FOODBORNE;
            if (str.equals("WATERBORNE"))
                return WATERBORNE;
		    return null;
        }
    }

	/**
	* abstDomain: A10726 (C-0-T10720-S10725-A10726-cpt)
	*/
    public enum GTSAbbreviationHolidaysChristianRoman
    {
        
        JHCHREAS(0),
        
        JHCHRGFR(1),
        
        JHCHRNEW(2),
        
        JHCHRPEN(3),
        
        JHCHRXME(4),
        
        JHCHRXMS(5);
        
        private int code;
        
        GTSAbbreviationHolidaysChristianRoman(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GTSAbbreviationHolidaysChristianRoman fromString(String str)
        {
            if (str.equals("JHCHREAS"))
                return JHCHREAS;
            if (str.equals("JHCHRGFR"))
                return JHCHRGFR;
            if (str.equals("JHCHRNEW"))
                return JHCHRNEW;
            if (str.equals("JHCHRPEN"))
                return JHCHRPEN;
            if (str.equals("JHCHRXME"))
                return JHCHRXME;
            if (str.equals("JHCHRXMS"))
                return JHCHRXMS;
		    return null;
        }
    }

	/**
	* specDomain: S10733 (C-0-T10720-S10725-S10733-cpt)
	*/
    public enum GTSAbbreviationHolidaysUSNational
    {
        
        JHNUS(0),
        
        JHNUSCLM(1),
        
        JHNUSIND(2),
        
        JHNUSIND1(3),
        
        JHNUSIND5(4),
        
        JHNUSLBR(5),
        
        JHNUSMEM(6),
        
        JHNUSMEM5(7),
        
        JHNUSMEM6(8),
        
        JHNUSMLK(9),
        
        JHNUSPRE(10),
        
        JHNUSTKS(11),
        
        JHNUSTKS5(12),
        
        JHNUSVET(13);
        
        private int code;
        
        GTSAbbreviationHolidaysUSNational(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GTSAbbreviationHolidaysUSNational fromString(String str)
        {
            if (str.equals("JHNUS"))
                return JHNUS;
            if (str.equals("JHNUSCLM"))
                return JHNUSCLM;
            if (str.equals("JHNUSIND"))
                return JHNUSIND;
            if (str.equals("JHNUSIND1"))
                return JHNUSIND1;
            if (str.equals("JHNUSIND5"))
                return JHNUSIND5;
            if (str.equals("JHNUSLBR"))
                return JHNUSLBR;
            if (str.equals("JHNUSMEM"))
                return JHNUSMEM;
            if (str.equals("JHNUSMEM5"))
                return JHNUSMEM5;
            if (str.equals("JHNUSMEM6"))
                return JHNUSMEM6;
            if (str.equals("JHNUSMLK"))
                return JHNUSMLK;
            if (str.equals("JHNUSPRE"))
                return JHNUSPRE;
            if (str.equals("JHNUSTKS"))
                return JHNUSTKS;
            if (str.equals("JHNUSTKS5"))
                return JHNUSTKS5;
            if (str.equals("JHNUSVET"))
                return JHNUSVET;
		    return null;
        }
    }

	/**
	* vocSet: T11523 (C-0-T11523-cpt)
	*/
    public enum GenderStatus
    {
        
        I(0),
        
        N(1);
        
        private int code;
        
        GenderStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GenderStatus fromString(String str)
        {
            if (str.equals("I"))
                return I;
            if (str.equals("N"))
                return N;
		    return null;
        }
    }

	/**
	* vocSet: T10034 (C-0-T10034-cpt)
	*/
    public enum HL7CommitteeIDInRIM
    {
        
        C02(0),
        
        C06(1),
        
        C09(2),
        
        C00(3),
        
        C04(4),
        
        C03(5),
        
        C12(6),
        
        C10(7),
        
        C20(8),
        
        C01(9),
        
        C21(10);
        
        private int code;
        
        HL7CommitteeIDInRIM(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HL7CommitteeIDInRIM fromString(String str)
        {
            if (str.equals("C02"))
                return C02;
            if (str.equals("C06"))
                return C06;
            if (str.equals("C09"))
                return C09;
            if (str.equals("C00"))
                return C00;
            if (str.equals("C04"))
                return C04;
            if (str.equals("C03"))
                return C03;
            if (str.equals("C12"))
                return C12;
            if (str.equals("C10"))
                return C10;
            if (str.equals("C20"))
                return C20;
            if (str.equals("C01"))
                return C01;
            if (str.equals("C21"))
                return C21;
		    return null;
        }
    }

	/**
	* specDomain: S10015 (C-0-T10010-A10012-S10015-cpt)
	*/
    public enum InclusionNotRequired
    {
        
        NR(0),
        
        X(1),
        
        RE(2);
        
        private int code;
        
        InclusionNotRequired(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InclusionNotRequired fromString(String str)
        {
            if (str.equals("NR"))
                return NR;
            if (str.equals("X"))
                return X;
            if (str.equals("RE"))
                return RE;
		    return null;
        }
    }

	/**
	* vocSet: T10083 (C-0-T10083-cpt)
	*/
    public enum HL7DefinedRoseProperty
    {
        
        ApplicationRoleI(0),
        
        Cardinality(1),
        
        MayRepeat(2),
        
        InstancedDTsymbo(3),
        
        DTsymbol(4),
        
        DevelopingCommit(5),
        
        Organization(6),
        
        EndState(7),
        
        HMD(8),
        
        zhxID(9),
        
        ID(10),
        
        DeleteFromMIM(11),
        
        MIM_id(12),
        
        MandatoryInclusi(13),
        
        MsgID(14),
        
        ModelDate(15),
        
        ModelDescription(16),
        
        ModelID(17),
        
        ModelName(18),
        
        ModelVersion(19),
        
        IsPrimitiveDT(20),
        
        RcvResp(21),
        
        IsReferenceDT(22),
        
        RespComm_id(23),
        
        StartState(24),
        
        StateAttribute(25),
        
        StateTransition(26),
        
        IsSubjectClass(27),
        
        V23_Fields(28),
        
        V23_Datatype(29),
        
        Vocab_domain(30),
        
        Vocab_strength(31);
        
        private int code;
        
        HL7DefinedRoseProperty(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HL7DefinedRoseProperty fromString(String str)
        {
            if (str.equals("ApplicationRoleI"))
                return ApplicationRoleI;
            if (str.equals("Cardinality"))
                return Cardinality;
            if (str.equals("MayRepeat"))
                return MayRepeat;
            if (str.equals("InstancedDTsymbo"))
                return InstancedDTsymbo;
            if (str.equals("DTsymbol"))
                return DTsymbol;
            if (str.equals("DevelopingCommit"))
                return DevelopingCommit;
            if (str.equals("Organization"))
                return Organization;
            if (str.equals("EndState"))
                return EndState;
            if (str.equals("HMD"))
                return HMD;
            if (str.equals("zhxID"))
                return zhxID;
            if (str.equals("ID"))
                return ID;
            if (str.equals("DeleteFromMIM"))
                return DeleteFromMIM;
            if (str.equals("MIM_id"))
                return MIM_id;
            if (str.equals("MandatoryInclusi"))
                return MandatoryInclusi;
            if (str.equals("MsgID"))
                return MsgID;
            if (str.equals("ModelDate"))
                return ModelDate;
            if (str.equals("ModelDescription"))
                return ModelDescription;
            if (str.equals("ModelID"))
                return ModelID;
            if (str.equals("ModelName"))
                return ModelName;
            if (str.equals("ModelVersion"))
                return ModelVersion;
            if (str.equals("IsPrimitiveDT"))
                return IsPrimitiveDT;
            if (str.equals("RcvResp"))
                return RcvResp;
            if (str.equals("IsReferenceDT"))
                return IsReferenceDT;
            if (str.equals("RespComm_id"))
                return RespComm_id;
            if (str.equals("StartState"))
                return StartState;
            if (str.equals("StateAttribute"))
                return StateAttribute;
            if (str.equals("StateTransition"))
                return StateTransition;
            if (str.equals("IsSubjectClass"))
                return IsSubjectClass;
            if (str.equals("V23_Fields"))
                return V23_Fields;
            if (str.equals("V23_Datatype"))
                return V23_Datatype;
            if (str.equals("Vocab_domain"))
                return Vocab_domain;
            if (str.equals("Vocab_strength"))
                return Vocab_strength;
		    return null;
        }
    }

	/**
	* vocSet: T19449 (C-0-T19449-cpt)
	*/
    public enum HL7ITSVersionCode
    {
        
        XMLV1PR1(0);
        
        private int code;
        
        HL7ITSVersionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HL7ITSVersionCode fromString(String str)
        {
            if (str.equals("XMLV1PR1"))
                return XMLV1PR1;
		    return null;
        }
    }

	/**
	* vocSet: T19373 (C-0-T19373-cpt)
	*/
    public enum HL7StandardVersionCode
    {
        
        ActRelationshipExpectedSubset(0),
        
        ActRelationshipPastSubset(1),
        
        _ParticipationSubset(2),
        
        FUTURE(3),
        
        LAST(4),
        
        NEXT(5),
        
        FIRST(6),
        
        FUTSUM(7),
        
        MAX(8),
        
        MIN(9),
        
        RECENT(10),
        
        PAST(11),
        
        PREVSUM(12),
        
        SUM(13);
        
        private int code;
        
        HL7StandardVersionCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HL7StandardVersionCode fromString(String str)
        {
            if (str.equals("ActRelationshipExpectedSubset"))
                return ActRelationshipExpectedSubset;
            if (str.equals("ActRelationshipPastSubset"))
                return ActRelationshipPastSubset;
            if (str.equals("_ParticipationSubset"))
                return _ParticipationSubset;
            if (str.equals("FUTURE"))
                return FUTURE;
            if (str.equals("LAST"))
                return LAST;
            if (str.equals("NEXT"))
                return NEXT;
            if (str.equals("FIRST"))
                return FIRST;
            if (str.equals("FUTSUM"))
                return FUTSUM;
            if (str.equals("MAX"))
                return MAX;
            if (str.equals("MIN"))
                return MIN;
            if (str.equals("RECENT"))
                return RECENT;
            if (str.equals("PAST"))
                return PAST;
            if (str.equals("PREVSUM"))
                return PREVSUM;
            if (str.equals("SUM"))
                return SUM;
		    return null;
        }
    }

	/**
	* abstDomain: A10024 (C-0-T10018-A10024-cpt)
	*/
    public enum SetUpdateMode
    {
        
        ESA(0),
        
        ESAC(1),
        
        ESC(2),
        
        ESD(3);
        
        private int code;
        
        SetUpdateMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SetUpdateMode fromString(String str)
        {
            if (str.equals("ESA"))
                return ESA;
            if (str.equals("ESAC"))
                return ESAC;
            if (str.equals("ESC"))
                return ESC;
            if (str.equals("ESD"))
                return ESD;
		    return null;
        }
    }

	/**
	* specDomain: S13175 (C-0-T13129-A13130-A13174-S13175-cpt)
	*/
    public enum ChiropractersHIPAA
    {
        
        _111N00000N(0,"111N00000N"),
        
        _111NI0900N(1,"111NI0900N"),
        
        _111NN0400N(2,"111NN0400N"),
        
        _111NN1001N(3,"111NN1001N"),
        
        _111NX0100N(4,"111NX0100N"),
        
        _111NX0800N(5,"111NX0800N"),
        
        _111NR0200N(6,"111NR0200N"),
        
        _111NS0005N(7,"111NS0005N"),
        
        _111NT0100N(8,"111NT0100N");
        
        private int code;
        private java.lang.String xmlValue;
        
        ChiropractersHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ChiropractersHIPAA fromString(String str)
        {
            if (str.equals("111N00000N"))
                return _111N00000N;
            if (str.equals("111NI0900N"))
                return _111NI0900N;
            if (str.equals("111NN0400N"))
                return _111NN0400N;
            if (str.equals("111NN1001N"))
                return _111NN1001N;
            if (str.equals("111NX0100N"))
                return _111NX0100N;
            if (str.equals("111NX0800N"))
                return _111NX0800N;
            if (str.equals("111NR0200N"))
                return _111NR0200N;
            if (str.equals("111NS0005N"))
                return _111NS0005N;
            if (str.equals("111NT0100N"))
                return _111NT0100N;
		    return null;
        }
    }

	/**
	* specDomain: S13132 (C-0-T13129-A13130-A13131-S13132-cpt)
	*/
    public enum BehavioralHealthAndOrSocialServiceCounselorHIPAA
    {
        
        _101Y00000N(0,"101Y00000N"),
        
        _101YA0400N(1,"101YA0400N"),
        
        _101YM0800N(2,"101YM0800N"),
        
        _101YP1600N(3,"101YP1600N"),
        
        _101YP2500N(4,"101YP2500N"),
        
        _101YS0200N(5,"101YS0200N");
        
        private int code;
        private java.lang.String xmlValue;
        
        BehavioralHealthAndOrSocialServiceCounselorHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static BehavioralHealthAndOrSocialServiceCounselorHIPAA fromString(String str)
        {
            if (str.equals("101Y00000N"))
                return _101Y00000N;
            if (str.equals("101YA0400N"))
                return _101YA0400N;
            if (str.equals("101YM0800N"))
                return _101YM0800N;
            if (str.equals("101YP1600N"))
                return _101YP1600N;
            if (str.equals("101YP2500N"))
                return _101YP2500N;
            if (str.equals("101YS0200N"))
                return _101YS0200N;
		    return null;
        }
    }

	/**
	* abstDomain: A13147 (C-0-T13129-A13130-A13131-A13147-cpt)
	*/
    public enum NeuropsychologistHIPAA
    {
        
        _103GC0700N(0,"103GC0700N");
        
        private int code;
        private java.lang.String xmlValue;
        
        NeuropsychologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NeuropsychologistHIPAA fromString(String str)
        {
            if (str.equals("103GC0700N"))
                return _103GC0700N;
		    return null;
        }
    }

	/**
	* specDomain: S13149 (C-0-T13129-A13130-A13131-S13149-cpt)
	*/
    public enum PsychoanalystHIPAA
    {
        
        _103S00000N(0,"103S00000N"),
        
        _103SA1800N(1,"103SA1800N"),
        
        _103SA1400N(2,"103SA1400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PsychoanalystHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PsychoanalystHIPAA fromString(String str)
        {
            if (str.equals("103S00000N"))
                return _103S00000N;
            if (str.equals("103SA1800N"))
                return _103SA1800N;
            if (str.equals("103SA1400N"))
                return _103SA1400N;
		    return null;
        }
    }

	/**
	* specDomain: S13152 (C-0-T13129-A13130-A13131-S13152-cpt)
	*/
    public enum PsychologistHIPAA
    {
        
        _103T00000N(0,"103T00000N"),
        
        _103TA0400N(1,"103TA0400N"),
        
        _103TA0700N(2,"103TA0700N"),
        
        _103TB0200N(3,"103TB0200N"),
        
        _103TC2200N(4,"103TC2200N"),
        
        _103TC0700N(5,"103TC0700N"),
        
        _103TC1900N(6,"103TC1900N"),
        
        _103TE1000N(7,"103TE1000N"),
        
        _103TE1100N(8,"103TE1100N"),
        
        _103TF0000N(9,"103TF0000N"),
        
        _103TF0200N(10,"103TF0200N"),
        
        _103TH0100N(11,"103TH0100N"),
        
        _103TM1700N(12,"103TM1700N"),
        
        _103TM1800N(13,"103TM1800N"),
        
        _103TP2700N(14,"103TP2700N"),
        
        _103TP2701N(15,"103TP2701N"),
        
        _103TR0400N(16,"103TR0400N"),
        
        _103TS0200N(17,"103TS0200N"),
        
        _103TW0100N(18,"103TW0100N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PsychologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PsychologistHIPAA fromString(String str)
        {
            if (str.equals("103T00000N"))
                return _103T00000N;
            if (str.equals("103TA0400N"))
                return _103TA0400N;
            if (str.equals("103TA0700N"))
                return _103TA0700N;
            if (str.equals("103TB0200N"))
                return _103TB0200N;
            if (str.equals("103TC2200N"))
                return _103TC2200N;
            if (str.equals("103TC0700N"))
                return _103TC0700N;
            if (str.equals("103TC1900N"))
                return _103TC1900N;
            if (str.equals("103TE1000N"))
                return _103TE1000N;
            if (str.equals("103TE1100N"))
                return _103TE1100N;
            if (str.equals("103TF0000N"))
                return _103TF0000N;
            if (str.equals("103TF0200N"))
                return _103TF0200N;
            if (str.equals("103TH0100N"))
                return _103TH0100N;
            if (str.equals("103TM1700N"))
                return _103TM1700N;
            if (str.equals("103TM1800N"))
                return _103TM1800N;
            if (str.equals("103TP2700N"))
                return _103TP2700N;
            if (str.equals("103TP2701N"))
                return _103TP2701N;
            if (str.equals("103TR0400N"))
                return _103TR0400N;
            if (str.equals("103TS0200N"))
                return _103TS0200N;
            if (str.equals("103TW0100N"))
                return _103TW0100N;
		    return null;
        }
    }

	/**
	* specDomain: S13171 (C-0-T13129-A13130-A13131-S13171-cpt)
	*/
    public enum SocialWorkerHIPAA
    {
        
        _104100000N(0,"104100000N"),
        
        _1041C0700N(1,"1041C0700N"),
        
        _1041S0200N(2,"1041S0200N");
        
        private int code;
        private java.lang.String xmlValue;
        
        SocialWorkerHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SocialWorkerHIPAA fromString(String str)
        {
            if (str.equals("104100000N"))
                return _104100000N;
            if (str.equals("1041C0700N"))
                return _1041C0700N;
            if (str.equals("1041S0200N"))
                return _1041S0200N;
		    return null;
        }
    }

	/**
	* abstDomain: A13195 (C-0-T13129-A13130-A16460-S13188-A13195-cpt)
	*/
    public enum Prosthodontics
    {
        
        _1327D0700N(0,"1327D0700N");
        
        private int code;
        private java.lang.String xmlValue;
        
        Prosthodontics(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Prosthodontics fromString(String str)
        {
            if (str.equals("1327D0700N"))
                return _1327D0700N;
		    return null;
        }
    }

	/**
	* specDomain: S13205 (C-0-T13129-A13130-A13197-S13205-cpt)
	*/
    public enum NutritionistHIPAA
    {
        
        _133N00000N(0,"133N00000N"),
        
        _133NN1002N(1,"133NN1002N");
        
        private int code;
        private java.lang.String xmlValue;
        
        NutritionistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NutritionistHIPAA fromString(String str)
        {
            if (str.equals("133N00000N"))
                return _133N00000N;
            if (str.equals("133NN1002N"))
                return _133NN1002N;
		    return null;
        }
    }

	/**
	* specDomain: S13201 (C-0-T13129-A13130-A13197-S13201-cpt)
	*/
    public enum RegisteredDieticianHIPAA
    {
        
        _133V00000N(0,"133V00000N"),
        
        _133VN1006N(1,"133VN1006N"),
        
        _133VN1004N(2,"133VN1004N"),
        
        _133VN1005N(3,"133VN1005N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RegisteredDieticianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RegisteredDieticianHIPAA fromString(String str)
        {
            if (str.equals("133V00000N"))
                return _133V00000N;
            if (str.equals("133VN1006N"))
                return _133VN1006N;
            if (str.equals("133VN1004N"))
                return _133VN1004N;
            if (str.equals("133VN1005N"))
                return _133VN1005N;
		    return null;
        }
    }

	/**
	* abstDomain: A13207 (C-0-T13129-A13130-A13207-cpt)
	*/
    public enum EmergencyMedicalServiceProviderHIPAA
    {
        
        _146N00000N(0,"146N00000N"),
        
        _146M00000N(1,"146M00000N"),
        
        _146L00000N(2,"146L00000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        EmergencyMedicalServiceProviderHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EmergencyMedicalServiceProviderHIPAA fromString(String str)
        {
            if (str.equals("146N00000N"))
                return _146N00000N;
            if (str.equals("146M00000N"))
                return _146M00000N;
            if (str.equals("146L00000N"))
                return _146L00000N;
		    return null;
        }
    }

	/**
	* abstDomain: A13219 (C-0-T13129-A13130-A13211-A13219-cpt)
	*/
    public enum EyeAndVisionServiceProviderTechnicianAndOrTechnologistHIPAA
    {
        
        _156FC0800N(0,"156FC0800N"),
        
        _156FC0801N(1,"156FC0801N"),
        
        _156FX1700N(2,"156FX1700N"),
        
        _156FX1100N(3,"156FX1100N"),
        
        _156FX1101N(4,"156FX1101N"),
        
        _156FX1800N(5,"156FX1800N"),
        
        _156FX1201N(6,"156FX1201N"),
        
        _156FX1202N(7,"156FX1202N"),
        
        _156FX1900N(8,"156FX1900N");
        
        private int code;
        private java.lang.String xmlValue;
        
        EyeAndVisionServiceProviderTechnicianAndOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EyeAndVisionServiceProviderTechnicianAndOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("156FC0800N"))
                return _156FC0800N;
            if (str.equals("156FC0801N"))
                return _156FC0801N;
            if (str.equals("156FX1700N"))
                return _156FX1700N;
            if (str.equals("156FX1100N"))
                return _156FX1100N;
            if (str.equals("156FX1101N"))
                return _156FX1101N;
            if (str.equals("156FX1800N"))
                return _156FX1800N;
            if (str.equals("156FX1201N"))
                return _156FX1201N;
            if (str.equals("156FX1202N"))
                return _156FX1202N;
            if (str.equals("156FX1900N"))
                return _156FX1900N;
		    return null;
        }
    }

	/**
	* specDomain: S13212 (C-0-T13129-A13130-A13211-S13212-cpt)
	*/
    public enum OptometristHIPAA
    {
        
        _152W00000N(0,"152W00000N"),
        
        _152WC0800N(1,"152WC0800N"),
        
        _152WL0500N(2,"152WL0500N"),
        
        _152WX0102N(3,"152WX0102N"),
        
        _152WP0200N(4,"152WP0200N"),
        
        _152WS0006N(5,"152WS0006N"),
        
        _152WV0400N(6,"152WV0400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OptometristHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OptometristHIPAA fromString(String str)
        {
            if (str.equals("152W00000N"))
                return _152W00000N;
            if (str.equals("152WC0800N"))
                return _152WC0800N;
            if (str.equals("152WL0500N"))
                return _152WL0500N;
            if (str.equals("152WX0102N"))
                return _152WX0102N;
            if (str.equals("152WP0200N"))
                return _152WP0200N;
            if (str.equals("152WS0006N"))
                return _152WS0006N;
            if (str.equals("152WV0400N"))
                return _152WV0400N;
		    return null;
        }
    }

	/**
	* specDomain: S13232 (C-0-T13129-A13130-A13229-S13232-cpt)
	*/
    public enum RegisteredNurseHIPAA
    {
        
        _163W00000N(0,"163W00000N"),
        
        _163WA0400N(1,"163WA0400N"),
        
        _163WA2000N(2,"163WA2000N"),
        
        _163WC3500N(3,"163WC3500N"),
        
        _163WC0400N(4,"163WC0400N"),
        
        _163WC1400N(5,"163WC1400N"),
        
        _163WC1500N(6,"163WC1500N"),
        
        _163WC2100N(7,"163WC2100N"),
        
        _163WC1600N(8,"163WC1600N"),
        
        _163WC0200N(9,"163WC0200N"),
        
        _163WD0400N(10,"163WD0400N"),
        
        _163WD1100N(11,"163WD1100N"),
        
        _163WE0003N(12,"163WE0003N"),
        
        _163WE0900N(13,"163WE0900N"),
        
        _163WF0300N(14,"163WF0300N"),
        
        _163WG0100N(15,"163WG0100N"),
        
        _163WG0000N(16,"163WG0000N"),
        
        _163WG0600N(17,"163WG0600N"),
        
        _163WH0500N(18,"163WH0500N"),
        
        _163WH0200N(19,"163WH0200N"),
        
        _163WH1000N(20,"163WH1000N"),
        
        _163WI0600N(21,"163WI0600N"),
        
        _163WI0500N(22,"163WI0500N"),
        
        _163WL0100N(23,"163WL0100N"),
        
        _163WM1400N(24,"163WM1400N"),
        
        _163WM0102N(25,"163WM0102N"),
        
        _163WM0705N(26,"163WM0705N"),
        
        _163WN0002N(27,"163WN0002N"),
        
        _163WN0003N(28,"163WN0003N"),
        
        _163WN0300N(29,"163WN0300N"),
        
        _163WN0800N(30,"163WN0800N"),
        
        _163WN1003N(31,"163WN1003N"),
        
        _163WX0002N(32,"163WX0002N"),
        
        _163WX0003N(33,"163WX0003N"),
        
        _163WX0106N(34,"163WX0106N"),
        
        _163WX0200N(35,"163WX0200N"),
        
        _163WX1000N(36,"163WX1000N"),
        
        _163WX1100N(37,"163WX1100N"),
        
        _163WX0800N(38,"163WX0800N"),
        
        _163WX1500N(39,"163WX1500N"),
        
        _163WX0601N(40,"163WX0601N"),
        
        _163WP0000N(41,"163WP0000N"),
        
        _163WP0218N(42,"163WP0218N"),
        
        _163WP0200N(43,"163WP0200N"),
        
        _163WP1700N(44,"163WP1700N"),
        
        _163WP2200N(45,"163WP2200N"),
        
        _163WP2201N(46,"163WP2201N"),
        
        _163WP0808N(47,"163WP0808N"),
        
        _163WP0809N(48,"163WP0809N"),
        
        _163WP0807N(49,"163WP0807N"),
        
        _163WR0400N(50,"163WR0400N"),
        
        _163WR1000N(51,"163WR1000N"),
        
        _163WS0200N(52,"163WS0200N"),
        
        _163WS0121N(53,"163WS0121N"),
        
        _163WU0100N(54,"163WU0100N"),
        
        _163WW0101N(55,"163WW0101N"),
        
        _163WW0000N(56,"163WW0000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RegisteredNurseHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RegisteredNurseHIPAA fromString(String str)
        {
            if (str.equals("163W00000N"))
                return _163W00000N;
            if (str.equals("163WA0400N"))
                return _163WA0400N;
            if (str.equals("163WA2000N"))
                return _163WA2000N;
            if (str.equals("163WC3500N"))
                return _163WC3500N;
            if (str.equals("163WC0400N"))
                return _163WC0400N;
            if (str.equals("163WC1400N"))
                return _163WC1400N;
            if (str.equals("163WC1500N"))
                return _163WC1500N;
            if (str.equals("163WC2100N"))
                return _163WC2100N;
            if (str.equals("163WC1600N"))
                return _163WC1600N;
            if (str.equals("163WC0200N"))
                return _163WC0200N;
            if (str.equals("163WD0400N"))
                return _163WD0400N;
            if (str.equals("163WD1100N"))
                return _163WD1100N;
            if (str.equals("163WE0003N"))
                return _163WE0003N;
            if (str.equals("163WE0900N"))
                return _163WE0900N;
            if (str.equals("163WF0300N"))
                return _163WF0300N;
            if (str.equals("163WG0100N"))
                return _163WG0100N;
            if (str.equals("163WG0000N"))
                return _163WG0000N;
            if (str.equals("163WG0600N"))
                return _163WG0600N;
            if (str.equals("163WH0500N"))
                return _163WH0500N;
            if (str.equals("163WH0200N"))
                return _163WH0200N;
            if (str.equals("163WH1000N"))
                return _163WH1000N;
            if (str.equals("163WI0600N"))
                return _163WI0600N;
            if (str.equals("163WI0500N"))
                return _163WI0500N;
            if (str.equals("163WL0100N"))
                return _163WL0100N;
            if (str.equals("163WM1400N"))
                return _163WM1400N;
            if (str.equals("163WM0102N"))
                return _163WM0102N;
            if (str.equals("163WM0705N"))
                return _163WM0705N;
            if (str.equals("163WN0002N"))
                return _163WN0002N;
            if (str.equals("163WN0003N"))
                return _163WN0003N;
            if (str.equals("163WN0300N"))
                return _163WN0300N;
            if (str.equals("163WN0800N"))
                return _163WN0800N;
            if (str.equals("163WN1003N"))
                return _163WN1003N;
            if (str.equals("163WX0002N"))
                return _163WX0002N;
            if (str.equals("163WX0003N"))
                return _163WX0003N;
            if (str.equals("163WX0106N"))
                return _163WX0106N;
            if (str.equals("163WX0200N"))
                return _163WX0200N;
            if (str.equals("163WX1000N"))
                return _163WX1000N;
            if (str.equals("163WX1100N"))
                return _163WX1100N;
            if (str.equals("163WX0800N"))
                return _163WX0800N;
            if (str.equals("163WX1500N"))
                return _163WX1500N;
            if (str.equals("163WX0601N"))
                return _163WX0601N;
            if (str.equals("163WP0000N"))
                return _163WP0000N;
            if (str.equals("163WP0218N"))
                return _163WP0218N;
            if (str.equals("163WP0200N"))
                return _163WP0200N;
            if (str.equals("163WP1700N"))
                return _163WP1700N;
            if (str.equals("163WP2200N"))
                return _163WP2200N;
            if (str.equals("163WP2201N"))
                return _163WP2201N;
            if (str.equals("163WP0808N"))
                return _163WP0808N;
            if (str.equals("163WP0809N"))
                return _163WP0809N;
            if (str.equals("163WP0807N"))
                return _163WP0807N;
            if (str.equals("163WR0400N"))
                return _163WR0400N;
            if (str.equals("163WR1000N"))
                return _163WR1000N;
            if (str.equals("163WS0200N"))
                return _163WS0200N;
            if (str.equals("163WS0121N"))
                return _163WS0121N;
            if (str.equals("163WU0100N"))
                return _163WU0100N;
            if (str.equals("163WW0101N"))
                return _163WW0101N;
            if (str.equals("163WW0000N"))
                return _163WW0000N;
		    return null;
        }
    }

	/**
	* abstDomain: A13134 (C-0-T13129-A13130-S13134-A13134-cpt)
	*/
    public enum NursingServiceRelatedProviderTechnicianHIPAA
    {
        
        _3747P1801N(0,"3747P1801N");
        
        private int code;
        private java.lang.String xmlValue;
        
        NursingServiceRelatedProviderTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NursingServiceRelatedProviderTechnicianHIPAA fromString(String str)
        {
            if (str.equals("3747P1801N"))
                return _3747P1801N;
		    return null;
        }
    }

	/**
	* abstDomain: A13579 (C-0-T13129-A13130-A13578-A13579-cpt)
	*/
    public enum OtherPhysicianOsteopathHIPAA
    {
        
        _353BL0002N(0,"353BL0002N"),
        
        _353BS0900N(1,"353BS0900N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherPhysicianOsteopathHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherPhysicianOsteopathHIPAA fromString(String str)
        {
            if (str.equals("353BL0002N"))
                return _353BL0002N;
            if (str.equals("353BS0900N"))
                return _353BS0900N;
		    return null;
        }
    }

	/**
	* abstDomain: A13139 (C-0-T13129-A13130-A13136-A13139-cpt)
	*/
    public enum OtherServiceProviderContractorHIPAA
    {
        
        _171WH0202N(0,"171WH0202N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherServiceProviderContractorHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherServiceProviderContractorHIPAA fromString(String str)
        {
            if (str.equals("171WH0202N"))
                return _171WH0202N;
		    return null;
        }
    }

	/**
	* abstDomain: A13347 (C-0-T13129-A13130-A13136-A13347-cpt)
	*/
    public enum OtherServiceProviderSpecialistHIPAA
    {
        
        _1744G0900N(0,"1744G0900N"),
        
        _1744P3200N(1,"1744P3200N"),
        
        _1744R1103N(2,"1744R1103N"),
        
        _1744R1102N(3,"1744R1102N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherServiceProviderSpecialistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherServiceProviderSpecialistHIPAA fromString(String str)
        {
            if (str.equals("1744G0900N"))
                return _1744G0900N;
            if (str.equals("1744P3200N"))
                return _1744P3200N;
            if (str.equals("1744R1103N"))
                return _1744R1103N;
            if (str.equals("1744R1102N"))
                return _1744R1102N;
		    return null;
        }
    }

	/**
	* abstDomain: A13352 (C-0-T13129-A13130-A13136-A13352-cpt)
	*/
    public enum VeterinarianHIPAA
    {
        
        _174MM1900N(0,"174MM1900N");
        
        private int code;
        private java.lang.String xmlValue;
        
        VeterinarianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static VeterinarianHIPAA fromString(String str)
        {
            if (str.equals("174MM1900N"))
                return _174MM1900N;
		    return null;
        }
    }

	/**
	* abstDomain: A13660 (C-0-T13129-A13130-A13644-A13660-cpt)
	*/
    public enum CardiologySpecialistOrTechnologistHIPAA
    {
        
        _246VC0100N(0,"246VC0100N"),
        
        _246VC2400N(1,"246VC2400N"),
        
        _246VC2901N(2,"246VC2901N"),
        
        _246VC2902N(3,"246VC2902N"),
        
        _246VC2903N(4,"246VC2903N"),
        
        _246VP3600N(5,"246VP3600N"),
        
        _246VS1301N(6,"246VS1301N"),
        
        _246VV0100N(7,"246VV0100N");
        
        private int code;
        private java.lang.String xmlValue;
        
        CardiologySpecialistOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CardiologySpecialistOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("246VC0100N"))
                return _246VC0100N;
            if (str.equals("246VC2400N"))
                return _246VC2400N;
            if (str.equals("246VC2901N"))
                return _246VC2901N;
            if (str.equals("246VC2902N"))
                return _246VC2902N;
            if (str.equals("246VC2903N"))
                return _246VC2903N;
            if (str.equals("246VP3600N"))
                return _246VP3600N;
            if (str.equals("246VS1301N"))
                return _246VS1301N;
            if (str.equals("246VV0100N"))
                return _246VV0100N;
		    return null;
        }
    }

	/**
	* abstDomain: A13669 (C-0-T13129-A13130-A13644-A13669-cpt)
	*/
    public enum HealthInformationSpecialistOrTechnologistHIPAA
    {
        
        _246YC3301N(0,"246YC3301N"),
        
        _246YC3302N(1,"246YC3302N"),
        
        _246YR1600N(2,"246YR1600N");
        
        private int code;
        private java.lang.String xmlValue;
        
        HealthInformationSpecialistOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static HealthInformationSpecialistOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("246YC3301N"))
                return _246YC3301N;
            if (str.equals("246YC3302N"))
                return _246YC3302N;
            if (str.equals("246YR1600N"))
                return _246YR1600N;
		    return null;
        }
    }

	/**
	* abstDomain: A13703 (C-0-T13129-A13130-A13644-A13703-cpt)
	*/
    public enum HealthInformationTechnicianHIPAA
    {
        
        _2470A2800N(0,"2470A2800N");
        
        private int code;
        private java.lang.String xmlValue;
        
        HealthInformationTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static HealthInformationTechnicianHIPAA fromString(String str)
        {
            if (str.equals("2470A2800N"))
                return _2470A2800N;
		    return null;
        }
    }

	/**
	* abstDomain: A13673 (C-0-T13129-A13130-A13644-A13673-cpt)
	*/
    public enum OtherTechnologistOrTechnicianHIPAA
    {
        
        _246ZA2600N(0,"246ZA2600N"),
        
        _246ZB0500N(1,"246ZB0500N"),
        
        _246ZB0301N(2,"246ZB0301N"),
        
        _246ZB0302N(3,"246ZB0302N"),
        
        _246ZB0600N(4,"246ZB0600N"),
        
        _246ZE0500N(5,"246ZE0500N"),
        
        _246ZE0600N(6,"246ZE0600N"),
        
        _246ZF0200N(7,"246ZF0200N"),
        
        _246ZG1000N(8,"246ZG1000N"),
        
        _246ZG0701N(9,"246ZG0701N"),
        
        _246ZI1000N(10,"246ZI1000N"),
        
        _246ZN0300N(11,"246ZN0300N"),
        
        _246ZS0400N(12,"246ZS0400N"),
        
        _246ZV0500N(13,"246ZV0500N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherTechnologistOrTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherTechnologistOrTechnicianHIPAA fromString(String str)
        {
            if (str.equals("246ZA2600N"))
                return _246ZA2600N;
            if (str.equals("246ZB0500N"))
                return _246ZB0500N;
            if (str.equals("246ZB0301N"))
                return _246ZB0301N;
            if (str.equals("246ZB0302N"))
                return _246ZB0302N;
            if (str.equals("246ZB0600N"))
                return _246ZB0600N;
            if (str.equals("246ZE0500N"))
                return _246ZE0500N;
            if (str.equals("246ZE0600N"))
                return _246ZE0600N;
            if (str.equals("246ZF0200N"))
                return _246ZF0200N;
            if (str.equals("246ZG1000N"))
                return _246ZG1000N;
            if (str.equals("246ZG0701N"))
                return _246ZG0701N;
            if (str.equals("246ZI1000N"))
                return _246ZI1000N;
            if (str.equals("246ZN0300N"))
                return _246ZN0300N;
            if (str.equals("246ZS0400N"))
                return _246ZS0400N;
            if (str.equals("246ZV0500N"))
                return _246ZV0500N;
		    return null;
        }
    }

	/**
	* abstDomain: A13705 (C-0-T13129-A13130-A13644-A13705-cpt)
	*/
    public enum OtherTechnologistOrTechnicianProviderHIPAA
    {
        
        _2472B0301N(0,"2472B0301N"),
        
        _2472D0500N(1,"2472D0500N"),
        
        _2472E0500N(2,"2472E0500N"),
        
        _2472R0900N(3,"2472R0900N"),
        
        _2472V0600N(4,"2472V0600N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtherTechnologistOrTechnicianProviderHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtherTechnologistOrTechnicianProviderHIPAA fromString(String str)
        {
            if (str.equals("2472B0301N"))
                return _2472B0301N;
            if (str.equals("2472D0500N"))
                return _2472D0500N;
            if (str.equals("2472E0500N"))
                return _2472E0500N;
            if (str.equals("2472R0900N"))
                return _2472R0900N;
            if (str.equals("2472V0600N"))
                return _2472V0600N;
		    return null;
        }
    }

	/**
	* abstDomain: A13688 (C-0-T13129-A13130-A13644-A13688-cpt)
	*/
    public enum PathologySpecialistOrTechnologistHIPAA
    {
        
        _246QB0000N(0,"246QB0000N"),
        
        _246QC1000N(1,"246QC1000N"),
        
        _246QC2700N(2,"246QC2700N"),
        
        _246QH0401N(3,"246QH0401N"),
        
        _246QH0000N(4,"246QH0000N"),
        
        _246QH0600N(5,"246QH0600N"),
        
        _246QI0000N(6,"246QI0000N"),
        
        _246QL0900N(7,"246QL0900N"),
        
        _246QL0901N(8,"246QL0901N"),
        
        _246QM0706N(9,"246QM0706N"),
        
        _246QM0900N(10,"246QM0900N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PathologySpecialistOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PathologySpecialistOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("246QB0000N"))
                return _246QB0000N;
            if (str.equals("246QC1000N"))
                return _246QC1000N;
            if (str.equals("246QC2700N"))
                return _246QC2700N;
            if (str.equals("246QH0401N"))
                return _246QH0401N;
            if (str.equals("246QH0000N"))
                return _246QH0000N;
            if (str.equals("246QH0600N"))
                return _246QH0600N;
            if (str.equals("246QI0000N"))
                return _246QI0000N;
            if (str.equals("246QL0900N"))
                return _246QL0900N;
            if (str.equals("246QL0901N"))
                return _246QL0901N;
            if (str.equals("246QM0706N"))
                return _246QM0706N;
            if (str.equals("246QM0900N"))
                return _246QM0900N;
		    return null;
        }
    }

	/**
	* abstDomain: A13711 (C-0-T13129-A13130-A13644-A13711-cpt)
	*/
    public enum PathologyTechnicianHIPAA
    {
        
        _246RH0600N(0,"246RH0600N"),
        
        _246RM2200N(1,"246RM2200N"),
        
        _246RP1900N(2,"246RP1900N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PathologyTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PathologyTechnicianHIPAA fromString(String str)
        {
            if (str.equals("246RH0600N"))
                return _246RH0600N;
            if (str.equals("246RM2200N"))
                return _246RM2200N;
            if (str.equals("246RP1900N"))
                return _246RP1900N;
		    return null;
        }
    }

	/**
	* abstDomain: A13645 (C-0-T13129-A13130-A13644-A13645-cpt)
	*/
    public enum RadiologicTechnologistHIPAA
    {
        
        _2471C1101N(0,"2471C1101N"),
        
        _2471C3401N(1,"2471C3401N"),
        
        _2471C3402N(2,"2471C3402N"),
        
        _2471D1300N(3,"2471D1300N"),
        
        _2471M1201N(4,"2471M1201N"),
        
        _2471M1202N(5,"2471M1202N"),
        
        _2471M2300N(6,"2471M2300N"),
        
        _2471N0900N(7,"2471N0900N"),
        
        _2471Q0001N(8,"2471Q0001N"),
        
        _2471Q0002N(9,"2471Q0002N"),
        
        _2471R0003N(10,"2471R0003N"),
        
        _2471R0002N(11,"2471R0002N"),
        
        _2471R1500N(12,"2471R1500N"),
        
        _2471S1302N(13,"2471S1302N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RadiologicTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RadiologicTechnologistHIPAA fromString(String str)
        {
            if (str.equals("2471C1101N"))
                return _2471C1101N;
            if (str.equals("2471C3401N"))
                return _2471C3401N;
            if (str.equals("2471C3402N"))
                return _2471C3402N;
            if (str.equals("2471D1300N"))
                return _2471D1300N;
            if (str.equals("2471M1201N"))
                return _2471M1201N;
            if (str.equals("2471M1202N"))
                return _2471M1202N;
            if (str.equals("2471M2300N"))
                return _2471M2300N;
            if (str.equals("2471N0900N"))
                return _2471N0900N;
            if (str.equals("2471Q0001N"))
                return _2471Q0001N;
            if (str.equals("2471Q0002N"))
                return _2471Q0002N;
            if (str.equals("2471R0003N"))
                return _2471R0003N;
            if (str.equals("2471R0002N"))
                return _2471R0002N;
            if (str.equals("2471R1500N"))
                return _2471R1500N;
            if (str.equals("2471S1302N"))
                return _2471S1302N;
		    return null;
        }
    }

	/**
	* specDomain: S13355 (C-0-T13129-A13130-A13354-S13355-cpt)
	*/
    public enum PharmacistHIPAA
    {
        
        _183500000N(0,"183500000N"),
        
        _1835G0000N(1,"1835G0000N"),
        
        _1835N0905N(2,"1835N0905N"),
        
        _1835N1003N(3,"1835N1003N"),
        
        _1835P1200N(4,"1835P1200N"),
        
        _1835P1300N(5,"1835P1300N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PharmacistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PharmacistHIPAA fromString(String str)
        {
            if (str.equals("183500000N"))
                return _183500000N;
            if (str.equals("1835G0000N"))
                return _1835G0000N;
            if (str.equals("1835N0905N"))
                return _1835N0905N;
            if (str.equals("1835N1003N"))
                return _1835N1003N;
            if (str.equals("1835P1200N"))
                return _1835P1200N;
            if (str.equals("1835P1300N"))
                return _1835P1300N;
		    return null;
        }
    }

	/**
	* abstDomain: A13361 (C-0-T13129-A13130-A13354-A13361-cpt)
	*/
    public enum PharmacyServiceProviderTechnicianHIPAA
    {
        
        _1847P3400N(0,"1847P3400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PharmacyServiceProviderTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PharmacyServiceProviderTechnicianHIPAA fromString(String str)
        {
            if (str.equals("1847P3400N"))
                return _1847P3400N;
		    return null;
        }
    }

	/**
	* specDomain: S13364 (C-0-T13129-A13130-A13363-S13364-cpt)
	*/
    public enum ClinicalNurseSpecialistHIPAA
    {
        
        _364S00000N(0,"364S00000N"),
        
        _364SA2100N(1,"364SA2100N"),
        
        _364SA2200N(2,"364SA2200N"),
        
        _364SC2300N(3,"364SC2300N"),
        
        _364SC1501N(4,"364SC1501N"),
        
        _364SC0200N(5,"364SC0200N"),
        
        _364SE0003N(6,"364SE0003N"),
        
        _364SE1400N(7,"364SE1400N"),
        
        _364SF0001N(8,"364SF0001N"),
        
        _364SG0600N(9,"364SG0600N"),
        
        _364SH1100N(10,"364SH1100N"),
        
        _364SH0200N(11,"364SH0200N"),
        
        _364SI0800N(12,"364SI0800N"),
        
        _364SL0600N(13,"364SL0600N"),
        
        _364SM0705N(14,"364SM0705N"),
        
        _364SN0000N(15,"364SN0000N"),
        
        _364SN0004N(16,"364SN0004N"),
        
        _364SN0800N(17,"364SN0800N"),
        
        _364SX0106N(18,"364SX0106N"),
        
        _364SX0200N(19,"364SX0200N"),
        
        _364SX0204N(20,"364SX0204N"),
        
        _364SP0200N(21,"364SP0200N"),
        
        _364SP1700N(22,"364SP1700N"),
        
        _364SP2800N(23,"364SP2800N"),
        
        _364SP0807N(24,"364SP0807N"),
        
        _364SP0808N(25,"364SP0808N"),
        
        _364SP0809N(26,"364SP0809N"),
        
        _364SP0810N(27,"364SP0810N"),
        
        _364SP0811N(28,"364SP0811N"),
        
        _364SP0812N(29,"364SP0812N"),
        
        _364SP0813N(30,"364SP0813N"),
        
        _364SR0400N(31,"364SR0400N"),
        
        _364SR1300N(32,"364SR1300N"),
        
        _364SS0200N(33,"364SS0200N"),
        
        _364ST0500N(34,"364ST0500N"),
        
        _364SW0102N(35,"364SW0102N");
        
        private int code;
        private java.lang.String xmlValue;
        
        ClinicalNurseSpecialistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ClinicalNurseSpecialistHIPAA fromString(String str)
        {
            if (str.equals("364S00000N"))
                return _364S00000N;
            if (str.equals("364SA2100N"))
                return _364SA2100N;
            if (str.equals("364SA2200N"))
                return _364SA2200N;
            if (str.equals("364SC2300N"))
                return _364SC2300N;
            if (str.equals("364SC1501N"))
                return _364SC1501N;
            if (str.equals("364SC0200N"))
                return _364SC0200N;
            if (str.equals("364SE0003N"))
                return _364SE0003N;
            if (str.equals("364SE1400N"))
                return _364SE1400N;
            if (str.equals("364SF0001N"))
                return _364SF0001N;
            if (str.equals("364SG0600N"))
                return _364SG0600N;
            if (str.equals("364SH1100N"))
                return _364SH1100N;
            if (str.equals("364SH0200N"))
                return _364SH0200N;
            if (str.equals("364SI0800N"))
                return _364SI0800N;
            if (str.equals("364SL0600N"))
                return _364SL0600N;
            if (str.equals("364SM0705N"))
                return _364SM0705N;
            if (str.equals("364SN0000N"))
                return _364SN0000N;
            if (str.equals("364SN0004N"))
                return _364SN0004N;
            if (str.equals("364SN0800N"))
                return _364SN0800N;
            if (str.equals("364SX0106N"))
                return _364SX0106N;
            if (str.equals("364SX0200N"))
                return _364SX0200N;
            if (str.equals("364SX0204N"))
                return _364SX0204N;
            if (str.equals("364SP0200N"))
                return _364SP0200N;
            if (str.equals("364SP1700N"))
                return _364SP1700N;
            if (str.equals("364SP2800N"))
                return _364SP2800N;
            if (str.equals("364SP0807N"))
                return _364SP0807N;
            if (str.equals("364SP0808N"))
                return _364SP0808N;
            if (str.equals("364SP0809N"))
                return _364SP0809N;
            if (str.equals("364SP0810N"))
                return _364SP0810N;
            if (str.equals("364SP0811N"))
                return _364SP0811N;
            if (str.equals("364SP0812N"))
                return _364SP0812N;
            if (str.equals("364SP0813N"))
                return _364SP0813N;
            if (str.equals("364SR0400N"))
                return _364SR0400N;
            if (str.equals("364SR1300N"))
                return _364SR1300N;
            if (str.equals("364SS0200N"))
                return _364SS0200N;
            if (str.equals("364ST0500N"))
                return _364ST0500N;
            if (str.equals("364SW0102N"))
                return _364SW0102N;
		    return null;
        }
    }

	/**
	* specDomain: S13402 (C-0-T13129-A13130-A13363-S13402-cpt)
	*/
    public enum NursePractitionerHIPAA
    {
        
        _363L00000N(0,"363L00000N"),
        
        _363LA2100N(1,"363LA2100N"),
        
        _363LA2200N(2,"363LA2200N"),
        
        _363LC1500N(3,"363LC1500N"),
        
        _363LC0200N(4,"363LC0200N"),
        
        _363LF0000N(5,"363LF0000N"),
        
        _363LG0600N(6,"363LG0600N"),
        
        _363LN0000N(7,"363LN0000N"),
        
        _363LN0005N(8,"363LN0005N"),
        
        _363LX0001N(9,"363LX0001N"),
        
        _363LX0106N(10,"363LX0106N"),
        
        _363LP0200N(11,"363LP0200N"),
        
        _363LP0223N(12,"363LP0223N"),
        
        _363LP0222N(13,"363LP0222N"),
        
        _363LP1700N(14,"363LP1700N"),
        
        _363LP2300N(15,"363LP2300N"),
        
        _363LP0808N(16,"363LP0808N"),
        
        _363LS0200N(17,"363LS0200N"),
        
        _363LW0102N(18,"363LW0102N");
        
        private int code;
        private java.lang.String xmlValue;
        
        NursePractitionerHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NursePractitionerHIPAA fromString(String str)
        {
            if (str.equals("363L00000N"))
                return _363L00000N;
            if (str.equals("363LA2100N"))
                return _363LA2100N;
            if (str.equals("363LA2200N"))
                return _363LA2200N;
            if (str.equals("363LC1500N"))
                return _363LC1500N;
            if (str.equals("363LC0200N"))
                return _363LC0200N;
            if (str.equals("363LF0000N"))
                return _363LF0000N;
            if (str.equals("363LG0600N"))
                return _363LG0600N;
            if (str.equals("363LN0000N"))
                return _363LN0000N;
            if (str.equals("363LN0005N"))
                return _363LN0005N;
            if (str.equals("363LX0001N"))
                return _363LX0001N;
            if (str.equals("363LX0106N"))
                return _363LX0106N;
            if (str.equals("363LP0200N"))
                return _363LP0200N;
            if (str.equals("363LP0223N"))
                return _363LP0223N;
            if (str.equals("363LP0222N"))
                return _363LP0222N;
            if (str.equals("363LP1700N"))
                return _363LP1700N;
            if (str.equals("363LP2300N"))
                return _363LP2300N;
            if (str.equals("363LP0808N"))
                return _363LP0808N;
            if (str.equals("363LS0200N"))
                return _363LS0200N;
            if (str.equals("363LW0102N"))
                return _363LW0102N;
		    return null;
        }
    }

	/**
	* specDomain: S13422 (C-0-T13129-A13130-A13363-S13422-cpt)
	*/
    public enum PhysicianAssistantHIPAA
    {
        
        _363A00000N(0,"363A00000N"),
        
        _363AM0700N(1,"363AM0700N"),
        
        _363AS0400N(2,"363AS0400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicianAssistantHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicianAssistantHIPAA fromString(String str)
        {
            if (str.equals("363A00000N"))
                return _363A00000N;
            if (str.equals("363AM0700N"))
                return _363AM0700N;
            if (str.equals("363AS0400N"))
                return _363AS0400N;
		    return null;
        }
    }

	/**
	* specDomain: S13426 (C-0-T13129-A13130-A13425-S13426-cpt)
	*/
    public enum PhysicianAndOrOsteopathHIPAA
    {
        
        _203B00000N(0,"203B00000N"),
        
        _203BA0401N(1,"203BA0401N"),
        
        _203BA0000Y(2,"203BA0000Y"),
        
        _203BA0001N(3,"203BA0001N"),
        
        _203BA0002Y(4,"203BA0002Y"),
        
        _203BA0003Y(5,"203BA0003Y"),
        
        _203BA0501N(6,"203BA0501N"),
        
        _203BA0502N(7,"203BA0502N"),
        
        _203BA0100Y(8,"203BA0100Y"),
        
        _203BA0101Y(9,"203BA0101Y"),
        
        _203BA0503N(10,"203BA0503N"),
        
        _203BA0504N(11,"203BA0504N"),
        
        _203BA0200N(12,"203BA0200N"),
        
        _203BA0201Y(13,"203BA0201Y"),
        
        _203BA0202N(14,"203BA0202N"),
        
        _203BA0300Y(15,"203BA0300Y"),
        
        _203BB0000N(16,"203BB0000N"),
        
        _203BB0001Y(17,"203BB0001Y"),
        
        _203BB0100Y(18,"203BB0100Y"),
        
        _203BC0000Y(19,"203BC0000Y"),
        
        _203BC0001Y(20,"203BC0001Y"),
        
        _203BC0100Y(21,"203BC0100Y"),
        
        _203BC2500Y(22,"203BC2500Y"),
        
        _203BC0200Y(23,"203BC0200Y"),
        
        _203BC0201Y(24,"203BC0201Y"),
        
        _203BC0202Y(25,"203BC0202Y"),
        
        _203BC0203Y(26,"203BC0203Y"),
        
        _203BC0300Y(27,"203BC0300Y"),
        
        _203BC0500Y(28,"203BC0500Y"),
        
        _203BD0100Y(29,"203BD0100Y"),
        
        _203BD0101Y(30,"203BD0101Y"),
        
        _203BD0900Y(31,"203BD0900Y"),
        
        _203BD0901N(32,"203BD0901N"),
        
        _203BD0300N(33,"203BD0300N"),
        
        _203BE0004Y(34,"203BE0004Y"),
        
        _203BE0100Y(35,"203BE0100Y"),
        
        _203BE0101Y(36,"203BE0101Y"),
        
        _203BE0102Y(37,"203BE0102Y"),
        
        _203BF0100Y(38,"203BF0100Y"),
        
        _203BF0201Y(39,"203BF0201Y"),
        
        _203BF0202N(40,"203BF0202N"),
        
        _203BG0100Y(41,"203BG0100Y"),
        
        _203BG0000Y(42,"203BG0000Y"),
        
        _203BG0201Y(43,"203BG0201Y"),
        
        _203BG0202Y(44,"203BG0202Y"),
        
        _203BG0204Y(45,"203BG0204Y"),
        
        _203BG0203Y(46,"203BG0203Y"),
        
        _203BG0200Y(47,"203BG0200Y"),
        
        _203BG0300N(48,"203BG0300N"),
        
        _203BG0301Y(49,"203BG0301Y"),
        
        _203BG0302Y(50,"203BG0302Y"),
        
        _203BG0303Y(51,"203BG0303Y"),
        
        _203BG0400N(52,"203BG0400N"),
        
        _203BH0000Y(53,"203BH0000Y"),
        
        _203BH0003Y(54,"203BH0003Y"),
        
        _203BH0001Y(55,"203BH0001Y"),
        
        _203BH0002Y(56,"203BH0002Y"),
        
        _203BI0001N(57,"203BI0001N"),
        
        _203BI0002N(58,"203BI0002N"),
        
        _203BI0005N(59,"203BI0005N"),
        
        _203BI0006N(60,"203BI0006N"),
        
        _203BI0007N(61,"203BI0007N"),
        
        _203BI0003Y(62,"203BI0003Y"),
        
        _203BI0004Y(63,"203BI0004Y"),
        
        _203BI0100Y(64,"203BI0100Y"),
        
        _203BI0200Y(65,"203BI0200Y"),
        
        _203BI0400N(66,"203BI0400N"),
        
        _203BI0300Y(67,"203BI0300Y"),
        
        _203BL0000Y(68,"203BL0000Y"),
        
        _203BM0101Y(69,"203BM0101Y"),
        
        _203BM0200Y(70,"203BM0200Y"),
        
        _203BM0300Y(71,"203BM0300Y"),
        
        _203BN0001Y(72,"203BN0001Y"),
        
        _203BN0100Y(73,"203BN0100Y"),
        
        _203BN0200N(74,"203BN0200N"),
        
        _203BN0300Y(75,"203BN0300Y"),
        
        _203BN0400Y(76,"203BN0400Y"),
        
        _203BN0402Y(77,"203BN0402Y"),
        
        _203BN0500Y(78,"203BN0500Y"),
        
        _203BN0600Y(79,"203BN0600Y"),
        
        _203BN0700Y(80,"203BN0700Y"),
        
        _203BN0901Y(81,"203BN0901Y"),
        
        _203BN0902Y(82,"203BN0902Y"),
        
        _203BN0900Y(83,"203BN0900Y"),
        
        _203BN0903Y(84,"203BN0903Y"),
        
        _203BN0904Y(85,"203BN0904Y"),
        
        _203BX0000N(86,"203BX0000N"),
        
        _203BX0001Y(87,"203BX0001Y"),
        
        _203BX0100Y(88,"203BX0100Y"),
        
        _203BX0104Y(89,"203BX0104Y"),
        
        _203BX0105Y(90,"203BX0105Y"),
        
        _203BX0200Y(91,"203BX0200Y"),
        
        _203BX0201Y(92,"203BX0201Y"),
        
        _203BX0202Y(93,"203BX0202Y"),
        
        _203BX0300Y(94,"203BX0300Y"),
        
        _203BX0800N(95,"203BX0800N"),
        
        _203BX2100Y(96,"203BX2100Y"),
        
        _203BX0500Y(97,"203BX0500Y"),
        
        _203BX0900N(98,"203BX0900N"),
        
        _203BX0901N(99,"203BX0901N"),
        
        _203BX0600Y(100,"203BX0600Y"),
        
        _203BX0601N(101,"203BX0601N"),
        
        _203BP0001Y(102,"203BP0001Y"),
        
        _203BP2900N(103,"203BP2900N"),
        
        _203BP0100Y(104,"203BP0100Y"),
        
        _203BP0101Y(105,"203BP0101Y"),
        
        _203BP0102Y(106,"203BP0102Y"),
        
        _203BP0103Y(107,"203BP0103Y"),
        
        _203BP0104Y(108,"203BP0104Y"),
        
        _203BP0105Y(109,"203BP0105Y"),
        
        _203BP0107N(110,"203BP0107N"),
        
        _203BP0201Y(111,"203BP0201Y"),
        
        _203BP0202Y(112,"203BP0202Y"),
        
        _203BP0203Y(113,"203BP0203Y"),
        
        _203BP0204Y(114,"203BP0204Y"),
        
        _203BP0205Y(115,"203BP0205Y"),
        
        _203BP0206Y(116,"203BP0206Y"),
        
        _203BP0207Y(117,"203BP0207Y"),
        
        _203BP0208Y(118,"203BP0208Y"),
        
        _203BP0209Y(119,"203BP0209Y"),
        
        _203BP0220N(120,"203BP0220N"),
        
        _203BP0210Y(121,"203BP0210Y"),
        
        _203BP0211Y(122,"203BP0211Y"),
        
        _203BP0212Y(123,"203BP0212Y"),
        
        _203BP0213Y(124,"203BP0213Y"),
        
        _203BP0214Y(125,"203BP0214Y"),
        
        _203BP0215N(126,"203BP0215N"),
        
        _203BP0216Y(127,"203BP0216Y"),
        
        _203BP0200Y(128,"203BP0200Y"),
        
        _203BP2600N(129,"203BP2600N"),
        
        _203BP1200N(130,"203BP1200N"),
        
        _203BP0400Y(131,"203BP0400Y"),
        
        _203BP0500Y(132,"203BP0500Y"),
        
        _203BP0600Y(133,"203BP0600Y"),
        
        _203BP0800Y(134,"203BP0800Y"),
        
        _203BP0801Y(135,"203BP0801Y"),
        
        _203BP0802Y(136,"203BP0802Y"),
        
        _203BP0803Y(137,"203BP0803Y"),
        
        _203BP0804Y(138,"203BP0804Y"),
        
        _203BP0805Y(139,"203BP0805Y"),
        
        _203BP0806N(140,"203BP0806N"),
        
        _203BP1300N(141,"203BP1300N"),
        
        _203BP0901N(142,"203BP0901N"),
        
        _203BP0903Y(143,"203BP0903Y"),
        
        _203BP1001Y(144,"203BP1001Y"),
        
        _203BP1003Y(145,"203BP1003Y"),
        
        _203BR0001Y(146,"203BR0001Y"),
        
        _203BR0002Y(147,"203BR0002Y"),
        
        _203BR0205N(148,"203BR0205N"),
        
        _203BR0200Y(149,"203BR0200Y"),
        
        _203BR0201Y(150,"203BR0201Y"),
        
        _203BR0202Y(151,"203BR0202Y"),
        
        _203BR0203N(152,"203BR0203N"),
        
        _203BR0204N(153,"203BR0204N"),
        
        _203BR0300N(154,"203BR0300N"),
        
        _203BR0402Y(155,"203BR0402Y"),
        
        _203BR0500Y(156,"203BR0500Y"),
        
        _203BR0600N(157,"203BR0600N"),
        
        _203BR0700Y(158,"203BR0700Y"),
        
        _203BR0701Y(159,"203BR0701Y"),
        
        _203BS0000Y(160,"203BS0000Y"),
        
        _203BS0001Y(161,"203BS0001Y"),
        
        _203BS0002Y(162,"203BS0002Y"),
        
        _203BS0003Y(163,"203BS0003Y"),
        
        _203BS0004Y(164,"203BS0004Y"),
        
        _203BS0104N(165,"203BS0104N"),
        
        _203BS0133N(166,"203BS0133N"),
        
        _203BS0101Y(167,"203BS0101Y"),
        
        _203BS0123Y(168,"203BS0123Y"),
        
        _203BS0100Y(169,"203BS0100Y"),
        
        _203BS0129Y(170,"203BS0129Y"),
        
        _203BS0105Y(171,"203BS0105Y"),
        
        _203BS0106Y(172,"203BS0106Y"),
        
        _203BS0107Y(173,"203BS0107Y"),
        
        _203BS0108N(174,"203BS0108N"),
        
        _203BS0110Y(175,"203BS0110Y"),
        
        _203BS0111Y(176,"203BS0111Y"),
        
        _203BS0113Y(177,"203BS0113Y"),
        
        _203BS0114N(178,"203BS0114N"),
        
        _203BS0115N(179,"203BS0115N"),
        
        _203BS0116N(180,"203BS0116N"),
        
        _203BS0117N(181,"203BS0117N"),
        
        _203BS0119N(182,"203BS0119N"),
        
        _203BS0130Y(183,"203BS0130Y"),
        
        _203BS0120Y(184,"203BS0120Y"),
        
        _203BS0121Y(185,"203BS0121Y"),
        
        _203BS0122Y(186,"203BS0122Y"),
        
        _203BS0125Y(187,"203BS0125Y"),
        
        _203BS0126Y(188,"203BS0126Y"),
        
        _203BS0127N(189,"203BS0127N"),
        
        _203BS0128Y(190,"203BS0128Y"),
        
        _203BS0102Y(191,"203BS0102Y"),
        
        _203BT0100N(192,"203BT0100N"),
        
        _203BT0000Y(193,"203BT0000Y"),
        
        _203BT0002Y(194,"203BT0002Y"),
        
        _203BT0001Y(195,"203BT0001Y"),
        
        _203BU0001Y(196,"203BU0001Y"),
        
        _203BU0300Y(197,"203BU0300Y"),
        
        _203BU0100Y(198,"203BU0100Y");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicianAndOrOsteopathHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicianAndOrOsteopathHIPAA fromString(String str)
        {
            if (str.equals("203B00000N"))
                return _203B00000N;
            if (str.equals("203BA0401N"))
                return _203BA0401N;
            if (str.equals("203BA0000Y"))
                return _203BA0000Y;
            if (str.equals("203BA0001N"))
                return _203BA0001N;
            if (str.equals("203BA0002Y"))
                return _203BA0002Y;
            if (str.equals("203BA0003Y"))
                return _203BA0003Y;
            if (str.equals("203BA0501N"))
                return _203BA0501N;
            if (str.equals("203BA0502N"))
                return _203BA0502N;
            if (str.equals("203BA0100Y"))
                return _203BA0100Y;
            if (str.equals("203BA0101Y"))
                return _203BA0101Y;
            if (str.equals("203BA0503N"))
                return _203BA0503N;
            if (str.equals("203BA0504N"))
                return _203BA0504N;
            if (str.equals("203BA0200N"))
                return _203BA0200N;
            if (str.equals("203BA0201Y"))
                return _203BA0201Y;
            if (str.equals("203BA0202N"))
                return _203BA0202N;
            if (str.equals("203BA0300Y"))
                return _203BA0300Y;
            if (str.equals("203BB0000N"))
                return _203BB0000N;
            if (str.equals("203BB0001Y"))
                return _203BB0001Y;
            if (str.equals("203BB0100Y"))
                return _203BB0100Y;
            if (str.equals("203BC0000Y"))
                return _203BC0000Y;
            if (str.equals("203BC0001Y"))
                return _203BC0001Y;
            if (str.equals("203BC0100Y"))
                return _203BC0100Y;
            if (str.equals("203BC2500Y"))
                return _203BC2500Y;
            if (str.equals("203BC0200Y"))
                return _203BC0200Y;
            if (str.equals("203BC0201Y"))
                return _203BC0201Y;
            if (str.equals("203BC0202Y"))
                return _203BC0202Y;
            if (str.equals("203BC0203Y"))
                return _203BC0203Y;
            if (str.equals("203BC0300Y"))
                return _203BC0300Y;
            if (str.equals("203BC0500Y"))
                return _203BC0500Y;
            if (str.equals("203BD0100Y"))
                return _203BD0100Y;
            if (str.equals("203BD0101Y"))
                return _203BD0101Y;
            if (str.equals("203BD0900Y"))
                return _203BD0900Y;
            if (str.equals("203BD0901N"))
                return _203BD0901N;
            if (str.equals("203BD0300N"))
                return _203BD0300N;
            if (str.equals("203BE0004Y"))
                return _203BE0004Y;
            if (str.equals("203BE0100Y"))
                return _203BE0100Y;
            if (str.equals("203BE0101Y"))
                return _203BE0101Y;
            if (str.equals("203BE0102Y"))
                return _203BE0102Y;
            if (str.equals("203BF0100Y"))
                return _203BF0100Y;
            if (str.equals("203BF0201Y"))
                return _203BF0201Y;
            if (str.equals("203BF0202N"))
                return _203BF0202N;
            if (str.equals("203BG0100Y"))
                return _203BG0100Y;
            if (str.equals("203BG0000Y"))
                return _203BG0000Y;
            if (str.equals("203BG0201Y"))
                return _203BG0201Y;
            if (str.equals("203BG0202Y"))
                return _203BG0202Y;
            if (str.equals("203BG0204Y"))
                return _203BG0204Y;
            if (str.equals("203BG0203Y"))
                return _203BG0203Y;
            if (str.equals("203BG0200Y"))
                return _203BG0200Y;
            if (str.equals("203BG0300N"))
                return _203BG0300N;
            if (str.equals("203BG0301Y"))
                return _203BG0301Y;
            if (str.equals("203BG0302Y"))
                return _203BG0302Y;
            if (str.equals("203BG0303Y"))
                return _203BG0303Y;
            if (str.equals("203BG0400N"))
                return _203BG0400N;
            if (str.equals("203BH0000Y"))
                return _203BH0000Y;
            if (str.equals("203BH0003Y"))
                return _203BH0003Y;
            if (str.equals("203BH0001Y"))
                return _203BH0001Y;
            if (str.equals("203BH0002Y"))
                return _203BH0002Y;
            if (str.equals("203BI0001N"))
                return _203BI0001N;
            if (str.equals("203BI0002N"))
                return _203BI0002N;
            if (str.equals("203BI0005N"))
                return _203BI0005N;
            if (str.equals("203BI0006N"))
                return _203BI0006N;
            if (str.equals("203BI0007N"))
                return _203BI0007N;
            if (str.equals("203BI0003Y"))
                return _203BI0003Y;
            if (str.equals("203BI0004Y"))
                return _203BI0004Y;
            if (str.equals("203BI0100Y"))
                return _203BI0100Y;
            if (str.equals("203BI0200Y"))
                return _203BI0200Y;
            if (str.equals("203BI0400N"))
                return _203BI0400N;
            if (str.equals("203BI0300Y"))
                return _203BI0300Y;
            if (str.equals("203BL0000Y"))
                return _203BL0000Y;
            if (str.equals("203BM0101Y"))
                return _203BM0101Y;
            if (str.equals("203BM0200Y"))
                return _203BM0200Y;
            if (str.equals("203BM0300Y"))
                return _203BM0300Y;
            if (str.equals("203BN0001Y"))
                return _203BN0001Y;
            if (str.equals("203BN0100Y"))
                return _203BN0100Y;
            if (str.equals("203BN0200N"))
                return _203BN0200N;
            if (str.equals("203BN0300Y"))
                return _203BN0300Y;
            if (str.equals("203BN0400Y"))
                return _203BN0400Y;
            if (str.equals("203BN0402Y"))
                return _203BN0402Y;
            if (str.equals("203BN0500Y"))
                return _203BN0500Y;
            if (str.equals("203BN0600Y"))
                return _203BN0600Y;
            if (str.equals("203BN0700Y"))
                return _203BN0700Y;
            if (str.equals("203BN0901Y"))
                return _203BN0901Y;
            if (str.equals("203BN0902Y"))
                return _203BN0902Y;
            if (str.equals("203BN0900Y"))
                return _203BN0900Y;
            if (str.equals("203BN0903Y"))
                return _203BN0903Y;
            if (str.equals("203BN0904Y"))
                return _203BN0904Y;
            if (str.equals("203BX0000N"))
                return _203BX0000N;
            if (str.equals("203BX0001Y"))
                return _203BX0001Y;
            if (str.equals("203BX0100Y"))
                return _203BX0100Y;
            if (str.equals("203BX0104Y"))
                return _203BX0104Y;
            if (str.equals("203BX0105Y"))
                return _203BX0105Y;
            if (str.equals("203BX0200Y"))
                return _203BX0200Y;
            if (str.equals("203BX0201Y"))
                return _203BX0201Y;
            if (str.equals("203BX0202Y"))
                return _203BX0202Y;
            if (str.equals("203BX0300Y"))
                return _203BX0300Y;
            if (str.equals("203BX0800N"))
                return _203BX0800N;
            if (str.equals("203BX2100Y"))
                return _203BX2100Y;
            if (str.equals("203BX0500Y"))
                return _203BX0500Y;
            if (str.equals("203BX0900N"))
                return _203BX0900N;
            if (str.equals("203BX0901N"))
                return _203BX0901N;
            if (str.equals("203BX0600Y"))
                return _203BX0600Y;
            if (str.equals("203BX0601N"))
                return _203BX0601N;
            if (str.equals("203BP0001Y"))
                return _203BP0001Y;
            if (str.equals("203BP2900N"))
                return _203BP2900N;
            if (str.equals("203BP0100Y"))
                return _203BP0100Y;
            if (str.equals("203BP0101Y"))
                return _203BP0101Y;
            if (str.equals("203BP0102Y"))
                return _203BP0102Y;
            if (str.equals("203BP0103Y"))
                return _203BP0103Y;
            if (str.equals("203BP0104Y"))
                return _203BP0104Y;
            if (str.equals("203BP0105Y"))
                return _203BP0105Y;
            if (str.equals("203BP0107N"))
                return _203BP0107N;
            if (str.equals("203BP0201Y"))
                return _203BP0201Y;
            if (str.equals("203BP0202Y"))
                return _203BP0202Y;
            if (str.equals("203BP0203Y"))
                return _203BP0203Y;
            if (str.equals("203BP0204Y"))
                return _203BP0204Y;
            if (str.equals("203BP0205Y"))
                return _203BP0205Y;
            if (str.equals("203BP0206Y"))
                return _203BP0206Y;
            if (str.equals("203BP0207Y"))
                return _203BP0207Y;
            if (str.equals("203BP0208Y"))
                return _203BP0208Y;
            if (str.equals("203BP0209Y"))
                return _203BP0209Y;
            if (str.equals("203BP0220N"))
                return _203BP0220N;
            if (str.equals("203BP0210Y"))
                return _203BP0210Y;
            if (str.equals("203BP0211Y"))
                return _203BP0211Y;
            if (str.equals("203BP0212Y"))
                return _203BP0212Y;
            if (str.equals("203BP0213Y"))
                return _203BP0213Y;
            if (str.equals("203BP0214Y"))
                return _203BP0214Y;
            if (str.equals("203BP0215N"))
                return _203BP0215N;
            if (str.equals("203BP0216Y"))
                return _203BP0216Y;
            if (str.equals("203BP0200Y"))
                return _203BP0200Y;
            if (str.equals("203BP2600N"))
                return _203BP2600N;
            if (str.equals("203BP1200N"))
                return _203BP1200N;
            if (str.equals("203BP0400Y"))
                return _203BP0400Y;
            if (str.equals("203BP0500Y"))
                return _203BP0500Y;
            if (str.equals("203BP0600Y"))
                return _203BP0600Y;
            if (str.equals("203BP0800Y"))
                return _203BP0800Y;
            if (str.equals("203BP0801Y"))
                return _203BP0801Y;
            if (str.equals("203BP0802Y"))
                return _203BP0802Y;
            if (str.equals("203BP0803Y"))
                return _203BP0803Y;
            if (str.equals("203BP0804Y"))
                return _203BP0804Y;
            if (str.equals("203BP0805Y"))
                return _203BP0805Y;
            if (str.equals("203BP0806N"))
                return _203BP0806N;
            if (str.equals("203BP1300N"))
                return _203BP1300N;
            if (str.equals("203BP0901N"))
                return _203BP0901N;
            if (str.equals("203BP0903Y"))
                return _203BP0903Y;
            if (str.equals("203BP1001Y"))
                return _203BP1001Y;
            if (str.equals("203BP1003Y"))
                return _203BP1003Y;
            if (str.equals("203BR0001Y"))
                return _203BR0001Y;
            if (str.equals("203BR0002Y"))
                return _203BR0002Y;
            if (str.equals("203BR0205N"))
                return _203BR0205N;
            if (str.equals("203BR0200Y"))
                return _203BR0200Y;
            if (str.equals("203BR0201Y"))
                return _203BR0201Y;
            if (str.equals("203BR0202Y"))
                return _203BR0202Y;
            if (str.equals("203BR0203N"))
                return _203BR0203N;
            if (str.equals("203BR0204N"))
                return _203BR0204N;
            if (str.equals("203BR0300N"))
                return _203BR0300N;
            if (str.equals("203BR0402Y"))
                return _203BR0402Y;
            if (str.equals("203BR0500Y"))
                return _203BR0500Y;
            if (str.equals("203BR0600N"))
                return _203BR0600N;
            if (str.equals("203BR0700Y"))
                return _203BR0700Y;
            if (str.equals("203BR0701Y"))
                return _203BR0701Y;
            if (str.equals("203BS0000Y"))
                return _203BS0000Y;
            if (str.equals("203BS0001Y"))
                return _203BS0001Y;
            if (str.equals("203BS0002Y"))
                return _203BS0002Y;
            if (str.equals("203BS0003Y"))
                return _203BS0003Y;
            if (str.equals("203BS0004Y"))
                return _203BS0004Y;
            if (str.equals("203BS0104N"))
                return _203BS0104N;
            if (str.equals("203BS0133N"))
                return _203BS0133N;
            if (str.equals("203BS0101Y"))
                return _203BS0101Y;
            if (str.equals("203BS0123Y"))
                return _203BS0123Y;
            if (str.equals("203BS0100Y"))
                return _203BS0100Y;
            if (str.equals("203BS0129Y"))
                return _203BS0129Y;
            if (str.equals("203BS0105Y"))
                return _203BS0105Y;
            if (str.equals("203BS0106Y"))
                return _203BS0106Y;
            if (str.equals("203BS0107Y"))
                return _203BS0107Y;
            if (str.equals("203BS0108N"))
                return _203BS0108N;
            if (str.equals("203BS0110Y"))
                return _203BS0110Y;
            if (str.equals("203BS0111Y"))
                return _203BS0111Y;
            if (str.equals("203BS0113Y"))
                return _203BS0113Y;
            if (str.equals("203BS0114N"))
                return _203BS0114N;
            if (str.equals("203BS0115N"))
                return _203BS0115N;
            if (str.equals("203BS0116N"))
                return _203BS0116N;
            if (str.equals("203BS0117N"))
                return _203BS0117N;
            if (str.equals("203BS0119N"))
                return _203BS0119N;
            if (str.equals("203BS0130Y"))
                return _203BS0130Y;
            if (str.equals("203BS0120Y"))
                return _203BS0120Y;
            if (str.equals("203BS0121Y"))
                return _203BS0121Y;
            if (str.equals("203BS0122Y"))
                return _203BS0122Y;
            if (str.equals("203BS0125Y"))
                return _203BS0125Y;
            if (str.equals("203BS0126Y"))
                return _203BS0126Y;
            if (str.equals("203BS0127N"))
                return _203BS0127N;
            if (str.equals("203BS0128Y"))
                return _203BS0128Y;
            if (str.equals("203BS0102Y"))
                return _203BS0102Y;
            if (str.equals("203BT0100N"))
                return _203BT0100N;
            if (str.equals("203BT0000Y"))
                return _203BT0000Y;
            if (str.equals("203BT0002Y"))
                return _203BT0002Y;
            if (str.equals("203BT0001Y"))
                return _203BT0001Y;
            if (str.equals("203BU0001Y"))
                return _203BU0001Y;
            if (str.equals("203BU0300Y"))
                return _203BU0300Y;
            if (str.equals("203BU0100Y"))
                return _203BU0100Y;
		    return null;
        }
    }

	/**
	* specDomain: S13584 (C-0-T13129-A13130-A13582-S13584-cpt)
	*/
    public enum PodiatristHIPAA
    {
        
        _213E00000N(0,"213E00000N"),
        
        _213EG0000N(1,"213EG0000N"),
        
        _213EP0504N(2,"213EP0504N"),
        
        _213EP1101N(3,"213EP1101N"),
        
        _213ER0200N(4,"213ER0200N"),
        
        _213ES0000N(5,"213ES0000N"),
        
        _213ES0131N(6,"213ES0131N"),
        
        _213ES0103N(7,"213ES0103N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PodiatristHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PodiatristHIPAA fromString(String str)
        {
            if (str.equals("213E00000N"))
                return _213E00000N;
            if (str.equals("213EG0000N"))
                return _213EG0000N;
            if (str.equals("213EP0504N"))
                return _213EP0504N;
            if (str.equals("213EP1101N"))
                return _213EP1101N;
            if (str.equals("213ER0200N"))
                return _213ER0200N;
            if (str.equals("213ES0000N"))
                return _213ES0000N;
            if (str.equals("213ES0131N"))
                return _213ES0131N;
            if (str.equals("213ES0103N"))
                return _213ES0103N;
		    return null;
        }
    }

	/**
	* specDomain: S13598 (C-0-T13129-A13130-A13592-S13598-cpt)
	*/
    public enum OccupationalTherapistHIPAA
    {
        
        _225X00000N(0,"225X00000N"),
        
        _225XC0400N(1,"225XC0400N"),
        
        _225XE1200N(2,"225XE1200N"),
        
        _225XH1200N(3,"225XH1200N"),
        
        _225XH1300N(4,"225XH1300N"),
        
        _225XN1300N(5,"225XN1300N"),
        
        _225XP0200N(6,"225XP0200N"),
        
        _225XR0403N(7,"225XR0403N");
        
        private int code;
        private java.lang.String xmlValue;
        
        OccupationalTherapistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OccupationalTherapistHIPAA fromString(String str)
        {
            if (str.equals("225X00000N"))
                return _225X00000N;
            if (str.equals("225XC0400N"))
                return _225XC0400N;
            if (str.equals("225XE1200N"))
                return _225XE1200N;
            if (str.equals("225XH1200N"))
                return _225XH1200N;
            if (str.equals("225XH1300N"))
                return _225XH1300N;
            if (str.equals("225XN1300N"))
                return _225XN1300N;
            if (str.equals("225XP0200N"))
                return _225XP0200N;
            if (str.equals("225XR0403N"))
                return _225XR0403N;
		    return null;
        }
    }

	/**
	* specDomain: S13609 (C-0-T13129-A13130-A13592-S13609-cpt)
	*/
    public enum PhysicalTherapistHIPAA
    {
        
        _225100000N(0,"225100000N"),
        
        _2251C2600N(1,"2251C2600N"),
        
        _2251C0400N(2,"2251C0400N"),
        
        _2251E1300N(3,"2251E1300N"),
        
        _2251E1200N(4,"2251E1200N"),
        
        _2251G0304N(5,"2251G0304N"),
        
        _2251H1200N(6,"2251H1200N"),
        
        _2251H1300N(7,"2251H1300N"),
        
        _2251N0400N(8,"2251N0400N"),
        
        _2251X0800N(9,"2251X0800N"),
        
        _2251P0200N(10,"2251P0200N"),
        
        _2251S0007N(11,"2251S0007N");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicalTherapistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicalTherapistHIPAA fromString(String str)
        {
            if (str.equals("225100000N"))
                return _225100000N;
            if (str.equals("2251C2600N"))
                return _2251C2600N;
            if (str.equals("2251C0400N"))
                return _2251C0400N;
            if (str.equals("2251E1300N"))
                return _2251E1300N;
            if (str.equals("2251E1200N"))
                return _2251E1200N;
            if (str.equals("2251G0304N"))
                return _2251G0304N;
            if (str.equals("2251H1200N"))
                return _2251H1200N;
            if (str.equals("2251H1300N"))
                return _2251H1300N;
            if (str.equals("2251N0400N"))
                return _2251N0400N;
            if (str.equals("2251X0800N"))
                return _2251X0800N;
            if (str.equals("2251P0200N"))
                return _2251P0200N;
            if (str.equals("2251S0007N"))
                return _2251S0007N;
		    return null;
        }
    }

	/**
	* specDomain: S13625 (C-0-T13129-A13130-A13592-S13625-cpt)
	*/
    public enum RehabilitationCounselorHIPAA
    {
        
        _225C00000N(0,"225C00000N"),
        
        _225CA2400N(1,"225CA2400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RehabilitationCounselorHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RehabilitationCounselorHIPAA fromString(String str)
        {
            if (str.equals("225C00000N"))
                return _225C00000N;
            if (str.equals("225CA2400N"))
                return _225CA2400N;
		    return null;
        }
    }

	/**
	* abstDomain: A13631 (C-0-T13129-A13130-A13592-A13631-cpt)
	*/
    public enum RespiratoryAndOrRehabilitativeAndOrRestorativeSpecialistOrTechnologistHIPAA
    {
        
        _2255A2300N(0,"2255A2300N"),
        
        _2255R0406N(1,"2255R0406N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RespiratoryAndOrRehabilitativeAndOrRestorativeSpecialistOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RespiratoryAndOrRehabilitativeAndOrRestorativeSpecialistOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("2255A2300N"))
                return _2255A2300N;
            if (str.equals("2255R0406N"))
                return _2255R0406N;
		    return null;
        }
    }

	/**
	* specDomain: S13629 (C-0-T13129-A13130-A13592-S13629-cpt)
	*/
    public enum RespiratoryTherapistHIPAA
    {
        
        _225900000N(0,"225900000N"),
        
        _2259P1700N(1,"2259P1700N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RespiratoryTherapistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RespiratoryTherapistHIPAA fromString(String str)
        {
            if (str.equals("225900000N"))
                return _225900000N;
            if (str.equals("2259P1700N"))
                return _2259P1700N;
		    return null;
        }
    }

	/**
	* abstDomain: A13700 (C-0-T13129-A13130-A13634-S13635-A13637-A13700-cpt)
	*/
    public enum CardiologyTechnicianHIPAA
    {
        
        _246WC3000N(0,"246WC3000N"),
        
        _246WE0400N(1,"246WE0400N");
        
        private int code;
        private java.lang.String xmlValue;
        
        CardiologyTechnicianHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CardiologyTechnicianHIPAA fromString(String str)
        {
            if (str.equals("246WC3000N"))
                return _246WC3000N;
            if (str.equals("246WE0400N"))
                return _246WE0400N;
		    return null;
        }
    }

	/**
	* abstDomain: A13640 (C-0-T13129-A13130-A13634-A13640-cpt)
	*/
    public enum SpeechAndOrLanguageAndOrHearingServiceSpecialistOrTechnologistHIPAA
    {
        
        _2355A2700N(0,"2355A2700N"),
        
        _2355S0801N(1,"2355S0801N");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpeechAndOrLanguageAndOrHearingServiceSpecialistOrTechnologistHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpeechAndOrLanguageAndOrHearingServiceSpecialistOrTechnologistHIPAA fromString(String str)
        {
            if (str.equals("2355A2700N"))
                return _2355A2700N;
            if (str.equals("2355S0801N"))
                return _2355S0801N;
		    return null;
        }
    }

	/**
	* abstDomain: A13717 (C-0-T13129-A13715-A13716-A13717-cpt)
	*/
    public enum HealthcareProviderAgencyHIPAA
    {
        
        _2514C0400N(0,"2514C0400N"),
        
        _2514H0200N(1,"2514H0200N"),
        
        _2514H0201N(2,"2514H0201N"),
        
        _2514H0300N(3,"2514H0300N"),
        
        _2514N1101N(4,"2514N1101N"),
        
        _2514P0906N(5,"2514P0906N"),
        
        _2514V0001N(6,"2514V0001N");
        
        private int code;
        private java.lang.String xmlValue;
        
        HealthcareProviderAgencyHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static HealthcareProviderAgencyHIPAA fromString(String str)
        {
            if (str.equals("2514C0400N"))
                return _2514C0400N;
            if (str.equals("2514H0200N"))
                return _2514H0200N;
            if (str.equals("2514H0201N"))
                return _2514H0201N;
            if (str.equals("2514H0300N"))
                return _2514H0300N;
            if (str.equals("2514N1101N"))
                return _2514N1101N;
            if (str.equals("2514P0906N"))
                return _2514P0906N;
            if (str.equals("2514V0001N"))
                return _2514V0001N;
		    return null;
        }
    }

	/**
	* abstDomain: A13808 (C-0-T13129-A13715-A13808-cpt)
	*/
    public enum LaboratoryHIPAA
    {
        
        _291U00000N(0,"291U00000N"),
        
        _292200000N(1,"292200000N"),
        
        _293D00000N(2,"293D00000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        LaboratoryHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static LaboratoryHIPAA fromString(String str)
        {
            if (str.equals("291U00000N"))
                return _291U00000N;
            if (str.equals("292200000N"))
                return _292200000N;
            if (str.equals("293D00000N"))
                return _293D00000N;
		    return null;
        }
    }

	/**
	* abstDomain: A13812 (C-0-T13129-A13715-A13812-cpt)
	*/
    public enum ManagedCareOrganizationHIPAA
    {
        
        _302F00000N(0,"302F00000N"),
        
        _302R00000N(1,"302R00000N"),
        
        _305S00000N(2,"305S00000N"),
        
        _305R00000N(3,"305R00000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        ManagedCareOrganizationHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ManagedCareOrganizationHIPAA fromString(String str)
        {
            if (str.equals("302F00000N"))
                return _302F00000N;
            if (str.equals("302R00000N"))
                return _302R00000N;
            if (str.equals("305S00000N"))
                return _305S00000N;
            if (str.equals("305R00000N"))
                return _305R00000N;
		    return null;
        }
    }

	/**
	* specDomain: S13835 (C-0-T13129-A13715-A13833-S13835-cpt)
	*/
    public enum DurableMedicalEquipmentAndOrMedicalSupplySupplierHIPAA
    {
        
        _332B00000N(0,"332B00000N"),
        
        _332BC3200N(1,"332BC3200N"),
        
        _332BD1200N(2,"332BD1200N"),
        
        _332BN1400N(3,"332BN1400N"),
        
        _332BX2000N(4,"332BX2000N"),
        
        _332BP3500N(5,"332BP3500N");
        
        private int code;
        private java.lang.String xmlValue;
        
        DurableMedicalEquipmentAndOrMedicalSupplySupplierHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DurableMedicalEquipmentAndOrMedicalSupplySupplierHIPAA fromString(String str)
        {
            if (str.equals("332B00000N"))
                return _332B00000N;
            if (str.equals("332BC3200N"))
                return _332BC3200N;
            if (str.equals("332BD1200N"))
                return _332BD1200N;
            if (str.equals("332BN1400N"))
                return _332BN1400N;
            if (str.equals("332BX2000N"))
                return _332BX2000N;
            if (str.equals("332BP3500N"))
                return _332BP3500N;
		    return null;
        }
    }

	/**
	* abstDomain: A13850 (C-0-T13129-A13715-A13849-A13850-cpt)
	*/
    public enum AmbulanceHIPAA
    {
        
        _3416A0800N(0,"3416A0800N"),
        
        _3416L0300N(1,"3416L0300N"),
        
        _3416S0300N(2,"3416S0300N");
        
        private int code;
        private java.lang.String xmlValue;
        
        AmbulanceHIPAA(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AmbulanceHIPAA fromString(String str)
        {
            if (str.equals("3416A0800N"))
                return _3416A0800N;
            if (str.equals("3416L0300N"))
                return _3416L0300N;
            if (str.equals("3416S0300N"))
                return _3416S0300N;
		    return null;
        }
    }

	/**
	* vocSet: T11017 (C-0-T11017-cpt)
	*/
    public enum HtmlLinkType
    {
        
        alternate(0),
        
        appendix(1),
        
        bookmark(2),
        
        chapter(3),
        
        contents(4),
        
        copyright(5),
        
        glossary(6),
        
        help(7),
        
        index(8),
        
        next(9),
        
        prev(10),
        
        section(11),
        
        start(12),
        
        stylesheet(13),
        
        subsection(14);
        
        private int code;
        
        HtmlLinkType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HtmlLinkType fromString(String str)
        {
            if (str.equals("alternate"))
                return alternate;
            if (str.equals("appendix"))
                return appendix;
            if (str.equals("bookmark"))
                return bookmark;
            if (str.equals("chapter"))
                return chapter;
            if (str.equals("contents"))
                return contents;
            if (str.equals("copyright"))
                return copyright;
            if (str.equals("glossary"))
                return glossary;
            if (str.equals("help"))
                return help;
            if (str.equals("index"))
                return index;
            if (str.equals("next"))
                return next;
            if (str.equals("prev"))
                return prev;
            if (str.equals("section"))
                return section;
            if (str.equals("start"))
                return start;
            if (str.equals("stylesheet"))
                return stylesheet;
            if (str.equals("subsection"))
                return subsection;
		    return null;
        }
    }

	/**
	* vocSet: T17385 (C-0-T17385-cpt)
	*/
    public enum IntegrityCheckAlgorithm
    {
        
        SHA_x002D_1(0,"SHA-1"),
        
        SHA_x002D_256(1,"SHA-256");
        
        private int code;
        private java.lang.String xmlValue;
        
        IntegrityCheckAlgorithm(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static IntegrityCheckAlgorithm fromString(String str)
        {
            if (str.equals("SHA-1"))
                return SHA_x002D_1;
            if (str.equals("SHA-256"))
                return SHA_x002D_256;
		    return null;
        }
    }

	/**
	* vocSet: T12249 (C-0-T12249-cpt)
	*/
    public enum LanguageAbilityMode
    {
        
        ESGN(0),
        
        ESP(1),
        
        EWR(2),
        
        RSGN(3),
        
        RSP(4),
        
        RWR(5);
        
        private int code;
        
        LanguageAbilityMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LanguageAbilityMode fromString(String str)
        {
            if (str.equals("ESGN"))
                return ESGN;
            if (str.equals("ESP"))
                return ESP;
            if (str.equals("EWR"))
                return EWR;
            if (str.equals("RSGN"))
                return RSGN;
            if (str.equals("RSP"))
                return RSP;
            if (str.equals("RWR"))
                return RWR;
		    return null;
        }
    }

	/**
	* vocSet: T12199 (C-0-T12199-cpt)
	*/
    public enum LanguageAbilityProficiency
    {
        
        E(0),
        
        F(1),
        
        G(2),
        
        P(3);
        
        private int code;
        
        LanguageAbilityProficiency(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LanguageAbilityProficiency fromString(String str)
        {
            if (str.equals("E"))
                return E;
            if (str.equals("F"))
                return F;
            if (str.equals("G"))
                return G;
            if (str.equals("P"))
                return P;
		    return null;
        }
    }

	/**
	* specDomain: S22193 (C-0-T220-S22193-cpt)
	*/
    public enum Homeless
    {
        
        HL(0),
        
        M(1),
        
        T(2);
        
        private int code;
        
        Homeless(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Homeless fromString(String str)
        {
            if (str.equals("HL"))
                return HL;
            if (str.equals("M"))
                return M;
            if (str.equals("T"))
                return T;
		    return null;
        }
    }

	/**
	* specDomain: S10189 (C-0-T220-S10189-cpt)
	*/
    public enum Institution
    {
        
        I(0),
        
        X(1),
        
        G(2),
        
        N(3),
        
        CS(4);
        
        private int code;
        
        Institution(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Institution fromString(String str)
        {
            if (str.equals("I"))
                return I;
            if (str.equals("X"))
                return X;
            if (str.equals("G"))
                return G;
            if (str.equals("N"))
                return N;
            if (str.equals("CS"))
                return CS;
		    return null;
        }
    }

	/**
	* specDomain: S22190 (C-0-T220-S22190-cpt)
	*/
    public enum PrivateResidence
    {
        
        PR(0),
        
        H(1),
        
        R(2),
        
        SL(3);
        
        private int code;
        
        PrivateResidence(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PrivateResidence fromString(String str)
        {
            if (str.equals("PR"))
                return PR;
            if (str.equals("H"))
                return H;
            if (str.equals("R"))
                return R;
            if (str.equals("SL"))
                return SL;
		    return null;
        }
    }

	/**
	* vocSet: T10975 (C-0-T10975-cpt)
	*/
    public enum LocalMarkupIgnore
    {
        
        all(0),
        
        markup(1);
        
        private int code;
        
        LocalMarkupIgnore(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LocalMarkupIgnore fromString(String str)
        {
            if (str.equals("all"))
                return all;
            if (str.equals("markup"))
                return markup;
		    return null;
        }
    }

	/**
	* vocSet: T10893 (C-0-T10893-cpt)
	*/
    public enum LocalRemoteControlState
    {
        
        L(0),
        
        R(1);
        
        private int code;
        
        LocalRemoteControlState(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LocalRemoteControlState fromString(String str)
        {
            if (str.equals("L"))
                return L;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* vocSet: T10045 (C-0-T10045-cpt)
	*/
    public enum MDFAttributeType
    {
        
        ADDR(0),
        
        CD(1),
        
        COM(2),
        
        DTTM(3),
        
        DESC(4),
        
        EXPR(5),
        
        FRC(6),
        
        TIME(7),
        
        ID(8),
        
        IND(9),
        
        NM(10),
        
        NBR(11),
        
        PHON(12),
        
        QTY(13),
        
        TXT(14),
        
        TMR(15),
        
        VALUE(16);
        
        private int code;
        
        MDFAttributeType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MDFAttributeType fromString(String str)
        {
            if (str.equals("ADDR"))
                return ADDR;
            if (str.equals("CD"))
                return CD;
            if (str.equals("COM"))
                return COM;
            if (str.equals("DTTM"))
                return DTTM;
            if (str.equals("DESC"))
                return DESC;
            if (str.equals("EXPR"))
                return EXPR;
            if (str.equals("FRC"))
                return FRC;
            if (str.equals("TIME"))
                return TIME;
            if (str.equals("ID"))
                return ID;
            if (str.equals("IND"))
                return IND;
            if (str.equals("NM"))
                return NM;
            if (str.equals("NBR"))
                return NBR;
            if (str.equals("PHON"))
                return PHON;
            if (str.equals("QTY"))
                return QTY;
            if (str.equals("TXT"))
                return TXT;
            if (str.equals("TMR"))
                return TMR;
            if (str.equals("VALUE"))
                return VALUE;
		    return null;
        }
    }

	/**
	* vocSet: T10029 (C-0-T10029-cpt)
	*/
    public enum MDFSubjectAreaPrefix
    {
        
        COI(0),
        
        DIM(1),
        
        RIM(2),
        
        STW(3);
        
        private int code;
        
        MDFSubjectAreaPrefix(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MDFSubjectAreaPrefix fromString(String str)
        {
            if (str.equals("COI"))
                return COI;
            if (str.equals("DIM"))
                return DIM;
            if (str.equals("RIM"))
                return RIM;
            if (str.equals("STW"))
                return STW;
		    return null;
        }
    }

	/**
	* specDomain: S15993 (C-0-T15992-S15993-cpt)
	*/
    public enum ManagedParticipationStatusNormal
    {
        
        normal(0),
        
        active(1),
        
        cancelled(2),
        
        completed(3),
        
        pending(4);
        
        private int code;
        
        ManagedParticipationStatusNormal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ManagedParticipationStatusNormal fromString(String str)
        {
            if (str.equals("normal"))
                return normal;
            if (str.equals("active"))
                return active;
            if (str.equals("cancelled"))
                return cancelled;
            if (str.equals("completed"))
                return completed;
            if (str.equals("pending"))
                return pending;
		    return null;
        }
    }

	/**
	* vocSet: T11052 (C-0-T11052-cpt)
	*/
    public enum MapRelationship
    {
        
        BT(0),
        
        E(1),
        
        NT(2);
        
        private int code;
        
        MapRelationship(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MapRelationship fromString(String str)
        {
            if (str.equals("BT"))
                return BT;
            if (str.equals("E"))
                return E;
            if (str.equals("NT"))
                return NT;
		    return null;
        }
    }

	/**
	* abstDomain: A14568 (C-0-T19651-A14411-A14412-A14568-cpt)
	*/
    public enum GasDrugForm
    {
        
        GASINHL(0);
        
        private int code;
        
        GasDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GasDrugForm fromString(String str)
        {
            if (str.equals("GASINHL"))
                return GASINHL;
		    return null;
        }
    }

	/**
	* specDomain: S14551 (C-0-T19651-A14411-A14412-A14545-S14551-cpt)
	*/
    public enum AerosolDrugForm
    {
        
        AER(0),
        
        BAINHL(1),
        
        INHLSOL(2),
        
        MDINHL(3),
        
        NASSPRY(4);
        
        private int code;
        
        AerosolDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AerosolDrugForm fromString(String str)
        {
            if (str.equals("AER"))
                return AER;
            if (str.equals("BAINHL"))
                return BAINHL;
            if (str.equals("INHLSOL"))
                return INHLSOL;
            if (str.equals("MDINHL"))
                return MDINHL;
            if (str.equals("NASSPRY"))
                return NASSPRY;
		    return null;
        }
    }

	/**
	* specDomain: S14549 (C-0-T19651-A14411-A14412-A14545-S14546-S14549-cpt)
	*/
    public enum VaginalFoam
    {
        
        VAGFOAM(0),
        
        VAGFOAMAPL(1);
        
        private int code;
        
        VaginalFoam(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaginalFoam fromString(String str)
        {
            if (str.equals("VAGFOAM"))
                return VAGFOAM;
            if (str.equals("VAGFOAMAPL"))
                return VAGFOAMAPL;
		    return null;
        }
    }

	/**
	* specDomain: S14560 (C-0-T19651-A14411-A14412-A14559-S14560-cpt)
	*/
    public enum InhalantDrugForm
    {
        
        INHL(0),
        
        BAINHLPWD(1),
        
        INHLPWD(2),
        
        MDINHLPWD(3),
        
        NASINHL(4),
        
        ORINHL(5);
        
        private int code;
        
        InhalantDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InhalantDrugForm fromString(String str)
        {
            if (str.equals("INHL"))
                return INHL;
            if (str.equals("BAINHLPWD"))
                return BAINHLPWD;
            if (str.equals("INHLPWD"))
                return INHLPWD;
            if (str.equals("MDINHLPWD"))
                return MDINHLPWD;
            if (str.equals("NASINHL"))
                return NASINHL;
            if (str.equals("ORINHL"))
                return ORINHL;
		    return null;
        }
    }

	/**
	* specDomain: S14414 (C-0-T19651-A14411-A14412-A14413-S14414-cpt)
	*/
    public enum LiquidCleanser
    {
        
        LIQCLN(0),
        
        LIQSOAP(1),
        
        SHMP(2);
        
        private int code;
        
        LiquidCleanser(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LiquidCleanser fromString(String str)
        {
            if (str.equals("LIQCLN"))
                return LIQCLN;
            if (str.equals("LIQSOAP"))
                return LIQSOAP;
            if (str.equals("SHMP"))
                return SHMP;
		    return null;
        }
    }

	/**
	* specDomain: S14417 (C-0-T19651-A14411-A14412-A14413-S14417-cpt)
	*/
    public enum OilDrugForm
    {
        
        OIL(0),
        
        TOPOIL(1);
        
        private int code;
        
        OilDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OilDrugForm fromString(String str)
        {
            if (str.equals("OIL"))
                return OIL;
            if (str.equals("TOPOIL"))
                return TOPOIL;
		    return null;
        }
    }

	/**
	* specDomain: S14420 (C-0-T19651-A14411-A14412-A14413-S14419-S14420-cpt)
	*/
    public enum DropsDrugForm
    {
        
        DROP(0),
        
        NDROP(1),
        
        OPDROP(2),
        
        ORDROP(3),
        
        OTDROP(4);
        
        private int code;
        
        DropsDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static DropsDrugForm fromString(String str)
        {
            if (str.equals("DROP"))
                return DROP;
            if (str.equals("NDROP"))
                return NDROP;
            if (str.equals("OPDROP"))
                return OPDROP;
            if (str.equals("ORDROP"))
                return ORDROP;
            if (str.equals("OTDROP"))
                return OTDROP;
		    return null;
        }
    }

	/**
	* specDomain: S14427 (C-0-T19651-A14411-A14412-A14413-S14419-S14427-cpt)
	*/
    public enum IrrigationSolution
    {
        
        IRSOL(0),
        
        DOUCHE(1),
        
        ENEMA(2),
        
        OPIRSOL(3);
        
        private int code;
        
        IrrigationSolution(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IrrigationSolution fromString(String str)
        {
            if (str.equals("IRSOL"))
                return IRSOL;
            if (str.equals("DOUCHE"))
                return DOUCHE;
            if (str.equals("ENEMA"))
                return ENEMA;
            if (str.equals("OPIRSOL"))
                return OPIRSOL;
		    return null;
        }
    }

	/**
	* specDomain: S14431 (C-0-T19651-A14411-A14412-A14413-S14419-S14431-cpt)
	*/
    public enum OralSolution
    {
        
        ORALSOL(0),
        
        ELIXIR(1),
        
        RINSE(2),
        
        ORDROP(3),
        
        SYRUP(4);
        
        private int code;
        
        OralSolution(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OralSolution fromString(String str)
        {
            if (str.equals("ORALSOL"))
                return ORALSOL;
            if (str.equals("ELIXIR"))
                return ELIXIR;
            if (str.equals("RINSE"))
                return RINSE;
            if (str.equals("ORDROP"))
                return ORDROP;
            if (str.equals("SYRUP"))
                return SYRUP;
		    return null;
        }
    }

	/**
	* specDomain: S14437 (C-0-T19651-A14411-A14412-A14413-S14419-S14437-cpt)
	*/
    public enum TopicalSolution
    {
        
        TOPSOL(0),
        
        LIN(1),
        
        MUCTOPSOL(2),
        
        TINC(3);
        
        private int code;
        
        TopicalSolution(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TopicalSolution fromString(String str)
        {
            if (str.equals("TOPSOL"))
                return TOPSOL;
            if (str.equals("LIN"))
                return LIN;
            if (str.equals("MUCTOPSOL"))
                return MUCTOPSOL;
            if (str.equals("TINC"))
                return TINC;
		    return null;
        }
    }

	/**
	* specDomain: S14473 (C-0-T19651-A14411-A14412-A14463-S14466-S14473-cpt)
	*/
    public enum VaginalCream
    {
        
        VAGCRM(0),
        
        VAGCRMAPL(1);
        
        private int code;
        
        VaginalCream(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaginalCream fromString(String str)
        {
            if (str.equals("VAGCRM"))
                return VAGCRM;
            if (str.equals("VAGCRMAPL"))
                return VAGCRMAPL;
		    return null;
        }
    }

	/**
	* specDomain: S14464 (C-0-T19651-A14411-A14412-A14463-S14464-cpt)
	*/
    public enum LotionDrugForm
    {
        
        LTN(0),
        
        TOPLTN(1);
        
        private int code;
        
        LotionDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LotionDrugForm fromString(String str)
        {
            if (str.equals("LTN"))
                return LTN;
            if (str.equals("TOPLTN"))
                return TOPLTN;
		    return null;
        }
    }

	/**
	* specDomain: S14482 (C-0-T19651-A14411-A14412-A14463-S14475-S14482-cpt)
	*/
    public enum VaginalOintment
    {
        
        VAGOINT(0),
        
        VAGOINTAPL(1);
        
        private int code;
        
        VaginalOintment(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaginalOintment fromString(String str)
        {
            if (str.equals("VAGOINT"))
                return VAGOINT;
            if (str.equals("VAGOINTAPL"))
                return VAGOINTAPL;
		    return null;
        }
    }

	/**
	* specDomain: S14449 (C-0-T19651-A14411-A14412-A14441-S14442-S14449-cpt)
	*/
    public enum VaginalGel
    {
        
        VAGGEL(0),
        
        VGELAPL(1);
        
        private int code;
        
        VaginalGel(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaginalGel fromString(String str)
        {
            if (str.equals("VAGGEL"))
                return VAGGEL;
            if (str.equals("VGELAPL"))
                return VGELAPL;
		    return null;
        }
    }

	/**
	* specDomain: S14451 (C-0-T19651-A14411-A14412-A14441-S14451-cpt)
	*/
    public enum PasteDrugForm
    {
        
        PASTE(0),
        
        PUD(1),
        
        TPASTE(2);
        
        private int code;
        
        PasteDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PasteDrugForm fromString(String str)
        {
            if (str.equals("PASTE"))
                return PASTE;
            if (str.equals("PUD"))
                return PUD;
            if (str.equals("TPASTE"))
                return TPASTE;
		    return null;
        }
    }

	/**
	* specDomain: S14458 (C-0-T19651-A14411-A14412-A14441-S14454-S14457-S14458-cpt)
	*/
    public enum ExtendedReleaseSuspension
    {
        
        ERSUSP(0),
        
        ERSUSP12(1),
        
        ERSUSP24(2);
        
        private int code;
        
        ExtendedReleaseSuspension(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExtendedReleaseSuspension fromString(String str)
        {
            if (str.equals("ERSUSP"))
                return ERSUSP;
            if (str.equals("ERSUSP12"))
                return ERSUSP12;
            if (str.equals("ERSUSP24"))
                return ERSUSP24;
		    return null;
        }
    }

	/**
	* specDomain: S14486 (C-0-T19651-A14411-A14412-A14484-S14485-S14486-cpt)
	*/
    public enum BarSoapDrugForm
    {
        
        BARSOAP(0),
        
        MEDBAR(1);
        
        private int code;
        
        BarSoapDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BarSoapDrugForm fromString(String str)
        {
            if (str.equals("BARSOAP"))
                return BARSOAP;
            if (str.equals("MEDBAR"))
                return MEDBAR;
		    return null;
        }
    }

	/**
	* specDomain: S14497 (C-0-T19651-A14411-A14412-A14484-S14497-cpt)
	*/
    public enum PadDrugForm
    {
        
        PAD(0),
        
        MEDPAD(1);
        
        private int code;
        
        PadDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PadDrugForm fromString(String str)
        {
            if (str.equals("PAD"))
                return PAD;
            if (str.equals("MEDPAD"))
                return MEDPAD;
		    return null;
        }
    }

	/**
	* specDomain: S14500 (C-0-T19651-A14411-A14412-A14484-S14499-S14500-cpt)
	*/
    public enum TransdermalPatch
    {
        
        TPATCH(0),
        
        TPATH16(1),
        
        TPATH24(2),
        
        TPATH72(3),
        
        TPATH2WK(4),
        
        TPATHWK(5);
        
        private int code;
        
        TransdermalPatch(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TransdermalPatch fromString(String str)
        {
            if (str.equals("TPATCH"))
                return TPATCH;
            if (str.equals("TPATH16"))
                return TPATH16;
            if (str.equals("TPATH24"))
                return TPATH24;
            if (str.equals("TPATH72"))
                return TPATH72;
            if (str.equals("TPATH2WK"))
                return TPATH2WK;
            if (str.equals("TPATHWK"))
                return TPATHWK;
		    return null;
        }
    }

	/**
	* specDomain: S14509 (C-0-T19651-A14411-A14412-A14484-S14506-S14507-S14508-S14509-cpt)
	*/
    public enum EntericCoatedCapsule
    {
        
        ENTCAP(0),
        
        ERENTCAP(1);
        
        private int code;
        
        EntericCoatedCapsule(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntericCoatedCapsule fromString(String str)
        {
            if (str.equals("ENTCAP"))
                return ENTCAP;
            if (str.equals("ERENTCAP"))
                return ERENTCAP;
		    return null;
        }
    }

	/**
	* specDomain: S14511 (C-0-T19651-A14411-A14412-A14484-S14506-S14507-S14508-S14511-cpt)
	*/
    public enum ExtendedReleaseCapsule
    {
        
        ERCAP(0),
        
        ERCAP12(1),
        
        ERCAP24(2),
        
        ERECCAP(3);
        
        private int code;
        
        ExtendedReleaseCapsule(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExtendedReleaseCapsule fromString(String str)
        {
            if (str.equals("ERCAP"))
                return ERCAP;
            if (str.equals("ERCAP12"))
                return ERCAP12;
            if (str.equals("ERCAP24"))
                return ERCAP24;
            if (str.equals("ERECCAP"))
                return ERECCAP;
		    return null;
        }
    }

	/**
	* specDomain: S14518 (C-0-T19651-A14411-A14412-A14484-S14506-S14515-S14516-S14518-cpt)
	*/
    public enum BuccalTablet
    {
        
        BUCTAB(0),
        
        SRBUCTAB(1);
        
        private int code;
        
        BuccalTablet(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BuccalTablet fromString(String str)
        {
            if (str.equals("BUCTAB"))
                return BUCTAB;
            if (str.equals("SRBUCTAB"))
                return SRBUCTAB;
		    return null;
        }
    }

	/**
	* specDomain: S14524 (C-0-T19651-A14411-A14412-A14484-S14506-S14515-S14516-S14524-cpt)
	*/
    public enum EntericCoatedTablet
    {
        
        ECTAB(0),
        
        ERECTAB(1);
        
        private int code;
        
        EntericCoatedTablet(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EntericCoatedTablet fromString(String str)
        {
            if (str.equals("ECTAB"))
                return ECTAB;
            if (str.equals("ERECTAB"))
                return ERECTAB;
		    return null;
        }
    }

	/**
	* specDomain: S14526 (C-0-T19651-A14411-A14412-A14484-S14506-S14515-S14516-S14526-cpt)
	*/
    public enum ExtendedReleaseTablet
    {
        
        ERTAB(0),
        
        ERTAB12(1),
        
        ERTAB24(2),
        
        ERECTAB(3);
        
        private int code;
        
        ExtendedReleaseTablet(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExtendedReleaseTablet fromString(String str)
        {
            if (str.equals("ERTAB"))
                return ERTAB;
            if (str.equals("ERTAB12"))
                return ERTAB12;
            if (str.equals("ERTAB24"))
                return ERTAB24;
            if (str.equals("ERECTAB"))
                return ERECTAB;
		    return null;
        }
    }

	/**
	* specDomain: S14535 (C-0-T19651-A14411-A14412-A14484-S14534-S14535-cpt)
	*/
    public enum TopicalPowder
    {
        
        TOPPWD(0),
        
        RECPWD(1),
        
        VAGPWD(2);
        
        private int code;
        
        TopicalPowder(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TopicalPowder fromString(String str)
        {
            if (str.equals("TOPPWD"))
                return TOPPWD;
            if (str.equals("RECPWD"))
                return RECPWD;
            if (str.equals("VAGPWD"))
                return VAGPWD;
		    return null;
        }
    }

	/**
	* specDomain: S14538 (C-0-T19651-A14411-A14412-A14484-S14538-cpt)
	*/
    public enum SuppositoryDrugForm
    {
        
        SUPP(0),
        
        RECSUPP(1),
        
        URETHSUPP(2),
        
        VAGSUPP(3);
        
        private int code;
        
        SuppositoryDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SuppositoryDrugForm fromString(String str)
        {
            if (str.equals("SUPP"))
                return SUPP;
            if (str.equals("RECSUPP"))
                return RECSUPP;
            if (str.equals("URETHSUPP"))
                return URETHSUPP;
            if (str.equals("VAGSUPP"))
                return VAGSUPP;
		    return null;
        }
    }

	/**
	* specDomain: S14542 (C-0-T19651-A14411-A14412-A14484-S14542-cpt)
	*/
    public enum SwabDrugForm
    {
        
        SWAB(0),
        
        MEDSWAB(1);
        
        private int code;
        
        SwabDrugForm(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SwabDrugForm fromString(String str)
        {
            if (str.equals("SWAB"))
                return SWAB;
            if (str.equals("MEDSWAB"))
                return MEDSWAB;
		    return null;
        }
    }

	/**
	* vocSet: T10076 (C-0-T10076-cpt)
	*/
    public enum MdfHmdMetSourceType
    {
        
        C(0),
        
        D(1),
        
        N(2),
        
        U(3),
        
        R(4),
        
        I(5);
        
        private int code;
        
        MdfHmdMetSourceType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MdfHmdMetSourceType fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("D"))
                return D;
            if (str.equals("N"))
                return N;
            if (str.equals("U"))
                return U;
            if (str.equals("R"))
                return R;
            if (str.equals("I"))
                return I;
		    return null;
        }
    }

	/**
	* vocSet: T10069 (C-0-T10069-cpt)
	*/
    public enum MdfHmdRowType
    {
        
        assoc(0,"assoc"),
        
        attr(1,"attr"),
        
        item(2,"item"),
        
        hmd(3,"hmd"),
        
        _class(4,"class"),
        
        stc(5,"stc");
        
        private int code;
        private java.lang.String xmlValue;
        
        MdfHmdRowType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MdfHmdRowType fromString(String str)
        {
            if (str.equals("assoc"))
                return assoc;
            if (str.equals("attr"))
                return attr;
            if (str.equals("item"))
                return item;
            if (str.equals("hmd"))
                return hmd;
            if (str.equals("class"))
                return _class;
            if (str.equals("stc"))
                return stc;
		    return null;
        }
    }

	/**
	* vocSet: T10063 (C-0-T10063-cpt)
	*/
    public enum MdfRmimRowType
    {
        
        assoc(0,"assoc"),
        
        attr(1,"attr"),
        
        _class(2,"class"),
        
        rmim(3,"rmim"),
        
        stc(4,"stc");
        
        private int code;
        private java.lang.String xmlValue;
        
        MdfRmimRowType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MdfRmimRowType fromString(String str)
        {
            if (str.equals("assoc"))
                return assoc;
            if (str.equals("attr"))
                return attr;
            if (str.equals("class"))
                return _class;
            if (str.equals("rmim"))
                return rmim;
            if (str.equals("stc"))
                return stc;
		    return null;
        }
    }

	/**
	* abstDomain: A14832 (C-0-T14824-A14832-cpt)
	*/
    public enum ApplicationMediaType
    {
        
        application_x002F_dicom(0,"application/dicom"),
        
        application_x002F_msword(1,"application/msword"),
        
        application_x002F_pdf(2,"application/pdf");
        
        private int code;
        private java.lang.String xmlValue;
        
        ApplicationMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ApplicationMediaType fromString(String str)
        {
            if (str.equals("application/dicom"))
                return application_x002F_dicom;
            if (str.equals("application/msword"))
                return application_x002F_msword;
            if (str.equals("application/pdf"))
                return application_x002F_pdf;
		    return null;
        }
    }

	/**
	* abstDomain: A14835 (C-0-T14824-A14835-cpt)
	*/
    public enum AudioMediaType
    {
        
        audio_x002F_basic(0,"audio/basic"),
        
        audio_x002F_k32adpcm(1,"audio/k32adpcm"),
        
        audio_x002F_mpeg(2,"audio/mpeg");
        
        private int code;
        private java.lang.String xmlValue;
        
        AudioMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AudioMediaType fromString(String str)
        {
            if (str.equals("audio/basic"))
                return audio_x002F_basic;
            if (str.equals("audio/k32adpcm"))
                return audio_x002F_k32adpcm;
            if (str.equals("audio/mpeg"))
                return audio_x002F_mpeg;
		    return null;
        }
    }

	/**
	* abstDomain: A14839 (C-0-T14824-A14839-cpt)
	*/
    public enum ImageMediaType
    {
        
        image_x002F_g3fax(0,"image/g3fax"),
        
        image_x002F_gif(1,"image/gif"),
        
        image_x002F_jpeg(2,"image/jpeg"),
        
        image_x002F_png(3,"image/png"),
        
        image_x002F_tiff(4,"image/tiff");
        
        private int code;
        private java.lang.String xmlValue;
        
        ImageMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ImageMediaType fromString(String str)
        {
            if (str.equals("image/g3fax"))
                return image_x002F_g3fax;
            if (str.equals("image/gif"))
                return image_x002F_gif;
            if (str.equals("image/jpeg"))
                return image_x002F_jpeg;
            if (str.equals("image/png"))
                return image_x002F_png;
            if (str.equals("image/tiff"))
                return image_x002F_tiff;
		    return null;
        }
    }

	/**
	* abstDomain: A14848 (C-0-T14824-A14848-cpt)
	*/
    public enum ModelMediaType
    {
        
        model_x002F_vrml(0,"model/vrml");
        
        private int code;
        private java.lang.String xmlValue;
        
        ModelMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ModelMediaType fromString(String str)
        {
            if (str.equals("model/vrml"))
                return model_x002F_vrml;
		    return null;
        }
    }

	/**
	* abstDomain: A14850 (C-0-T14824-A14850-cpt)
	*/
    public enum MultipartMediaType
    {
        
        multipart_x002F_x_x002D_hl7_x002D_cda_x002D_level_x002D_one(0,"multipart/x-hl7-cda-level-one");
        
        private int code;
        private java.lang.String xmlValue;
        
        MultipartMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MultipartMediaType fromString(String str)
        {
            if (str.equals("multipart/x-hl7-cda-level-one"))
                return multipart_x002F_x_x002D_hl7_x002D_cda_x002D_level_x002D_one;
		    return null;
        }
    }

	/**
	* abstDomain: A14825 (C-0-T14824-A14825-cpt)
	*/
    public enum TextMediaType
    {
        
        text_x002F_x_x002D_hl7_x002D_ft(0,"text/x-hl7-ft"),
        
        text_x002F_html(1,"text/html"),
        
        text_x002F_plain(2,"text/plain"),
        
        text_x002F_rtf(3,"text/rtf"),
        
        text_x002F_sgml(4,"text/sgml"),
        
        text_x002F_xml(5,"text/xml");
        
        private int code;
        private java.lang.String xmlValue;
        
        TextMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TextMediaType fromString(String str)
        {
            if (str.equals("text/x-hl7-ft"))
                return text_x002F_x_x002D_hl7_x002D_ft;
            if (str.equals("text/html"))
                return text_x002F_html;
            if (str.equals("text/plain"))
                return text_x002F_plain;
            if (str.equals("text/rtf"))
                return text_x002F_rtf;
            if (str.equals("text/sgml"))
                return text_x002F_sgml;
            if (str.equals("text/xml"))
                return text_x002F_xml;
		    return null;
        }
    }

	/**
	* abstDomain: A14845 (C-0-T14824-A14845-cpt)
	*/
    public enum VideoMediaType
    {
        
        video_x002F_mpeg(0,"video/mpeg"),
        
        video_x002F_x_x002D_avi(1,"video/x-avi");
        
        private int code;
        private java.lang.String xmlValue;
        
        VideoMediaType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static VideoMediaType fromString(String str)
        {
            if (str.equals("video/mpeg"))
                return video_x002F_mpeg;
            if (str.equals("video/x-avi"))
                return video_x002F_x_x002D_avi;
		    return null;
        }
    }

	/**
	* vocSet: T357 (C-0-T357-cpt)
	*/
    public enum MessageCondition
    {
        
        _207(0,"207"),
        
        _206(1,"206"),
        
        _102(2,"102"),
        
        _205(3,"205"),
        
        _0(4,"0"),
        
        _101(5,"101"),
        
        _100(6,"100"),
        
        _103(7,"103"),
        
        _204(8,"204"),
        
        _202(9,"202"),
        
        _203(10,"203"),
        
        _201(11,"201"),
        
        _200(12,"200");
        
        private int code;
        private java.lang.String xmlValue;
        
        MessageCondition(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MessageCondition fromString(String str)
        {
            if (str.equals("207"))
                return _207;
            if (str.equals("206"))
                return _206;
            if (str.equals("102"))
                return _102;
            if (str.equals("205"))
                return _205;
            if (str.equals("0"))
                return _0;
            if (str.equals("101"))
                return _101;
            if (str.equals("100"))
                return _100;
            if (str.equals("103"))
                return _103;
            if (str.equals("204"))
                return _204;
            if (str.equals("202"))
                return _202;
            if (str.equals("203"))
                return _203;
            if (str.equals("201"))
                return _201;
            if (str.equals("200"))
                return _200;
		    return null;
        }
    }

	/**
	* vocSet: T19581 (C-0-T19581-cpt)
	*/
    public enum MessageWaitingPriority
    {
        
        H(0),
        
        L(1),
        
        M(2);
        
        private int code;
        
        MessageWaitingPriority(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MessageWaitingPriority fromString(String str)
        {
            if (str.equals("H"))
                return H;
            if (str.equals("L"))
                return L;
            if (str.equals("M"))
                return M;
		    return null;
        }
    }

	/**
	* vocSet: T395 (C-0-T395-cpt)
	*/
    public enum ModifyIndicator
    {
        
        M(0),
        
        N(1);
        
        private int code;
        
        ModifyIndicator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ModifyIndicator fromString(String str)
        {
            if (str.equals("M"))
                return M;
            if (str.equals("N"))
                return N;
		    return null;
        }
    }

	/**
	* specDomain: S10616 (C-0-T10609-S10610-S10616-cpt)
	*/
    public enum Other
    {
        
        OTH(0),
        
        NINF(1),
        
        PINF(2);
        
        private int code;
        
        Other(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Other fromString(String str)
        {
            if (str.equals("OTH"))
                return OTH;
            if (str.equals("NINF"))
                return NINF;
            if (str.equals("PINF"))
                return PINF;
		    return null;
        }
    }

	/**
	* specDomain: S10614 (C-0-T10609-S10610-S10612-S10614-cpt)
	*/
    public enum AskedButUnknown
    {
        
        ASKU(0),
        
        NAV(1);
        
        private int code;
        
        AskedButUnknown(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AskedButUnknown fromString(String str)
        {
            if (str.equals("ASKU"))
                return ASKU;
            if (str.equals("NAV"))
                return NAV;
		    return null;
        }
    }

	/**
	* abstDomain: A10214 (C-0-T78-A10214-cpt)
	*/
    public enum ObservationInterpretationChange
    {
        
        B(0),
        
        D(1),
        
        U(2),
        
        W(3);
        
        private int code;
        
        ObservationInterpretationChange(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationChange fromString(String str)
        {
            if (str.equals("B"))
                return B;
            if (str.equals("D"))
                return D;
            if (str.equals("U"))
                return U;
            if (str.equals("W"))
                return W;
		    return null;
        }
    }

	/**
	* abstDomain: A10225 (C-0-T78-A10225-cpt)
	*/
    public enum ObservationInterpretationExceptions
    {
        
        _x003E_(0,">"),
        
        _x003C_(1,"<");
        
        private int code;
        private java.lang.String xmlValue;
        
        ObservationInterpretationExceptions(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ObservationInterpretationExceptions fromString(String str)
        {
            if (str.equals(">"))
                return _x003E_;
            if (str.equals("<"))
                return _x003C_;
		    return null;
        }
    }

	/**
	* specDomain: S10211 (C-0-T78-A10206-S10208-S10211-cpt)
	*/
    public enum ObservationInterpretationNormalityAlert
    {
        
        AA(0),
        
        HH(1),
        
        LL(2);
        
        private int code;
        
        ObservationInterpretationNormalityAlert(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationNormalityAlert fromString(String str)
        {
            if (str.equals("AA"))
                return AA;
            if (str.equals("HH"))
                return HH;
            if (str.equals("LL"))
                return LL;
		    return null;
        }
    }

	/**
	* specDomain: S10210 (C-0-T78-A10206-S10208-S10210-cpt)
	*/
    public enum ObservationInterpretationNormalityHigh
    {
        
        H(0),
        
        HH(1);
        
        private int code;
        
        ObservationInterpretationNormalityHigh(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationNormalityHigh fromString(String str)
        {
            if (str.equals("H"))
                return H;
            if (str.equals("HH"))
                return HH;
		    return null;
        }
    }

	/**
	* specDomain: S10209 (C-0-T78-A10206-S10208-S10209-cpt)
	*/
    public enum ObservationInterpretationNormalityLow
    {
        
        L(0),
        
        LL(1);
        
        private int code;
        
        ObservationInterpretationNormalityLow(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationNormalityLow fromString(String str)
        {
            if (str.equals("L"))
                return L;
            if (str.equals("LL"))
                return LL;
		    return null;
        }
    }

	/**
	* specDomain: S21634 (C-0-T78-A19759-S21634-cpt)
	*/
    public enum ObservationInterpretationOustsideThreshold
    {
        
        EX(0),
        
        HX(1),
        
        LX(2);
        
        private int code;
        
        ObservationInterpretationOustsideThreshold(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationOustsideThreshold fromString(String str)
        {
            if (str.equals("EX"))
                return EX;
            if (str.equals("HX"))
                return HX;
            if (str.equals("LX"))
                return LX;
		    return null;
        }
    }

	/**
	* abstDomain: A10219 (C-0-T78-A10219-cpt)
	*/
    public enum ObservationInterpretationSusceptibility
    {
        
        I(0),
        
        MS(1),
        
        R(2),
        
        S(3),
        
        VS(4);
        
        private int code;
        
        ObservationInterpretationSusceptibility(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationInterpretationSusceptibility fromString(String str)
        {
            if (str.equals("I"))
                return I;
            if (str.equals("MS"))
                return MS;
            if (str.equals("R"))
                return R;
            if (str.equals("S"))
                return S;
            if (str.equals("VS"))
                return VS;
		    return null;
        }
    }

	/**
	* specDomain: S19992 (C-0-T14079-A19378-S19992-cpt)
	*/
    public enum AlgorithmicDecisionObservationMethod
    {
        
        ALGM(0),
        
        BYCL(1);
        
        private int code;
        
        AlgorithmicDecisionObservationMethod(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AlgorithmicDecisionObservationMethod fromString(String str)
        {
            if (str.equals("ALGM"))
                return ALGM;
            if (str.equals("BYCL"))
                return BYCL;
		    return null;
        }
    }

	/**
	* abstDomain: A19707 (C-0-T14079-A19707-cpt)
	*/
    public enum VerificationMethod
    {
        
        VDOC(0),
        
        VTOKEN(1),
        
        VREG(2),
        
        VVOICE(3);
        
        private int code;
        
        VerificationMethod(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VerificationMethod fromString(String str)
        {
            if (str.equals("VDOC"))
                return VDOC;
            if (str.equals("VTOKEN"))
                return VTOKEN;
            if (str.equals("VREG"))
                return VREG;
            if (str.equals("VVOICE"))
                return VVOICE;
		    return null;
        }
    }

	/**
	* specDomain: S21445 (C-0-T14079-S21445-cpt)
	*/
    public enum _0272
    {
        
        _0272(0,"0272"),
        
        _0245(1,"0245"),
        
        _0246(2,"0246");
        
        private int code;
        private java.lang.String xmlValue;
        
        _0272(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static _0272 fromString(String str)
        {
            if (str.equals("0272"))
                return _0272;
            if (str.equals("0245"))
                return _0245;
            if (str.equals("0246"))
                return _0246;
		    return null;
        }
    }

	/**
	* specDomain: S21449 (C-0-T14079-S21449-cpt)
	*/
    public enum _0275a
    {
        
        _0275a(0,"0275a");
        
        private int code;
        private java.lang.String xmlValue;
        
        _0275a(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static _0275a fromString(String str)
        {
            if (str.equals("0275a"))
                return _0275a;
		    return null;
        }
    }

	/**
	* specDomain: S21454 (C-0-T14079-S21454-cpt)
	*/
    public enum _0280
    {
        
        _0280(0,"0280"),
        
        _0278(1,"0278"),
        
        _0240(2,"0240"),
        
        _0241(3,"0241"),
        
        _0242(4,"0242"),
        
        _0279(5,"0279"),
        
        _0275(6,"0275"),
        
        _0272(7,"0272"),
        
        _0275a(8,"0275a"),
        
        _0277(9,"0277"),
        
        _0276(10,"0276"),
        
        _0273(11,"0273"),
        
        _0274(12,"0274");
        
        private int code;
        private java.lang.String xmlValue;
        
        _0280(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static _0280 fromString(String str)
        {
            if (str.equals("0280"))
                return _0280;
            if (str.equals("0278"))
                return _0278;
            if (str.equals("0240"))
                return _0240;
            if (str.equals("0241"))
                return _0241;
            if (str.equals("0242"))
                return _0242;
            if (str.equals("0279"))
                return _0279;
            if (str.equals("0275"))
                return _0275;
            if (str.equals("0272"))
                return _0272;
            if (str.equals("0275a"))
                return _0275a;
            if (str.equals("0277"))
                return _0277;
            if (str.equals("0276"))
                return _0276;
            if (str.equals("0273"))
                return _0273;
            if (str.equals("0274"))
                return _0274;
		    return null;
        }
    }

	/**
	* abstDomain: A19380 (C-0-T14079-A19380-cpt)
	*/
    public enum x_AdverseEventCausalityAssessmentMethods
    {
        
        ALGM(0),
        
        BYCL(1),
        
        GINT(2);
        
        private int code;
        
        x_AdverseEventCausalityAssessmentMethods(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_AdverseEventCausalityAssessmentMethods fromString(String str)
        {
            if (str.equals("ALGM"))
                return ALGM;
            if (str.equals("BYCL"))
                return BYCL;
            if (str.equals("GINT"))
                return GINT;
		    return null;
        }
    }

	/**
	* specDomain: S22316 (C-0-T16614-A19918-A19924-S22316-cpt)
	*/
    public enum ObservationAssetValue
    {
        
        ASSET(0),
        
        ANNUITY(1),
        
        PROP(2),
        
        RETACCT(3),
        
        TRUST(4);
        
        private int code;
        
        ObservationAssetValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationAssetValue fromString(String str)
        {
            if (str.equals("ASSET"))
                return ASSET;
            if (str.equals("ANNUITY"))
                return ANNUITY;
            if (str.equals("PROP"))
                return PROP;
            if (str.equals("RETACCT"))
                return RETACCT;
            if (str.equals("TRUST"))
                return TRUST;
		    return null;
        }
    }

	/**
	* specDomain: S22307 (C-0-T16614-A19918-A19924-S22307-cpt)
	*/
    public enum ObservationIncomeValue
    {
        
        INCOME(0),
        
        CHILD(1),
        
        DISABL(2),
        
        SUPPLE(3),
        
        INVEST(4),
        
        PAY(5),
        
        RETIRE(6),
        
        SPOUSAL(7),
        
        TAX(8);
        
        private int code;
        
        ObservationIncomeValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationIncomeValue fromString(String str)
        {
            if (str.equals("INCOME"))
                return INCOME;
            if (str.equals("CHILD"))
                return CHILD;
            if (str.equals("DISABL"))
                return DISABL;
            if (str.equals("SUPPLE"))
                return SUPPLE;
            if (str.equals("INVEST"))
                return INVEST;
            if (str.equals("PAY"))
                return PAY;
            if (str.equals("RETIRE"))
                return RETIRE;
            if (str.equals("SPOUSAL"))
                return SPOUSAL;
            if (str.equals("TAX"))
                return TAX;
		    return null;
        }
    }

	/**
	* specDomain: S22321 (C-0-T16614-A19918-A19924-S22321-cpt)
	*/
    public enum ObservationLivingExpenseValue
    {
        
        LIVEXP(0),
        
        CLOTH(1),
        
        FOOD(2),
        
        HEALTH(3),
        
        HOUSE(4),
        
        LEGAL(5),
        
        MORTG(6),
        
        RENT(7),
        
        SUNDRY(8),
        
        TRANS(9),
        
        UTIL(10);
        
        private int code;
        
        ObservationLivingExpenseValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationLivingExpenseValue fromString(String str)
        {
            if (str.equals("LIVEXP"))
                return LIVEXP;
            if (str.equals("CLOTH"))
                return CLOTH;
            if (str.equals("FOOD"))
                return FOOD;
            if (str.equals("HEALTH"))
                return HEALTH;
            if (str.equals("HOUSE"))
                return HOUSE;
            if (str.equals("LEGAL"))
                return LEGAL;
            if (str.equals("MORTG"))
                return MORTG;
            if (str.equals("RENT"))
                return RENT;
            if (str.equals("SUNDRY"))
                return SUNDRY;
            if (str.equals("TRANS"))
                return TRANS;
            if (str.equals("UTIL"))
                return UTIL;
		    return null;
        }
    }

	/**
	* specDomain: S22295 (C-0-T16614-A19918-S22295-cpt)
	*/
    public enum ObservationEligibilityIndicatorValue
    {
        
        ELSTAT(0),
        
        ADOPT(1),
        
        BTHCERT(2),
        
        CCOC(3),
        
        DRLIC(4),
        
        FOSTER(5),
        
        MRGCERT(6),
        
        MIL(7),
        
        PASSPORT(8),
        
        MEMBER(9),
        
        STUDENRL(10);
        
        private int code;
        
        ObservationEligibilityIndicatorValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationEligibilityIndicatorValue fromString(String str)
        {
            if (str.equals("ELSTAT"))
                return ELSTAT;
            if (str.equals("ADOPT"))
                return ADOPT;
            if (str.equals("BTHCERT"))
                return BTHCERT;
            if (str.equals("CCOC"))
                return CCOC;
            if (str.equals("DRLIC"))
                return DRLIC;
            if (str.equals("FOSTER"))
                return FOSTER;
            if (str.equals("MRGCERT"))
                return MRGCERT;
            if (str.equals("MIL"))
                return MIL;
            if (str.equals("PASSPORT"))
                return PASSPORT;
            if (str.equals("MEMBER"))
                return MEMBER;
            if (str.equals("STUDENRL"))
                return STUDENRL;
		    return null;
        }
    }

	/**
	* specDomain: S22290 (C-0-T16614-A19918-S22290-cpt)
	*/
    public enum ObservationHealthStatusValue
    {
        
        HLSTAT(0),
        
        IVDRG(1),
        
        DISABLE(2),
        
        DRUG(3),
        
        PGNT(4);
        
        private int code;
        
        ObservationHealthStatusValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationHealthStatusValue fromString(String str)
        {
            if (str.equals("HLSTAT"))
                return HLSTAT;
            if (str.equals("IVDRG"))
                return IVDRG;
            if (str.equals("DISABLE"))
                return DISABLE;
            if (str.equals("DRUG"))
                return DRUG;
            if (str.equals("PGNT"))
                return PGNT;
		    return null;
        }
    }

	/**
	* specDomain: S22286 (C-0-T16614-A19918-S22286-cpt)
	*/
    public enum ObservationLivingDependencyValue
    {
        
        LIVDEP(0),
        
        RELDEP(1),
        
        SPSDEP(2),
        
        URELDEP(3);
        
        private int code;
        
        ObservationLivingDependencyValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationLivingDependencyValue fromString(String str)
        {
            if (str.equals("LIVDEP"))
                return LIVDEP;
            if (str.equals("RELDEP"))
                return RELDEP;
            if (str.equals("SPSDEP"))
                return SPSDEP;
            if (str.equals("URELDEP"))
                return URELDEP;
		    return null;
        }
    }

	/**
	* specDomain: S22277 (C-0-T16614-A19918-S22277-cpt)
	*/
    public enum ObservationLivingSituationValue
    {
        
        LIVSIT(0),
        
        ALONE(1),
        
        DEPCHD(2),
        
        DEPSPS(3),
        
        DEPYGCHD(4),
        
        FAM(5),
        
        RELAT(6),
        
        SPS(7),
        
        UNREL(8);
        
        private int code;
        
        ObservationLivingSituationValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationLivingSituationValue fromString(String str)
        {
            if (str.equals("LIVSIT"))
                return LIVSIT;
            if (str.equals("ALONE"))
                return ALONE;
            if (str.equals("DEPCHD"))
                return DEPCHD;
            if (str.equals("DEPSPS"))
                return DEPSPS;
            if (str.equals("DEPYGCHD"))
                return DEPYGCHD;
            if (str.equals("FAM"))
                return FAM;
            if (str.equals("RELAT"))
                return RELAT;
            if (str.equals("SPS"))
                return SPS;
            if (str.equals("UNREL"))
                return UNREL;
		    return null;
        }
    }

	/**
	* specDomain: S22269 (C-0-T16614-A19918-S22269-cpt)
	*/
    public enum ObservationSocioEconomicStatusValue
    {
        
        SOECSTAT(0),
        
        ABUSE(1),
        
        HMLESS(2),
        
        ILGIM(3),
        
        INCAR(4),
        
        PROB(5),
        
        REFUG(6),
        
        UNEMPL(7);
        
        private int code;
        
        ObservationSocioEconomicStatusValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ObservationSocioEconomicStatusValue fromString(String str)
        {
            if (str.equals("SOECSTAT"))
                return SOECSTAT;
            if (str.equals("ABUSE"))
                return ABUSE;
            if (str.equals("HMLESS"))
                return HMLESS;
            if (str.equals("ILGIM"))
                return ILGIM;
            if (str.equals("INCAR"))
                return INCAR;
            if (str.equals("PROB"))
                return PROB;
            if (str.equals("REFUG"))
                return REFUG;
            if (str.equals("UNEMPL"))
                return UNEMPL;
		    return null;
        }
    }

	/**
	* abstDomain: A19731 (C-0-T16614-A19729-A19731-cpt)
	*/
    public enum OtherIndicationValue
    {
        
        _DiagnosisValue(0),
        
        _IndicationValue(1),
        
        _SymptomValue(2);
        
        private int code;
        
        OtherIndicationValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OtherIndicationValue fromString(String str)
        {
            if (str.equals("_DiagnosisValue"))
                return _DiagnosisValue;
            if (str.equals("_IndicationValue"))
                return _IndicationValue;
            if (str.equals("_SymptomValue"))
                return _SymptomValue;
		    return null;
        }
    }

	/**
	* abstDomain: A18120 (C-0-T16614-A18120-cpt)
	*/
    public enum PartialCompletionScale
    {
        
        G(0),
        
        LE(1),
        
        ME(2),
        
        MI(3),
        
        N(4),
        
        S(5);
        
        private int code;
        
        PartialCompletionScale(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PartialCompletionScale fromString(String str)
        {
            if (str.equals("G"))
                return G;
            if (str.equals("LE"))
                return LE;
            if (str.equals("ME"))
                return ME;
            if (str.equals("MI"))
                return MI;
            if (str.equals("N"))
                return N;
            if (str.equals("S"))
                return S;
		    return null;
        }
    }

	/**
	* abstDomain: A16643 (C-0-T16614-A16643-cpt)
	*/
    public enum SeverityObservation
    {
        
        H(0),
        
        L(1),
        
        M(2);
        
        private int code;
        
        SeverityObservation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SeverityObservation fromString(String str)
        {
            if (str.equals("H"))
                return H;
            if (str.equals("L"))
                return L;
            if (str.equals("M"))
                return M;
		    return null;
        }
    }

	/**
	* abstDomain: A19793 (C-0-T16614-A19793-cpt)
	*/
    public enum VerificationOutcomeValue
    {
        
        ACTPEND(0),
        
        ACT(1),
        
        ELG(2),
        
        INACT(3),
        
        INPNDUPD(4),
        
        INPNDINV(5),
        
        NELG(6);
        
        private int code;
        
        VerificationOutcomeValue(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VerificationOutcomeValue fromString(String str)
        {
            if (str.equals("ACTPEND"))
                return ACTPEND;
            if (str.equals("ACT"))
                return ACT;
            if (str.equals("ELG"))
                return ELG;
            if (str.equals("INACT"))
                return INACT;
            if (str.equals("INPNDUPD"))
                return INPNDUPD;
            if (str.equals("INPNDINV"))
                return INPNDINV;
            if (str.equals("NELG"))
                return NELG;
		    return null;
        }
    }

	/**
	* vocSet: T204 (C-0-T204-cpt)
	*/
    public enum OrganizationNameType
    {
        
        A(0),
        
        L(1),
        
        ST(2);
        
        private int code;
        
        OrganizationNameType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OrganizationNameType fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("L"))
                return L;
            if (str.equals("ST"))
                return ST;
		    return null;
        }
    }

	/**
	* specDomain: S10763 (C-0-T10759-S10763-cpt)
	*/
    public enum ParameterizedDataTypeBag
    {
        
        BAG_x003C_T_x003E_(0,"BAG<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeBag(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeBag fromString(String str)
        {
            if (str.equals("BAG<T>"))
                return BAG_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10762 (C-0-T10759-S10762-cpt)
	*/
    public enum ParameterizedDataTypeSequence
    {
        
        LIST_x003C_T_x003E_(0,"LIST<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeSequence(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeSequence fromString(String str)
        {
            if (str.equals("LIST<T>"))
                return LIST_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10766 (C-0-T10759-S10761-S10766-cpt)
	*/
    public enum ParameterizedDataTypeEventRelatedInterval
    {
        
        EIVL_x003C_T_x003E_(0,"EIVL<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeEventRelatedInterval(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeEventRelatedInterval fromString(String str)
        {
            if (str.equals("EIVL<T>"))
                return EIVL_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10764 (C-0-T10759-S10761-S10764-cpt)
	*/
    public enum ParameterizedDataTypeInterval
    {
        
        IVL_x003C_T_x003E_(0,"IVL<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeInterval(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeInterval fromString(String str)
        {
            if (str.equals("IVL<T>"))
                return IVL_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10765 (C-0-T10759-S10761-S10765-cpt)
	*/
    public enum ParameterizedDataTypePeriodicInterval
    {
        
        PIVL_x003C_T_x003E_(0,"PIVL<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypePeriodicInterval(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypePeriodicInterval fromString(String str)
        {
            if (str.equals("PIVL<T>"))
                return PIVL_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10767 (C-0-T10759-S10760-S10767-cpt)
	*/
    public enum ParameterizedDataTypeAnnotated
    {
        
        ANT_x003C_T_x003E_(0,"ANT<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeAnnotated(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeAnnotated fromString(String str)
        {
            if (str.equals("ANT<T>"))
                return ANT_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10768 (C-0-T10759-S10760-S10768-cpt)
	*/
    public enum ParameterizedDataTypeHistorical
    {
        
        HXIT_x003C_T_x003E_(0,"HXIT<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeHistorical(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeHistorical fromString(String str)
        {
            if (str.equals("HXIT<T>"))
                return HXIT_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10771 (C-0-T10759-S10760-S10771-cpt)
	*/
    public enum ParameterizedDataTypeNonParametricProbabilityDistribution
    {
        
        NPPD_x003C_T_x003E_(0,"NPPD<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeNonParametricProbabilityDistribution(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeNonParametricProbabilityDistribution fromString(String str)
        {
            if (str.equals("NPPD<T>"))
                return NPPD_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10772 (C-0-T10759-S10760-S10772-cpt)
	*/
    public enum ParameterizedDataTypeParametricProbabilityDistribution
    {
        
        PPD_x003C_T_x003E_(0,"PPD<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeParametricProbabilityDistribution(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeParametricProbabilityDistribution fromString(String str)
        {
            if (str.equals("PPD<T>"))
                return PPD_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10769 (C-0-T10759-S10760-S10769-cpt)
	*/
    public enum ParameterizedDataTypeUncertainValueNarrative
    {
        
        UVN_x003C_T_x003E_(0,"UVN<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeUncertainValueNarrative(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeUncertainValueNarrative fromString(String str)
        {
            if (str.equals("UVN<T>"))
                return UVN_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* specDomain: S10770 (C-0-T10759-S10760-S10770-cpt)
	*/
    public enum ParameterizedDataTypeUncertainValueProbabilistic
    {
        
        UVP_x003C_T_x003E_(0,"UVP<T>");
        
        private int code;
        private java.lang.String xmlValue;
        
        ParameterizedDataTypeUncertainValueProbabilistic(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ParameterizedDataTypeUncertainValueProbabilistic fromString(String str)
        {
            if (str.equals("UVP<T>"))
                return UVP_x003C_T_x003E_;
		    return null;
        }
    }

	/**
	* abstDomain: A19906 (C-0-T10267-A19903-A19906-cpt)
	*/
    public enum PayorParticipationFunction
    {
        
        CLMADJ(0),
        
        ENROLL(1),
        
        FFSMGT(2),
        
        MCMGT(3),
        
        PROVMGT(4),
        
        UMGT(5);
        
        private int code;
        
        PayorParticipationFunction(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PayorParticipationFunction fromString(String str)
        {
            if (str.equals("CLMADJ"))
                return CLMADJ;
            if (str.equals("ENROLL"))
                return ENROLL;
            if (str.equals("FFSMGT"))
                return FFSMGT;
            if (str.equals("MCMGT"))
                return MCMGT;
            if (str.equals("PROVMGT"))
                return PROVMGT;
            if (str.equals("UMGT"))
                return UMGT;
		    return null;
        }
    }

	/**
	* abstDomain: A19905 (C-0-T10267-A19903-A19905-cpt)
	*/
    public enum SponsorParticipationFunction
    {
        
        FULINRD(0),
        
        SELFINRD(1);
        
        private int code;
        
        SponsorParticipationFunction(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SponsorParticipationFunction fromString(String str)
        {
            if (str.equals("FULINRD"))
                return FULINRD;
            if (str.equals("SELFINRD"))
                return SELFINRD;
		    return null;
        }
    }

	/**
	* abstDomain: A19904 (C-0-T10267-A19903-A19904-cpt)
	*/
    public enum UnderwriterParticipationFunction
    {
        
        PAYORCNTR(0),
        
        REINS(1),
        
        RETROCES(2),
        
        SUBCTRT(3),
        
        UNDERWRTNG(4);
        
        private int code;
        
        UnderwriterParticipationFunction(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UnderwriterParticipationFunction fromString(String str)
        {
            if (str.equals("PAYORCNTR"))
                return PAYORCNTR;
            if (str.equals("REINS"))
                return REINS;
            if (str.equals("RETROCES"))
                return RETROCES;
            if (str.equals("SUBCTRT"))
                return SUBCTRT;
            if (str.equals("UNDERWRTNG"))
                return UNDERWRTNG;
		    return null;
        }
    }

	/**
	* specDomain: S16554 (C-0-T16543-S16554-cpt)
	*/
    public enum ParticipationModeElectronicData
    {
        
        ELECTRONIC(0);
        
        private int code;
        
        ParticipationModeElectronicData(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationModeElectronicData fromString(String str)
        {
            if (str.equals("ELECTRONIC"))
                return ELECTRONIC;
		    return null;
        }
    }

	/**
	* specDomain: S16544 (C-0-T16543-S16544-cpt)
	*/
    public enum ParticipationModeVerbal
    {
        
        VERBAL(0),
        
        DICTATE(1),
        
        FACE(2),
        
        PHONE(3),
        
        VIDEOCONF(4);
        
        private int code;
        
        ParticipationModeVerbal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationModeVerbal fromString(String str)
        {
            if (str.equals("VERBAL"))
                return VERBAL;
            if (str.equals("DICTATE"))
                return DICTATE;
            if (str.equals("FACE"))
                return FACE;
            if (str.equals("PHONE"))
                return PHONE;
            if (str.equals("VIDEOCONF"))
                return VIDEOCONF;
		    return null;
        }
    }

	/**
	* specDomain: S16549 (C-0-T16543-S16549-cpt)
	*/
    public enum ParticipationModeWritten
    {
        
        WRITTEN(0),
        
        EMAILWRIT(1),
        
        HANDWRIT(2),
        
        FAXWRIT(3),
        
        TYPEWRIT(4);
        
        private int code;
        
        ParticipationModeWritten(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationModeWritten fromString(String str)
        {
            if (str.equals("WRITTEN"))
                return WRITTEN;
            if (str.equals("EMAILWRIT"))
                return EMAILWRIT;
            if (str.equals("HANDWRIT"))
                return HANDWRIT;
            if (str.equals("FAXWRIT"))
                return FAXWRIT;
            if (str.equals("TYPEWRIT"))
                return TYPEWRIT;
		    return null;
        }
    }

	/**
	* abstDomain: A19739 (C-0-T16543-A19739-cpt)
	*/
    public enum x_PhysicalVerbalParticipationMode
    {
        
        PHYSICAL(0),
        
        VERBAL(1);
        
        private int code;
        
        x_PhysicalVerbalParticipationMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_PhysicalVerbalParticipationMode fromString(String str)
        {
            if (str.equals("PHYSICAL"))
                return PHYSICAL;
            if (str.equals("VERBAL"))
                return VERBAL;
		    return null;
        }
    }

	/**
	* vocSet: T10282 (C-0-T10282-cpt)
	*/
    public enum ParticipationSignature
    {
        
        I(0),
        
        X(1),
        
        S(2);
        
        private int code;
        
        ParticipationSignature(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationSignature fromString(String str)
        {
            if (str.equals("I"))
                return I;
            if (str.equals("X"))
                return X;
            if (str.equals("S"))
                return S;
		    return null;
        }
    }

	/**
	* abstDomain: A10247 (C-0-T10901-S21573-A10247-cpt)
	*/
    public enum ParticipationAncillary
    {
        
        ADM(0),
        
        ATND(1),
        
        CALLBCK(2),
        
        CON(3),
        
        DIS(4),
        
        ESC(5),
        
        REF(6);
        
        private int code;
        
        ParticipationAncillary(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationAncillary fromString(String str)
        {
            if (str.equals("ADM"))
                return ADM;
            if (str.equals("ATND"))
                return ATND;
            if (str.equals("CALLBCK"))
                return CALLBCK;
            if (str.equals("CON"))
                return CON;
            if (str.equals("DIS"))
                return DIS;
            if (str.equals("ESC"))
                return ESC;
            if (str.equals("REF"))
                return REF;
		    return null;
        }
    }

	/**
	* specDomain: S19032 (C-0-T10901-S21573-S19032-cpt)
	*/
    public enum ParticipationIndirectTarget
    {
        
        IND(0),
        
        BEN(1),
        
        CAGNT(2),
        
        COV(3),
        
        GUAR(4),
        
        HLD(5),
        
        RCV(6),
        
        RCT(7);
        
        private int code;
        
        ParticipationIndirectTarget(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationIndirectTarget fromString(String str)
        {
            if (str.equals("IND"))
                return IND;
            if (str.equals("BEN"))
                return BEN;
            if (str.equals("CAGNT"))
                return CAGNT;
            if (str.equals("COV"))
                return COV;
            if (str.equals("GUAR"))
                return GUAR;
            if (str.equals("HLD"))
                return HLD;
            if (str.equals("RCV"))
                return RCV;
            if (str.equals("RCT"))
                return RCT;
		    return null;
        }
    }

	/**
	* specDomain: S21463 (C-0-T10901-S21573-A10251-S21463-cpt)
	*/
    public enum ParticipationInformationTranscriber
    {
        
        TRANS(0),
        
        ENT(1);
        
        private int code;
        
        ParticipationInformationTranscriber(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationInformationTranscriber fromString(String str)
        {
            if (str.equals("TRANS"))
                return TRANS;
            if (str.equals("ENT"))
                return ENT;
		    return null;
        }
    }

	/**
	* specDomain: S10263 (C-0-T10901-S21573-S10263-cpt)
	*/
    public enum ParticipationInformationRecipient
    {
        
        IRCP(0),
        
        REFB(1),
        
        REFT(2),
        
        PRCP(3),
        
        TRC(4),
        
        NOT(5);
        
        private int code;
        
        ParticipationInformationRecipient(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationInformationRecipient fromString(String str)
        {
            if (str.equals("IRCP"))
                return IRCP;
            if (str.equals("REFB"))
                return REFB;
            if (str.equals("REFT"))
                return REFT;
            if (str.equals("PRCP"))
                return PRCP;
            if (str.equals("TRC"))
                return TRC;
            if (str.equals("NOT"))
                return NOT;
		    return null;
        }
    }

	/**
	* specDomain: S10248 (C-0-T10901-S21573-S10248-cpt)
	*/
    public enum ParticipationPhysicalPerformer
    {
        
        PRF(0),
        
        DIST(1),
        
        PPRF(2),
        
        SPRF(3);
        
        private int code;
        
        ParticipationPhysicalPerformer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationPhysicalPerformer fromString(String str)
        {
            if (str.equals("PRF"))
                return PRF;
            if (str.equals("DIST"))
                return DIST;
            if (str.equals("PPRF"))
                return PPRF;
            if (str.equals("SPRF"))
                return SPRF;
		    return null;
        }
    }

	/**
	* specDomain: S21978 (C-0-T10901-S21573-S10286-S21978-cpt)
	*/
    public enum ParticipationExposureparticipation
    {
        
        EXPART(0),
        
        EXSRC(1),
        
        EXPTRGT(2);
        
        private int code;
        
        ParticipationExposureparticipation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationExposureparticipation fromString(String str)
        {
            if (str.equals("EXPART"))
                return EXPART;
            if (str.equals("EXSRC"))
                return EXSRC;
            if (str.equals("EXPTRGT"))
                return EXPTRGT;
		    return null;
        }
    }

	/**
	* specDomain: S10298 (C-0-T10901-S21573-S10286-S10298-cpt)
	*/
    public enum ParticipationTargetDevice
    {
        
        DEV(0),
        
        NRD(1),
        
        RDV(2);
        
        private int code;
        
        ParticipationTargetDevice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationTargetDevice fromString(String str)
        {
            if (str.equals("DEV"))
                return DEV;
            if (str.equals("NRD"))
                return NRD;
            if (str.equals("RDV"))
                return RDV;
		    return null;
        }
    }

	/**
	* specDomain: S10287 (C-0-T10901-S21573-S10286-S10287-cpt)
	*/
    public enum ParticipationTargetSubject
    {
        
        SBJ(0),
        
        SPC(1);
        
        private int code;
        
        ParticipationTargetSubject(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationTargetSubject fromString(String str)
        {
            if (str.equals("SBJ"))
                return SBJ;
            if (str.equals("SPC"))
                return SPC;
		    return null;
        }
    }

	/**
	* specDomain: S10302 (C-0-T10901-S21573-S10302-cpt)
	*/
    public enum ParticipationTargetLocation
    {
        
        LOC(0),
        
        DST(1),
        
        ELOC(2),
        
        ORG(3),
        
        RML(4),
        
        VIA(5);
        
        private int code;
        
        ParticipationTargetLocation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationTargetLocation fromString(String str)
        {
            if (str.equals("LOC"))
                return LOC;
            if (str.equals("DST"))
                return DST;
            if (str.equals("ELOC"))
                return ELOC;
            if (str.equals("ORG"))
                return ORG;
            if (str.equals("RML"))
                return RML;
            if (str.equals("VIA"))
                return VIA;
		    return null;
        }
    }

	/**
	* specDomain: S10259 (C-0-T10901-S21573-S10259-cpt)
	*/
    public enum ParticipationVerifier
    {
        
        VRF(0),
        
        AUTHEN(1),
        
        LA(2);
        
        private int code;
        
        ParticipationVerifier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParticipationVerifier fromString(String str)
        {
            if (str.equals("VRF"))
                return VRF;
            if (str.equals("AUTHEN"))
                return AUTHEN;
            if (str.equals("LA"))
                return LA;
		    return null;
        }
    }

	/**
	* abstDomain: A19600 (C-0-T10901-A19600-cpt)
	*/
    public enum x_EncounterParticipant
    {
        
        ADM(0),
        
        ATND(1),
        
        CON(2),
        
        DIS(3),
        
        REF(4);
        
        private int code;
        
        x_EncounterParticipant(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_EncounterParticipant fromString(String str)
        {
            if (str.equals("ADM"))
                return ADM;
            if (str.equals("ATND"))
                return ATND;
            if (str.equals("CON"))
                return CON;
            if (str.equals("DIS"))
                return DIS;
            if (str.equals("REF"))
                return REF;
		    return null;
        }
    }

	/**
	* abstDomain: A16764 (C-0-T10901-A16764-cpt)
	*/
    public enum x_EncounterPerformerParticipation
    {
        
        CON(0),
        
        PRF(1),
        
        SPRF(2);
        
        private int code;
        
        x_EncounterPerformerParticipation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_EncounterPerformerParticipation fromString(String str)
        {
            if (str.equals("CON"))
                return CON;
            if (str.equals("PRF"))
                return PRF;
            if (str.equals("SPRF"))
                return SPRF;
		    return null;
        }
    }

	/**
	* abstDomain: A19366 (C-0-T10901-A19366-cpt)
	*/
    public enum x_InformationRecipient
    {
        
        PRCP(0),
        
        TRC(1);
        
        private int code;
        
        x_InformationRecipient(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_InformationRecipient fromString(String str)
        {
            if (str.equals("PRCP"))
                return PRCP;
            if (str.equals("TRC"))
                return TRC;
		    return null;
        }
    }

	/**
	* abstDomain: A19080 (C-0-T10901-A19080-cpt)
	*/
    public enum x_ParticipationAuthorPerformer
    {
        
        AUT(0),
        
        PRF(1);
        
        private int code;
        
        x_ParticipationAuthorPerformer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ParticipationAuthorPerformer fromString(String str)
        {
            if (str.equals("AUT"))
                return AUT;
            if (str.equals("PRF"))
                return PRF;
		    return null;
        }
    }

	/**
	* abstDomain: A19588 (C-0-T10901-A19588-cpt)
	*/
    public enum x_ParticipationEntVrf
    {
        
        ENT(0),
        
        VRF(1);
        
        private int code;
        
        x_ParticipationEntVrf(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ParticipationEntVrf fromString(String str)
        {
            if (str.equals("ENT"))
                return ENT;
            if (str.equals("VRF"))
                return VRF;
		    return null;
        }
    }

	/**
	* abstDomain: A19589 (C-0-T10901-A19589-cpt)
	*/
    public enum x_ParticipationPrfEntVrf
    {
        
        ENT(0),
        
        PRF(1),
        
        VRF(2);
        
        private int code;
        
        x_ParticipationPrfEntVrf(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ParticipationPrfEntVrf fromString(String str)
        {
            if (str.equals("ENT"))
                return ENT;
            if (str.equals("PRF"))
                return PRF;
            if (str.equals("VRF"))
                return VRF;
		    return null;
        }
    }

	/**
	* abstDomain: A19083 (C-0-T10901-A19083-cpt)
	*/
    public enum x_ParticipationVrfRespSprfWit
    {
        
        RESP(0),
        
        SPRF(1),
        
        VRF(2),
        
        WIT(3);
        
        private int code;
        
        x_ParticipationVrfRespSprfWit(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ParticipationVrfRespSprfWit fromString(String str)
        {
            if (str.equals("RESP"))
                return RESP;
            if (str.equals("SPRF"))
                return SPRF;
            if (str.equals("VRF"))
                return VRF;
            if (str.equals("WIT"))
                return WIT;
		    return null;
        }
    }

	/**
	* abstDomain: A19601 (C-0-T10901-A19601-cpt)
	*/
    public enum x_ServiceEventPerformer
    {
        
        PRF(0),
        
        SPRF(1);
        
        private int code;
        
        x_ServiceEventPerformer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_ServiceEventPerformer fromString(String str)
        {
            if (str.equals("PRF"))
                return PRF;
            if (str.equals("SPRF"))
                return SPRF;
		    return null;
        }
    }

	/**
	* vocSet: T19265 (C-0-T19265-cpt)
	*/
    public enum PatientImportance
    {
        
        BM(0),
        
        FD(1),
        
        FOR(2),
        
        GOVT(3),
        
        DFM(4),
        
        SFM(5),
        
        STF(6),
        
        DR(7),
        
        VIP(8);
        
        private int code;
        
        PatientImportance(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PatientImportance fromString(String str)
        {
            if (str.equals("BM"))
                return BM;
            if (str.equals("FD"))
                return FD;
            if (str.equals("FOR"))
                return FOR;
            if (str.equals("GOVT"))
                return GOVT;
            if (str.equals("DFM"))
                return DFM;
            if (str.equals("SFM"))
                return SFM;
            if (str.equals("STF"))
                return STF;
            if (str.equals("DR"))
                return DR;
            if (str.equals("VIP"))
                return VIP;
		    return null;
        }
    }

	/**
	* vocSet: T14908 (C-0-T14908-cpt)
	*/
    public enum PaymentTerms
    {
        
        COD(0),
        
        N30(1),
        
        N60(2),
        
        N90(3);
        
        private int code;
        
        PaymentTerms(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PaymentTerms fromString(String str)
        {
            if (str.equals("COD"))
                return COD;
            if (str.equals("N30"))
                return N30;
            if (str.equals("N60"))
                return N60;
            if (str.equals("N90"))
                return N90;
		    return null;
        }
    }

	/**
	* specDomain: S10186 (C-0-T295-S10186-cpt)
	*/
    public enum MobilityImpaired
    {
        
        _5(0,"5"),
        
        CB(1,"CB"),
        
        CR(2,"CR"),
        
        G(3,"G"),
        
        WK(4,"WK"),
        
        WC(5,"WC");
        
        private int code;
        private java.lang.String xmlValue;
        
        MobilityImpaired(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MobilityImpaired fromString(String str)
        {
            if (str.equals("5"))
                return _5;
            if (str.equals("CB"))
                return CB;
            if (str.equals("CR"))
                return CR;
            if (str.equals("G"))
                return G;
            if (str.equals("WK"))
                return WK;
            if (str.equals("WC"))
                return WC;
		    return null;
        }
    }

	/**
	* abstDomain: A17860 (C-0-T10637-A17860-cpt)
	*/
    public enum NameRepresentationUse
    {
        
        ABC(0),
        
        IDE(1),
        
        SYL(2);
        
        private int code;
        
        NameRepresentationUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NameRepresentationUse fromString(String str)
        {
            if (str.equals("ABC"))
                return ABC;
            if (str.equals("IDE"))
                return IDE;
            if (str.equals("SYL"))
                return SYL;
		    return null;
        }
    }

	/**
	* vocSet: T10747 (C-0-T10747-cpt)
	*/
    public enum ProbabilityDistributionType
    {
        
        G(0),
        
        F(1),
        
        T(2),
        
        B(3),
        
        X2(4),
        
        E(5),
        
        LN(6),
        
        N(7),
        
        U(8);
        
        private int code;
        
        ProbabilityDistributionType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ProbabilityDistributionType fromString(String str)
        {
            if (str.equals("G"))
                return G;
            if (str.equals("F"))
                return F;
            if (str.equals("T"))
                return T;
            if (str.equals("B"))
                return B;
            if (str.equals("X2"))
                return X2;
            if (str.equals("E"))
                return E;
            if (str.equals("LN"))
                return LN;
            if (str.equals("N"))
                return N;
            if (str.equals("U"))
                return U;
		    return null;
        }
    }

	/**
	* vocSet: T103 (C-0-T103-cpt)
	*/
    public enum ProcessingID
    {
        
        D(0),
        
        P(1),
        
        T(2);
        
        private int code;
        
        ProcessingID(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ProcessingID fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("P"))
                return P;
            if (str.equals("T"))
                return T;
		    return null;
        }
    }

	/**
	* vocSet: T207 (C-0-T207-cpt)
	*/
    public enum ProcessingMode
    {
        
        A(0),
        
        T(1),
        
        I(2),
        
        R(3);
        
        private int code;
        
        ProcessingMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ProcessingMode fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("T"))
                return T;
            if (str.equals("I"))
                return I;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* specDomain: S20669 (C-0-T19465-S20669-cpt)
	*/
    public enum AgenciesProviderCodes
    {
        
        _250000000X(0,"250000000X"),
        
        _251B00000X(1,"251B00000X"),
        
        _251C00000X(2,"251C00000X"),
        
        _251E00000X(3,"251E00000X"),
        
        _251F00000X(4,"251F00000X"),
        
        _251G00000X(5,"251G00000X"),
        
        _251J00000X(6,"251J00000X"),
        
        _251K00000X(7,"251K00000X"),
        
        _251V00000X(8,"251V00000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AgenciesProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AgenciesProviderCodes fromString(String str)
        {
            if (str.equals("250000000X"))
                return _250000000X;
            if (str.equals("251B00000X"))
                return _251B00000X;
            if (str.equals("251C00000X"))
                return _251C00000X;
            if (str.equals("251E00000X"))
                return _251E00000X;
            if (str.equals("251F00000X"))
                return _251F00000X;
            if (str.equals("251G00000X"))
                return _251G00000X;
            if (str.equals("251J00000X"))
                return _251J00000X;
            if (str.equals("251K00000X"))
                return _251K00000X;
            if (str.equals("251V00000X"))
                return _251V00000X;
		    return null;
        }
    }

	/**
	* specDomain: S20097 (C-0-T19465-S20096-S20097-cpt)
	*/
    public enum AllergyandImmunologyProviderCodes
    {
        
        _207K00000X(0,"207K00000X"),
        
        _207KA0200X(1,"207KA0200X"),
        
        _207KI0005X(2,"207KI0005X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AllergyandImmunologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AllergyandImmunologyProviderCodes fromString(String str)
        {
            if (str.equals("207K00000X"))
                return _207K00000X;
            if (str.equals("207KA0200X"))
                return _207KA0200X;
            if (str.equals("207KI0005X"))
                return _207KI0005X;
		    return null;
        }
    }

	/**
	* specDomain: S20100 (C-0-T19465-S20096-S20100-cpt)
	*/
    public enum AnesthesiologyProviderCodes
    {
        
        _207L00000X(0,"207L00000X"),
        
        _207LA0401X(1,"207LA0401X"),
        
        _207LC0200X(2,"207LC0200X"),
        
        _207LP2900X(3,"207LP2900X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AnesthesiologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AnesthesiologyProviderCodes fromString(String str)
        {
            if (str.equals("207L00000X"))
                return _207L00000X;
            if (str.equals("207LA0401X"))
                return _207LA0401X;
            if (str.equals("207LC0200X"))
                return _207LC0200X;
            if (str.equals("207LP2900X"))
                return _207LP2900X;
		    return null;
        }
    }

	/**
	* specDomain: S20106 (C-0-T19465-S20096-S20106-cpt)
	*/
    public enum DermatologyProviderCodes
    {
        
        _207N00000X(0,"207N00000X"),
        
        _207NI0002X(1,"207NI0002X"),
        
        _207NS0135X(2,"207NS0135X"),
        
        _207ND0900X(3,"207ND0900X"),
        
        _207ND0101X(4,"207ND0101X"),
        
        _207NP0225X(5,"207NP0225X");
        
        private int code;
        private java.lang.String xmlValue;
        
        DermatologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DermatologyProviderCodes fromString(String str)
        {
            if (str.equals("207N00000X"))
                return _207N00000X;
            if (str.equals("207NI0002X"))
                return _207NI0002X;
            if (str.equals("207NS0135X"))
                return _207NS0135X;
            if (str.equals("207ND0900X"))
                return _207ND0900X;
            if (str.equals("207ND0101X"))
                return _207ND0101X;
            if (str.equals("207NP0225X"))
                return _207NP0225X;
		    return null;
        }
    }

	/**
	* specDomain: S20112 (C-0-T19465-S20096-S20112-cpt)
	*/
    public enum EmergencyMedicineProviderCodes
    {
        
        _207P00000X(0,"207P00000X"),
        
        _207PE0004X(1,"207PE0004X"),
        
        _207PT0002X(2,"207PT0002X"),
        
        _207PP0204X(3,"207PP0204X"),
        
        _207PS0010X(4,"207PS0010X"),
        
        _207PE0005X(5,"207PE0005X");
        
        private int code;
        private java.lang.String xmlValue;
        
        EmergencyMedicineProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EmergencyMedicineProviderCodes fromString(String str)
        {
            if (str.equals("207P00000X"))
                return _207P00000X;
            if (str.equals("207PE0004X"))
                return _207PE0004X;
            if (str.equals("207PT0002X"))
                return _207PT0002X;
            if (str.equals("207PP0204X"))
                return _207PP0204X;
            if (str.equals("207PS0010X"))
                return _207PS0010X;
            if (str.equals("207PE0005X"))
                return _207PE0005X;
		    return null;
        }
    }

	/**
	* specDomain: S20118 (C-0-T19465-S20096-S20118-cpt)
	*/
    public enum FamilyPracticeProviderCodes
    {
        
        _207Q00000X(0,"207Q00000X"),
        
        _207QA0401X(1,"207QA0401X"),
        
        _207QA0000X(2,"207QA0000X"),
        
        _207QA0505X(3,"207QA0505X"),
        
        _207QG0300X(4,"207QG0300X"),
        
        _207QS0010X(5,"207QS0010X");
        
        private int code;
        private java.lang.String xmlValue;
        
        FamilyPracticeProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static FamilyPracticeProviderCodes fromString(String str)
        {
            if (str.equals("207Q00000X"))
                return _207Q00000X;
            if (str.equals("207QA0401X"))
                return _207QA0401X;
            if (str.equals("207QA0000X"))
                return _207QA0000X;
            if (str.equals("207QA0505X"))
                return _207QA0505X;
            if (str.equals("207QG0300X"))
                return _207QG0300X;
            if (str.equals("207QS0010X"))
                return _207QS0010X;
		    return null;
        }
    }

	/**
	* specDomain: S20126 (C-0-T19465-S20096-S20126-cpt)
	*/
    public enum InternalMedicineProviderCodes
    {
        
        _207R00000X(0,"207R00000X"),
        
        _207RA0401X(1,"207RA0401X"),
        
        _207RA0000X(2,"207RA0000X"),
        
        _207RA0201X(3,"207RA0201X"),
        
        _207RC0000X(4,"207RC0000X"),
        
        _207RI0001X(5,"207RI0001X"),
        
        _207RC0001X(6,"207RC0001X"),
        
        _207RC0200X(7,"207RC0200X"),
        
        _207RE0101X(8,"207RE0101X"),
        
        _207RG0100X(9,"207RG0100X"),
        
        _207RG0300X(10,"207RG0300X"),
        
        _207RH0000X(11,"207RH0000X"),
        
        _207RH0003X(12,"207RH0003X"),
        
        _207RI0008X(13,"207RI0008X"),
        
        _207RI0200X(14,"207RI0200X"),
        
        _207RI0011X(15,"207RI0011X"),
        
        _207RM1200X(16,"207RM1200X"),
        
        _207RX0202X(17,"207RX0202X"),
        
        _207RN0300X(18,"207RN0300X"),
        
        _207RP1001X(19,"207RP1001X"),
        
        _207RR0500X(20,"207RR0500X"),
        
        _207RS0010X(21,"207RS0010X");
        
        private int code;
        private java.lang.String xmlValue;
        
        InternalMedicineProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static InternalMedicineProviderCodes fromString(String str)
        {
            if (str.equals("207R00000X"))
                return _207R00000X;
            if (str.equals("207RA0401X"))
                return _207RA0401X;
            if (str.equals("207RA0000X"))
                return _207RA0000X;
            if (str.equals("207RA0201X"))
                return _207RA0201X;
            if (str.equals("207RC0000X"))
                return _207RC0000X;
            if (str.equals("207RI0001X"))
                return _207RI0001X;
            if (str.equals("207RC0001X"))
                return _207RC0001X;
            if (str.equals("207RC0200X"))
                return _207RC0200X;
            if (str.equals("207RE0101X"))
                return _207RE0101X;
            if (str.equals("207RG0100X"))
                return _207RG0100X;
            if (str.equals("207RG0300X"))
                return _207RG0300X;
            if (str.equals("207RH0000X"))
                return _207RH0000X;
            if (str.equals("207RH0003X"))
                return _207RH0003X;
            if (str.equals("207RI0008X"))
                return _207RI0008X;
            if (str.equals("207RI0200X"))
                return _207RI0200X;
            if (str.equals("207RI0011X"))
                return _207RI0011X;
            if (str.equals("207RM1200X"))
                return _207RM1200X;
            if (str.equals("207RX0202X"))
                return _207RX0202X;
            if (str.equals("207RN0300X"))
                return _207RN0300X;
            if (str.equals("207RP1001X"))
                return _207RP1001X;
            if (str.equals("207RR0500X"))
                return _207RR0500X;
            if (str.equals("207RS0010X"))
                return _207RS0010X;
		    return null;
        }
    }

	/**
	* specDomain: S20149 (C-0-T19465-S20096-S20149-cpt)
	*/
    public enum MedicalGeneticsProviderCodes
    {
        
        _207S00000X(0,"207S00000X"),
        
        _207SG0202X(1,"207SG0202X"),
        
        _207SC0300X(2,"207SC0300X"),
        
        _207SG0201X(3,"207SG0201X"),
        
        _207SG0203X(4,"207SG0203X"),
        
        _207SM0001X(5,"207SM0001X"),
        
        _207SG0205X(6,"207SG0205X");
        
        private int code;
        private java.lang.String xmlValue;
        
        MedicalGeneticsProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MedicalGeneticsProviderCodes fromString(String str)
        {
            if (str.equals("207S00000X"))
                return _207S00000X;
            if (str.equals("207SG0202X"))
                return _207SG0202X;
            if (str.equals("207SC0300X"))
                return _207SC0300X;
            if (str.equals("207SG0201X"))
                return _207SG0201X;
            if (str.equals("207SG0203X"))
                return _207SG0203X;
            if (str.equals("207SM0001X"))
                return _207SM0001X;
            if (str.equals("207SG0205X"))
                return _207SG0205X;
		    return null;
        }
    }

	/**
	* specDomain: S20159 (C-0-T19465-S20096-S20159-cpt)
	*/
    public enum NuclearMedicineProviderCodes
    {
        
        _207U00000X(0,"207U00000X"),
        
        _207UN0903X(1,"207UN0903X"),
        
        _207UN0901X(2,"207UN0901X"),
        
        _207UN0902X(3,"207UN0902X");
        
        private int code;
        private java.lang.String xmlValue;
        
        NuclearMedicineProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NuclearMedicineProviderCodes fromString(String str)
        {
            if (str.equals("207U00000X"))
                return _207U00000X;
            if (str.equals("207UN0903X"))
                return _207UN0903X;
            if (str.equals("207UN0901X"))
                return _207UN0901X;
            if (str.equals("207UN0902X"))
                return _207UN0902X;
		    return null;
        }
    }

	/**
	* specDomain: S20163 (C-0-T19465-S20096-S20163-cpt)
	*/
    public enum ObstetricsGynecologyProviderCodes
    {
        
        _207V00000X(0,"207V00000X"),
        
        _207VC0200X(1,"207VC0200X"),
        
        _207VX0201X(2,"207VX0201X"),
        
        _207VG0400X(3,"207VG0400X"),
        
        _207VM0101X(4,"207VM0101X"),
        
        _207VX0000X(5,"207VX0000X"),
        
        _207VE0102X(6,"207VE0102X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ObstetricsGynecologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ObstetricsGynecologyProviderCodes fromString(String str)
        {
            if (str.equals("207V00000X"))
                return _207V00000X;
            if (str.equals("207VC0200X"))
                return _207VC0200X;
            if (str.equals("207VX0201X"))
                return _207VX0201X;
            if (str.equals("207VG0400X"))
                return _207VG0400X;
            if (str.equals("207VM0101X"))
                return _207VM0101X;
            if (str.equals("207VX0000X"))
                return _207VX0000X;
            if (str.equals("207VE0102X"))
                return _207VE0102X;
		    return null;
        }
    }

	/**
	* specDomain: S20172 (C-0-T19465-S20096-S20172-cpt)
	*/
    public enum OrthopaedicSurgeryProviderCodes
    {
        
        _207X00000X(0,"207X00000X"),
        
        _207XS0114X(1,"207XS0114X"),
        
        _207XX0004X(2,"207XX0004X"),
        
        _207XS0106X(3,"207XS0106X"),
        
        _207XS0117X(4,"207XS0117X"),
        
        _207XX0801X(5,"207XX0801X"),
        
        _207XX0005X(6,"207XX0005X");
        
        private int code;
        private java.lang.String xmlValue;
        
        OrthopaedicSurgeryProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OrthopaedicSurgeryProviderCodes fromString(String str)
        {
            if (str.equals("207X00000X"))
                return _207X00000X;
            if (str.equals("207XS0114X"))
                return _207XS0114X;
            if (str.equals("207XX0004X"))
                return _207XX0004X;
            if (str.equals("207XS0106X"))
                return _207XS0106X;
            if (str.equals("207XS0117X"))
                return _207XS0117X;
            if (str.equals("207XX0801X"))
                return _207XX0801X;
            if (str.equals("207XX0005X"))
                return _207XX0005X;
		    return null;
        }
    }

	/**
	* specDomain: S20179 (C-0-T19465-S20096-S20179-cpt)
	*/
    public enum OtolaryngologyProviderCodes
    {
        
        _207Y00000X(0,"207Y00000X"),
        
        _207YS0123X(1,"207YS0123X"),
        
        _207YX0602X(2,"207YX0602X"),
        
        _207YX0905X(3,"207YX0905X"),
        
        _207YX0901X(4,"207YX0901X"),
        
        _207YP0228X(5,"207YP0228X"),
        
        _207YX0007X(6,"207YX0007X");
        
        private int code;
        private java.lang.String xmlValue;
        
        OtolaryngologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OtolaryngologyProviderCodes fromString(String str)
        {
            if (str.equals("207Y00000X"))
                return _207Y00000X;
            if (str.equals("207YS0123X"))
                return _207YS0123X;
            if (str.equals("207YX0602X"))
                return _207YX0602X;
            if (str.equals("207YX0905X"))
                return _207YX0905X;
            if (str.equals("207YX0901X"))
                return _207YX0901X;
            if (str.equals("207YP0228X"))
                return _207YP0228X;
            if (str.equals("207YX0007X"))
                return _207YX0007X;
		    return null;
        }
    }

	/**
	* specDomain: S20186 (C-0-T19465-S20096-S20186-cpt)
	*/
    public enum PainMedicineProviderCodes
    {
        
        _208V00000X(0,"208V00000X"),
        
        _208VP0014X(1,"208VP0014X"),
        
        _208VP0000X(2,"208VP0000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PainMedicineProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PainMedicineProviderCodes fromString(String str)
        {
            if (str.equals("208V00000X"))
                return _208V00000X;
            if (str.equals("208VP0014X"))
                return _208VP0014X;
            if (str.equals("208VP0000X"))
                return _208VP0000X;
		    return null;
        }
    }

	/**
	* specDomain: S20189 (C-0-T19465-S20096-S20189-cpt)
	*/
    public enum PathologyProviderCodes
    {
        
        _207Z00000X(0,"207Z00000X"),
        
        _207ZP0101X(1,"207ZP0101X"),
        
        _207ZP0102X(2,"207ZP0102X"),
        
        _207ZB0001X(3,"207ZB0001X"),
        
        _207ZP0104X(4,"207ZP0104X"),
        
        _207ZP0105X(5,"207ZP0105X"),
        
        _207ZC0500X(6,"207ZC0500X"),
        
        _207ZD0900X(7,"207ZD0900X"),
        
        _207ZF0201X(8,"207ZF0201X"),
        
        _207ZH0000X(9,"207ZH0000X"),
        
        _207ZI0100X(10,"207ZI0100X"),
        
        _207ZM0300X(11,"207ZM0300X"),
        
        _207ZP0007X(12,"207ZP0007X"),
        
        _207ZN0500X(13,"207ZN0500X"),
        
        _207ZP0213X(14,"207ZP0213X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PathologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PathologyProviderCodes fromString(String str)
        {
            if (str.equals("207Z00000X"))
                return _207Z00000X;
            if (str.equals("207ZP0101X"))
                return _207ZP0101X;
            if (str.equals("207ZP0102X"))
                return _207ZP0102X;
            if (str.equals("207ZB0001X"))
                return _207ZB0001X;
            if (str.equals("207ZP0104X"))
                return _207ZP0104X;
            if (str.equals("207ZP0105X"))
                return _207ZP0105X;
            if (str.equals("207ZC0500X"))
                return _207ZC0500X;
            if (str.equals("207ZD0900X"))
                return _207ZD0900X;
            if (str.equals("207ZF0201X"))
                return _207ZF0201X;
            if (str.equals("207ZH0000X"))
                return _207ZH0000X;
            if (str.equals("207ZI0100X"))
                return _207ZI0100X;
            if (str.equals("207ZM0300X"))
                return _207ZM0300X;
            if (str.equals("207ZP0007X"))
                return _207ZP0007X;
            if (str.equals("207ZN0500X"))
                return _207ZN0500X;
            if (str.equals("207ZP0213X"))
                return _207ZP0213X;
		    return null;
        }
    }

	/**
	* specDomain: S20204 (C-0-T19465-S20096-S20204-cpt)
	*/
    public enum PediatricsProviderCodes
    {
        
        _208000000X(0,"208000000X"),
        
        _2080A0000X(1,"2080A0000X"),
        
        _2080I0007X(2,"2080I0007X"),
        
        _2080P0006X(3,"2080P0006X"),
        
        _2080T0002X(4,"2080T0002X"),
        
        _2080N0001X(5,"2080N0001X"),
        
        _2080P0008X(6,"2080P0008X"),
        
        _2080P0201X(7,"2080P0201X"),
        
        _2080P0202X(8,"2080P0202X"),
        
        _2080P0203X(9,"2080P0203X"),
        
        _2080P0204X(10,"2080P0204X"),
        
        _2080P0205X(11,"2080P0205X"),
        
        _2080P0206X(12,"2080P0206X"),
        
        _2080P0207X(13,"2080P0207X"),
        
        _2080P0208X(14,"2080P0208X"),
        
        _2080P0210X(15,"2080P0210X"),
        
        _2080P0214X(16,"2080P0214X"),
        
        _2080P0216X(17,"2080P0216X"),
        
        _2080S0010X(18,"2080S0010X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PediatricsProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PediatricsProviderCodes fromString(String str)
        {
            if (str.equals("208000000X"))
                return _208000000X;
            if (str.equals("2080A0000X"))
                return _2080A0000X;
            if (str.equals("2080I0007X"))
                return _2080I0007X;
            if (str.equals("2080P0006X"))
                return _2080P0006X;
            if (str.equals("2080T0002X"))
                return _2080T0002X;
            if (str.equals("2080N0001X"))
                return _2080N0001X;
            if (str.equals("2080P0008X"))
                return _2080P0008X;
            if (str.equals("2080P0201X"))
                return _2080P0201X;
            if (str.equals("2080P0202X"))
                return _2080P0202X;
            if (str.equals("2080P0203X"))
                return _2080P0203X;
            if (str.equals("2080P0204X"))
                return _2080P0204X;
            if (str.equals("2080P0205X"))
                return _2080P0205X;
            if (str.equals("2080P0206X"))
                return _2080P0206X;
            if (str.equals("2080P0207X"))
                return _2080P0207X;
            if (str.equals("2080P0208X"))
                return _2080P0208X;
            if (str.equals("2080P0210X"))
                return _2080P0210X;
            if (str.equals("2080P0214X"))
                return _2080P0214X;
            if (str.equals("2080P0216X"))
                return _2080P0216X;
            if (str.equals("2080S0010X"))
                return _2080S0010X;
		    return null;
        }
    }

	/**
	* specDomain: S20223 (C-0-T19465-S20096-S20223-cpt)
	*/
    public enum PhysicalMedicineandRehabilitationProviderCodes
    {
        
        _208100000X(0,"208100000X"),
        
        _2081P2900X(1,"2081P2900X"),
        
        _2081P0010X(2,"2081P0010X"),
        
        _2081P0004X(3,"2081P0004X"),
        
        _2081S0010X(4,"2081S0010X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicalMedicineandRehabilitationProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicalMedicineandRehabilitationProviderCodes fromString(String str)
        {
            if (str.equals("208100000X"))
                return _208100000X;
            if (str.equals("2081P2900X"))
                return _2081P2900X;
            if (str.equals("2081P0010X"))
                return _2081P0010X;
            if (str.equals("2081P0004X"))
                return _2081P0004X;
            if (str.equals("2081S0010X"))
                return _2081S0010X;
		    return null;
        }
    }

	/**
	* specDomain: S20228 (C-0-T19465-S20096-S20228-cpt)
	*/
    public enum PlasticSurgeryProviderCodes
    {
        
        _208200000X(0,"208200000X"),
        
        _2082S0099X(1,"2082S0099X"),
        
        _2082S0105X(2,"2082S0105X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PlasticSurgeryProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PlasticSurgeryProviderCodes fromString(String str)
        {
            if (str.equals("208200000X"))
                return _208200000X;
            if (str.equals("2082S0099X"))
                return _2082S0099X;
            if (str.equals("2082S0105X"))
                return _2082S0105X;
		    return null;
        }
    }

	/**
	* specDomain: S20231 (C-0-T19465-S20096-S20231-cpt)
	*/
    public enum PreventiveMedicineProviderCodes
    {
        
        _208300000X(0,"208300000X"),
        
        _2083A0100X(1,"2083A0100X"),
        
        _2083T0002X(2,"2083T0002X"),
        
        _2083X0100X(3,"2083X0100X"),
        
        _2083P0500X(4,"2083P0500X"),
        
        _2083P0901X(5,"2083P0901X"),
        
        _2083S0010X(6,"2083S0010X"),
        
        _2083P0011X(7,"2083P0011X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PreventiveMedicineProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PreventiveMedicineProviderCodes fromString(String str)
        {
            if (str.equals("208300000X"))
                return _208300000X;
            if (str.equals("2083A0100X"))
                return _2083A0100X;
            if (str.equals("2083T0002X"))
                return _2083T0002X;
            if (str.equals("2083X0100X"))
                return _2083X0100X;
            if (str.equals("2083P0500X"))
                return _2083P0500X;
            if (str.equals("2083P0901X"))
                return _2083P0901X;
            if (str.equals("2083S0010X"))
                return _2083S0010X;
            if (str.equals("2083P0011X"))
                return _2083P0011X;
		    return null;
        }
    }

	/**
	* specDomain: S20239 (C-0-T19465-S20096-S20239-cpt)
	*/
    public enum PsychiatryandNeurologyProviderCodes
    {
        
        _208400000X(0,"208400000X"),
        
        _2084A0401X(1,"2084A0401X"),
        
        _2084P0802X(2,"2084P0802X"),
        
        _2084P0804X(3,"2084P0804X"),
        
        _2084N0600X(4,"2084N0600X"),
        
        _2084F0202X(5,"2084F0202X"),
        
        _2084P0805X(6,"2084P0805X"),
        
        _2084P0005X(7,"2084P0005X"),
        
        _2084N0400X(8,"2084N0400X"),
        
        _2084N0402X(9,"2084N0402X"),
        
        _2084P2900X(10,"2084P2900X"),
        
        _2084P0800X(11,"2084P0800X"),
        
        _2084S0010X(12,"2084S0010X"),
        
        _2084V0102X(13,"2084V0102X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PsychiatryandNeurologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PsychiatryandNeurologyProviderCodes fromString(String str)
        {
            if (str.equals("208400000X"))
                return _208400000X;
            if (str.equals("2084A0401X"))
                return _2084A0401X;
            if (str.equals("2084P0802X"))
                return _2084P0802X;
            if (str.equals("2084P0804X"))
                return _2084P0804X;
            if (str.equals("2084N0600X"))
                return _2084N0600X;
            if (str.equals("2084F0202X"))
                return _2084F0202X;
            if (str.equals("2084P0805X"))
                return _2084P0805X;
            if (str.equals("2084P0005X"))
                return _2084P0005X;
            if (str.equals("2084N0400X"))
                return _2084N0400X;
            if (str.equals("2084N0402X"))
                return _2084N0402X;
            if (str.equals("2084P2900X"))
                return _2084P2900X;
            if (str.equals("2084P0800X"))
                return _2084P0800X;
            if (str.equals("2084S0010X"))
                return _2084S0010X;
            if (str.equals("2084V0102X"))
                return _2084V0102X;
		    return null;
        }
    }

	/**
	* specDomain: S20253 (C-0-T19465-S20096-S20253-cpt)
	*/
    public enum RadiologyProviderCodes
    {
        
        _208500000X(0,"208500000X"),
        
        _2085B0100X(1,"2085B0100X"),
        
        _2085R0202X(2,"2085R0202X"),
        
        _2085U0001X(3,"2085U0001X"),
        
        _2085N0700X(4,"2085N0700X"),
        
        _2085N0904X(5,"2085N0904X"),
        
        _2085P0229X(6,"2085P0229X"),
        
        _2085R0001X(7,"2085R0001X"),
        
        _2085R0205X(8,"2085R0205X"),
        
        _2085R0203X(9,"2085R0203X"),
        
        _2085R0204X(10,"2085R0204X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RadiologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RadiologyProviderCodes fromString(String str)
        {
            if (str.equals("208500000X"))
                return _208500000X;
            if (str.equals("2085B0100X"))
                return _2085B0100X;
            if (str.equals("2085R0202X"))
                return _2085R0202X;
            if (str.equals("2085U0001X"))
                return _2085U0001X;
            if (str.equals("2085N0700X"))
                return _2085N0700X;
            if (str.equals("2085N0904X"))
                return _2085N0904X;
            if (str.equals("2085P0229X"))
                return _2085P0229X;
            if (str.equals("2085R0001X"))
                return _2085R0001X;
            if (str.equals("2085R0205X"))
                return _2085R0205X;
            if (str.equals("2085R0203X"))
                return _2085R0203X;
            if (str.equals("2085R0204X"))
                return _2085R0204X;
		    return null;
        }
    }

	/**
	* specDomain: S20264 (C-0-T19465-S20096-S20264-cpt)
	*/
    public enum SurgeryProviderCodes
    {
        
        _208600000X(0,"208600000X"),
        
        _2086S0120X(1,"2086S0120X"),
        
        _2086S0122X(2,"2086S0122X"),
        
        _2086S0105X(3,"2086S0105X"),
        
        _2086S0102X(4,"2086S0102X"),
        
        _2086X0206X(5,"2086X0206X"),
        
        _208G00000X(6,"208G00000X"),
        
        _204F00000X(7,"204F00000X"),
        
        _2086S0127X(8,"2086S0127X"),
        
        _2086S0129X(9,"2086S0129X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SurgeryProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SurgeryProviderCodes fromString(String str)
        {
            if (str.equals("208600000X"))
                return _208600000X;
            if (str.equals("2086S0120X"))
                return _2086S0120X;
            if (str.equals("2086S0122X"))
                return _2086S0122X;
            if (str.equals("2086S0105X"))
                return _2086S0105X;
            if (str.equals("2086S0102X"))
                return _2086S0102X;
            if (str.equals("2086X0206X"))
                return _2086X0206X;
            if (str.equals("208G00000X"))
                return _208G00000X;
            if (str.equals("204F00000X"))
                return _204F00000X;
            if (str.equals("2086S0127X"))
                return _2086S0127X;
            if (str.equals("2086S0129X"))
                return _2086S0129X;
		    return null;
        }
    }

	/**
	* specDomain: S20679 (C-0-T19465-S20678-S20679-cpt)
	*/
    public enum ClinicCenterProviderCodes
    {
        
        _261Q00000X(0,"261Q00000X"),
        
        _261QM0855X(1,"261QM0855X"),
        
        _261QA0600X(2,"261QA0600X"),
        
        _261QM0850X(3,"261QM0850X"),
        
        _261QA0005X(4,"261QA0005X"),
        
        _261QA0006X(5,"261QA0006X"),
        
        _261QA1903X(6,"261QA1903X"),
        
        _261QA0900X(7,"261QA0900X"),
        
        _261QA3000X(8,"261QA3000X"),
        
        _261QB0400X(9,"261QB0400X"),
        
        _261QC1500X(10,"261QC1500X"),
        
        _261QC1800X(11,"261QC1800X"),
        
        _261QC0050X(12,"261QC0050X"),
        
        _261QD0000X(13,"261QD0000X"),
        
        _261QD1600X(14,"261QD1600X"),
        
        _261QE0002X(15,"261QE0002X"),
        
        _261QE0700X(16,"261QE0700X"),
        
        _261QE0800X(17,"261QE0800X"),
        
        _261QF0050X(18,"261QF0050X"),
        
        _261QF0400X(19,"261QF0400X"),
        
        _261QG0250X(20,"261QG0250X"),
        
        _261QH0100X(21,"261QH0100X"),
        
        _261QH0700X(22,"261QH0700X"),
        
        _261QI0500X(23,"261QI0500X"),
        
        _261QL0400X(24,"261QL0400X"),
        
        _261QM1200X(25,"261QM1200X"),
        
        _261QR0206X(26,"261QR0206X"),
        
        _261QM2500X(27,"261QM2500X"),
        
        _261QM3000X(28,"261QM3000X"),
        
        _261QM0801X(29,"261QM0801X"),
        
        _261QM2800X(30,"261QM2800X"),
        
        _261QM1000X(31,"261QM1000X"),
        
        _261QM1100X(32,"261QM1100X"),
        
        _261QM1101X(33,"261QM1101X"),
        
        _261QM1102X(34,"261QM1102X"),
        
        _261QR0208X(35,"261QR0208X"),
        
        _261QR0207X(36,"261QR0207X"),
        
        _261QM1300X(37,"261QM1300X"),
        
        _261QX0100X(38,"261QX0100X"),
        
        _261QX0200X(39,"261QX0200X"),
        
        _261QX0203X(40,"261QX0203X"),
        
        _261QS0132X(41,"261QS0132X"),
        
        _261QS0112X(42,"261QS0112X"),
        
        _261QP3300X(43,"261QP3300X"),
        
        _261QP2000X(44,"261QP2000X"),
        
        _261QP1100X(45,"261QP1100X"),
        
        _261QP2300X(46,"261QP2300X"),
        
        _261QP2400X(47,"261QP2400X"),
        
        _261QP0904X(48,"261QP0904X"),
        
        _261QP0905X(49,"261QP0905X"),
        
        _261QR0200X(50,"261QR0200X"),
        
        _261QR0800X(51,"261QR0800X"),
        
        _261QR0400X(52,"261QR0400X"),
        
        _261QR0401X(53,"261QR0401X"),
        
        _261QR0405X(54,"261QR0405X"),
        
        _261QR0404X(55,"261QR0404X"),
        
        _261QR1100X(56,"261QR1100X"),
        
        _261QR1300X(57,"261QR1300X"),
        
        _261QS1200X(58,"261QS1200X"),
        
        _261QS1000X(59,"261QS1000X"),
        
        _261QU0200X(60,"261QU0200X"),
        
        _261QV0200X(61,"261QV0200X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ClinicCenterProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ClinicCenterProviderCodes fromString(String str)
        {
            if (str.equals("261Q00000X"))
                return _261Q00000X;
            if (str.equals("261QM0855X"))
                return _261QM0855X;
            if (str.equals("261QA0600X"))
                return _261QA0600X;
            if (str.equals("261QM0850X"))
                return _261QM0850X;
            if (str.equals("261QA0005X"))
                return _261QA0005X;
            if (str.equals("261QA0006X"))
                return _261QA0006X;
            if (str.equals("261QA1903X"))
                return _261QA1903X;
            if (str.equals("261QA0900X"))
                return _261QA0900X;
            if (str.equals("261QA3000X"))
                return _261QA3000X;
            if (str.equals("261QB0400X"))
                return _261QB0400X;
            if (str.equals("261QC1500X"))
                return _261QC1500X;
            if (str.equals("261QC1800X"))
                return _261QC1800X;
            if (str.equals("261QC0050X"))
                return _261QC0050X;
            if (str.equals("261QD0000X"))
                return _261QD0000X;
            if (str.equals("261QD1600X"))
                return _261QD1600X;
            if (str.equals("261QE0002X"))
                return _261QE0002X;
            if (str.equals("261QE0700X"))
                return _261QE0700X;
            if (str.equals("261QE0800X"))
                return _261QE0800X;
            if (str.equals("261QF0050X"))
                return _261QF0050X;
            if (str.equals("261QF0400X"))
                return _261QF0400X;
            if (str.equals("261QG0250X"))
                return _261QG0250X;
            if (str.equals("261QH0100X"))
                return _261QH0100X;
            if (str.equals("261QH0700X"))
                return _261QH0700X;
            if (str.equals("261QI0500X"))
                return _261QI0500X;
            if (str.equals("261QL0400X"))
                return _261QL0400X;
            if (str.equals("261QM1200X"))
                return _261QM1200X;
            if (str.equals("261QR0206X"))
                return _261QR0206X;
            if (str.equals("261QM2500X"))
                return _261QM2500X;
            if (str.equals("261QM3000X"))
                return _261QM3000X;
            if (str.equals("261QM0801X"))
                return _261QM0801X;
            if (str.equals("261QM2800X"))
                return _261QM2800X;
            if (str.equals("261QM1000X"))
                return _261QM1000X;
            if (str.equals("261QM1100X"))
                return _261QM1100X;
            if (str.equals("261QM1101X"))
                return _261QM1101X;
            if (str.equals("261QM1102X"))
                return _261QM1102X;
            if (str.equals("261QR0208X"))
                return _261QR0208X;
            if (str.equals("261QR0207X"))
                return _261QR0207X;
            if (str.equals("261QM1300X"))
                return _261QM1300X;
            if (str.equals("261QX0100X"))
                return _261QX0100X;
            if (str.equals("261QX0200X"))
                return _261QX0200X;
            if (str.equals("261QX0203X"))
                return _261QX0203X;
            if (str.equals("261QS0132X"))
                return _261QS0132X;
            if (str.equals("261QS0112X"))
                return _261QS0112X;
            if (str.equals("261QP3300X"))
                return _261QP3300X;
            if (str.equals("261QP2000X"))
                return _261QP2000X;
            if (str.equals("261QP1100X"))
                return _261QP1100X;
            if (str.equals("261QP2300X"))
                return _261QP2300X;
            if (str.equals("261QP2400X"))
                return _261QP2400X;
            if (str.equals("261QP0904X"))
                return _261QP0904X;
            if (str.equals("261QP0905X"))
                return _261QP0905X;
            if (str.equals("261QR0200X"))
                return _261QR0200X;
            if (str.equals("261QR0800X"))
                return _261QR0800X;
            if (str.equals("261QR0400X"))
                return _261QR0400X;
            if (str.equals("261QR0401X"))
                return _261QR0401X;
            if (str.equals("261QR0405X"))
                return _261QR0405X;
            if (str.equals("261QR0404X"))
                return _261QR0404X;
            if (str.equals("261QR1100X"))
                return _261QR1100X;
            if (str.equals("261QR1300X"))
                return _261QR1300X;
            if (str.equals("261QS1200X"))
                return _261QS1200X;
            if (str.equals("261QS1000X"))
                return _261QS1000X;
            if (str.equals("261QU0200X"))
                return _261QU0200X;
            if (str.equals("261QV0200X"))
                return _261QV0200X;
		    return null;
        }
    }

	/**
	* specDomain: S20276 (C-0-T19465-S20275-S20276-cpt)
	*/
    public enum CounselorProviderCodes
    {
        
        _101Y00000X(0,"101Y00000X"),
        
        _101YA0400X(1,"101YA0400X"),
        
        _101YM0800X(2,"101YM0800X"),
        
        _101YP1600X(3,"101YP1600X"),
        
        _101YP2500X(4,"101YP2500X"),
        
        _101YS0200X(5,"101YS0200X");
        
        private int code;
        private java.lang.String xmlValue;
        
        CounselorProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CounselorProviderCodes fromString(String str)
        {
            if (str.equals("101Y00000X"))
                return _101Y00000X;
            if (str.equals("101YA0400X"))
                return _101YA0400X;
            if (str.equals("101YM0800X"))
                return _101YM0800X;
            if (str.equals("101YP1600X"))
                return _101YP1600X;
            if (str.equals("101YP2500X"))
                return _101YP2500X;
            if (str.equals("101YS0200X"))
                return _101YS0200X;
		    return null;
        }
    }

	/**
	* specDomain: S20283 (C-0-T19465-S20275-S20283-cpt)
	*/
    public enum NeuropsychologistProviderCodes
    {
        
        _103G00000X(0,"103G00000X"),
        
        _103GC0700X(1,"103GC0700X");
        
        private int code;
        private java.lang.String xmlValue;
        
        NeuropsychologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NeuropsychologistProviderCodes fromString(String str)
        {
            if (str.equals("103G00000X"))
                return _103G00000X;
            if (str.equals("103GC0700X"))
                return _103GC0700X;
		    return null;
        }
    }

	/**
	* specDomain: S20285 (C-0-T19465-S20275-S20285-cpt)
	*/
    public enum PsychologistProviderCodes
    {
        
        _103T00000X(0,"103T00000X"),
        
        _103TA0400X(1,"103TA0400X"),
        
        _103TA0700X(2,"103TA0700X"),
        
        _103TB0200X(3,"103TB0200X"),
        
        _103TC2200X(4,"103TC2200X"),
        
        _103TC0700X(5,"103TC0700X"),
        
        _103TC1900X(6,"103TC1900X"),
        
        _103TE1000X(7,"103TE1000X"),
        
        _103TE1100X(8,"103TE1100X"),
        
        _103TF0000X(9,"103TF0000X"),
        
        _103TF0200X(10,"103TF0200X"),
        
        _103TH0100X(11,"103TH0100X"),
        
        _103TM1700X(12,"103TM1700X"),
        
        _103TM1800X(13,"103TM1800X"),
        
        _103TP0814X(14,"103TP0814X"),
        
        _103TP2700X(15,"103TP2700X"),
        
        _103TP2701X(16,"103TP2701X"),
        
        _103TR0400X(17,"103TR0400X"),
        
        _103TS0200X(18,"103TS0200X"),
        
        _103TW0100X(19,"103TW0100X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PsychologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PsychologistProviderCodes fromString(String str)
        {
            if (str.equals("103T00000X"))
                return _103T00000X;
            if (str.equals("103TA0400X"))
                return _103TA0400X;
            if (str.equals("103TA0700X"))
                return _103TA0700X;
            if (str.equals("103TB0200X"))
                return _103TB0200X;
            if (str.equals("103TC2200X"))
                return _103TC2200X;
            if (str.equals("103TC0700X"))
                return _103TC0700X;
            if (str.equals("103TC1900X"))
                return _103TC1900X;
            if (str.equals("103TE1000X"))
                return _103TE1000X;
            if (str.equals("103TE1100X"))
                return _103TE1100X;
            if (str.equals("103TF0000X"))
                return _103TF0000X;
            if (str.equals("103TF0200X"))
                return _103TF0200X;
            if (str.equals("103TH0100X"))
                return _103TH0100X;
            if (str.equals("103TM1700X"))
                return _103TM1700X;
            if (str.equals("103TM1800X"))
                return _103TM1800X;
            if (str.equals("103TP0814X"))
                return _103TP0814X;
            if (str.equals("103TP2700X"))
                return _103TP2700X;
            if (str.equals("103TP2701X"))
                return _103TP2701X;
            if (str.equals("103TR0400X"))
                return _103TR0400X;
            if (str.equals("103TS0200X"))
                return _103TS0200X;
            if (str.equals("103TW0100X"))
                return _103TW0100X;
		    return null;
        }
    }

	/**
	* specDomain: S20305 (C-0-T19465-S20275-S20305-cpt)
	*/
    public enum SocialWorkerProviderCodes
    {
        
        _104100000X(0,"104100000X"),
        
        _1041C0700X(1,"1041C0700X"),
        
        _1041S0200X(2,"1041S0200X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SocialWorkerProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SocialWorkerProviderCodes fromString(String str)
        {
            if (str.equals("104100000X"))
                return _104100000X;
            if (str.equals("1041C0700X"))
                return _1041C0700X;
            if (str.equals("1041S0200X"))
                return _1041S0200X;
		    return null;
        }
    }

	/**
	* specDomain: S20309 (C-0-T19465-S20308-S20309-cpt)
	*/
    public enum ChiropractorProviderCodes
    {
        
        _111N00000X(0,"111N00000X"),
        
        _111NI0900X(1,"111NI0900X"),
        
        _111NN0400X(2,"111NN0400X"),
        
        _111NN1001X(3,"111NN1001X"),
        
        _111NX0100X(4,"111NX0100X"),
        
        _111NX0800X(5,"111NX0800X"),
        
        _111NR0200X(6,"111NR0200X"),
        
        _111NS0005X(7,"111NS0005X"),
        
        _111NT0100X(8,"111NT0100X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ChiropractorProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ChiropractorProviderCodes fromString(String str)
        {
            if (str.equals("111N00000X"))
                return _111N00000X;
            if (str.equals("111NI0900X"))
                return _111NI0900X;
            if (str.equals("111NN0400X"))
                return _111NN0400X;
            if (str.equals("111NN1001X"))
                return _111NN1001X;
            if (str.equals("111NX0100X"))
                return _111NX0100X;
            if (str.equals("111NX0800X"))
                return _111NX0800X;
            if (str.equals("111NR0200X"))
                return _111NR0200X;
            if (str.equals("111NS0005X"))
                return _111NS0005X;
            if (str.equals("111NT0100X"))
                return _111NT0100X;
		    return null;
        }
    }

	/**
	* specDomain: S20322 (C-0-T19465-S20318-S20322-cpt)
	*/
    public enum DentistProviderCodes
    {
        
        _122300000X(0,"122300000X"),
        
        _1223D0001X(1,"1223D0001X"),
        
        _1223E0200X(2,"1223E0200X"),
        
        _1223G0001X(3,"1223G0001X"),
        
        _1223P0106X(4,"1223P0106X"),
        
        _1223X0008X(5,"1223X0008X"),
        
        _1223S0112X(6,"1223S0112X"),
        
        _1223X0400X(7,"1223X0400X"),
        
        _1223P0221X(8,"1223P0221X"),
        
        _1223P0300X(9,"1223P0300X"),
        
        _1223P0700X(10,"1223P0700X");
        
        private int code;
        private java.lang.String xmlValue;
        
        DentistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DentistProviderCodes fromString(String str)
        {
            if (str.equals("122300000X"))
                return _122300000X;
            if (str.equals("1223D0001X"))
                return _1223D0001X;
            if (str.equals("1223E0200X"))
                return _1223E0200X;
            if (str.equals("1223G0001X"))
                return _1223G0001X;
            if (str.equals("1223P0106X"))
                return _1223P0106X;
            if (str.equals("1223X0008X"))
                return _1223X0008X;
            if (str.equals("1223S0112X"))
                return _1223S0112X;
            if (str.equals("1223X0400X"))
                return _1223X0400X;
            if (str.equals("1223P0221X"))
                return _1223P0221X;
            if (str.equals("1223P0300X"))
                return _1223P0300X;
            if (str.equals("1223P0700X"))
                return _1223P0700X;
		    return null;
        }
    }

	/**
	* specDomain: S20337 (C-0-T19465-S20334-S20337-cpt)
	*/
    public enum DietitianRegisteredProviderCodes
    {
        
        _133V00000X(0,"133V00000X"),
        
        _133VN1006X(1,"133VN1006X"),
        
        _133VN1004X(2,"133VN1004X"),
        
        _133VN1005X(3,"133VN1005X");
        
        private int code;
        private java.lang.String xmlValue;
        
        DietitianRegisteredProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DietitianRegisteredProviderCodes fromString(String str)
        {
            if (str.equals("133V00000X"))
                return _133V00000X;
            if (str.equals("133VN1006X"))
                return _133VN1006X;
            if (str.equals("133VN1004X"))
                return _133VN1004X;
            if (str.equals("133VN1005X"))
                return _133VN1005X;
		    return null;
        }
    }

	/**
	* specDomain: S20341 (C-0-T19465-S20334-S20341-cpt)
	*/
    public enum NutritionistProviderCodes
    {
        
        _133N00000X(0,"133N00000X"),
        
        _133NN1002X(1,"133NN1002X");
        
        private int code;
        private java.lang.String xmlValue;
        
        NutritionistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NutritionistProviderCodes fromString(String str)
        {
            if (str.equals("133N00000X"))
                return _133N00000X;
            if (str.equals("133NN1002X"))
                return _133NN1002X;
		    return null;
        }
    }

	/**
	* specDomain: S20343 (C-0-T19465-S20343-cpt)
	*/
    public enum EmergencyMedicalServiceProvidersProviderCodes
    {
        
        _140000000X(0,"140000000X"),
        
        _146N00000X(1,"146N00000X"),
        
        _146M00000X(2,"146M00000X"),
        
        _146L00000X(3,"146L00000X"),
        
        _146D00000X(4,"146D00000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        EmergencyMedicalServiceProvidersProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static EmergencyMedicalServiceProvidersProviderCodes fromString(String str)
        {
            if (str.equals("140000000X"))
                return _140000000X;
            if (str.equals("146N00000X"))
                return _146N00000X;
            if (str.equals("146M00000X"))
                return _146M00000X;
            if (str.equals("146L00000X"))
                return _146L00000X;
            if (str.equals("146D00000X"))
                return _146D00000X;
		    return null;
        }
    }

	/**
	* specDomain: S20349 (C-0-T19465-S20348-S20349-cpt)
	*/
    public enum OptometristProviderCodes
    {
        
        _152W00000X(0,"152W00000X"),
        
        _152WC0802X(1,"152WC0802X"),
        
        _152WL0500X(2,"152WL0500X"),
        
        _152WX0102X(3,"152WX0102X"),
        
        _152WP0200X(4,"152WP0200X"),
        
        _152WS0006X(5,"152WS0006X"),
        
        _152WV0400X(6,"152WV0400X");
        
        private int code;
        private java.lang.String xmlValue;
        
        OptometristProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OptometristProviderCodes fromString(String str)
        {
            if (str.equals("152W00000X"))
                return _152W00000X;
            if (str.equals("152WC0802X"))
                return _152WC0802X;
            if (str.equals("152WL0500X"))
                return _152WL0500X;
            if (str.equals("152WX0102X"))
                return _152WX0102X;
            if (str.equals("152WP0200X"))
                return _152WP0200X;
            if (str.equals("152WS0006X"))
                return _152WS0006X;
            if (str.equals("152WV0400X"))
                return _152WV0400X;
		    return null;
        }
    }

	/**
	* specDomain: S20356 (C-0-T19465-S20348-S20356-cpt)
	*/
    public enum TechnicianTechnologistProviderCodes
    {
        
        _156F00000X(0,"156F00000X"),
        
        _156FC0800X(1,"156FC0800X"),
        
        _156FC0801X(2,"156FC0801X"),
        
        _156FX1700X(3,"156FX1700X"),
        
        _156FX1100X(4,"156FX1100X"),
        
        _156FX1101X(5,"156FX1101X"),
        
        _156FX1800X(6,"156FX1800X"),
        
        _156FX1201X(7,"156FX1201X"),
        
        _156FX1202X(8,"156FX1202X"),
        
        _156FX1900X(9,"156FX1900X");
        
        private int code;
        private java.lang.String xmlValue;
        
        TechnicianTechnologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TechnicianTechnologistProviderCodes fromString(String str)
        {
            if (str.equals("156F00000X"))
                return _156F00000X;
            if (str.equals("156FC0800X"))
                return _156FC0800X;
            if (str.equals("156FC0801X"))
                return _156FC0801X;
            if (str.equals("156FX1700X"))
                return _156FX1700X;
            if (str.equals("156FX1100X"))
                return _156FX1100X;
            if (str.equals("156FX1101X"))
                return _156FX1101X;
            if (str.equals("156FX1800X"))
                return _156FX1800X;
            if (str.equals("156FX1201X"))
                return _156FX1201X;
            if (str.equals("156FX1202X"))
                return _156FX1202X;
            if (str.equals("156FX1900X"))
                return _156FX1900X;
		    return null;
        }
    }

	/**
	* specDomain: S20800 (C-0-T19465-S20800-cpt)
	*/
    public enum GroupProviderCodes
    {
        
        _190000000X(0,"190000000X"),
        
        _193200000X(1,"193200000X"),
        
        _193400000X(2,"193400000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        GroupProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static GroupProviderCodes fromString(String str)
        {
            if (str.equals("190000000X"))
                return _190000000X;
            if (str.equals("193200000X"))
                return _193200000X;
            if (str.equals("193400000X"))
                return _193400000X;
		    return null;
        }
    }

	/**
	* specDomain: S20728 (C-0-T19465-S20728-cpt)
	*/
    public enum HospitalUnitsProviderCodes
    {
        
        _270000000X(0,"270000000X"),
        
        _275N00000X(1,"275N00000X"),
        
        _273R00000X(2,"273R00000X"),
        
        _273Y00000X(3,"273Y00000X"),
        
        _276400000X(4,"276400000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        HospitalUnitsProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static HospitalUnitsProviderCodes fromString(String str)
        {
            if (str.equals("270000000X"))
                return _270000000X;
            if (str.equals("275N00000X"))
                return _275N00000X;
            if (str.equals("273R00000X"))
                return _273R00000X;
            if (str.equals("273Y00000X"))
                return _273Y00000X;
            if (str.equals("276400000X"))
                return _276400000X;
		    return null;
        }
    }

	/**
	* specDomain: S20735 (C-0-T19465-S20733-S20735-cpt)
	*/
    public enum ChronicDiseaseHospitalProviderCodes
    {
        
        _281P00000X(0,"281P00000X"),
        
        _281PC2000X(1,"281PC2000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ChronicDiseaseHospitalProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ChronicDiseaseHospitalProviderCodes fromString(String str)
        {
            if (str.equals("281P00000X"))
                return _281P00000X;
            if (str.equals("281PC2000X"))
                return _281PC2000X;
		    return null;
        }
    }

	/**
	* specDomain: S20737 (C-0-T19465-S20733-S20737-cpt)
	*/
    public enum GeneralAcuteCareHospitalProviderCodes
    {
        
        _282N00000X(0,"282N00000X"),
        
        _282NC2000X(1,"282NC2000X"),
        
        _282NC0060X(2,"282NC0060X"),
        
        _282NR1301X(3,"282NR1301X"),
        
        _282NW0100X(4,"282NW0100X");
        
        private int code;
        private java.lang.String xmlValue;
        
        GeneralAcuteCareHospitalProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static GeneralAcuteCareHospitalProviderCodes fromString(String str)
        {
            if (str.equals("282N00000X"))
                return _282N00000X;
            if (str.equals("282NC2000X"))
                return _282NC2000X;
            if (str.equals("282NC0060X"))
                return _282NC0060X;
            if (str.equals("282NR1301X"))
                return _282NR1301X;
            if (str.equals("282NW0100X"))
                return _282NW0100X;
		    return null;
        }
    }

	/**
	* specDomain: S20741 (C-0-T19465-S20733-S20741-cpt)
	*/
    public enum MilitaryHospitalProviderCodes
    {
        
        _286500000X(0,"286500000X"),
        
        _2865C1500X(1,"2865C1500X"),
        
        _2865M2000X(2,"2865M2000X"),
        
        _2865X1600X(3,"2865X1600X");
        
        private int code;
        private java.lang.String xmlValue;
        
        MilitaryHospitalProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static MilitaryHospitalProviderCodes fromString(String str)
        {
            if (str.equals("286500000X"))
                return _286500000X;
            if (str.equals("2865C1500X"))
                return _2865C1500X;
            if (str.equals("2865M2000X"))
                return _2865M2000X;
            if (str.equals("2865X1600X"))
                return _2865X1600X;
		    return null;
        }
    }

	/**
	* specDomain: S20746 (C-0-T19465-S20733-S20746-cpt)
	*/
    public enum RehabilitationHospitalProviderCodes
    {
        
        _283X00000X(0,"283X00000X"),
        
        _283XC2000X(1,"283XC2000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RehabilitationHospitalProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RehabilitationHospitalProviderCodes fromString(String str)
        {
            if (str.equals("283X00000X"))
                return _283X00000X;
            if (str.equals("283XC2000X"))
                return _283XC2000X;
		    return null;
        }
    }

	/**
	* specDomain: S20749 (C-0-T19465-S20749-cpt)
	*/
    public enum LaboratoriesProviderCodes
    {
        
        _290000000X(0,"290000000X"),
        
        _291U00000X(1,"291U00000X"),
        
        _292200000X(2,"292200000X"),
        
        _293D00000X(3,"293D00000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        LaboratoriesProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static LaboratoriesProviderCodes fromString(String str)
        {
            if (str.equals("290000000X"))
                return _290000000X;
            if (str.equals("291U00000X"))
                return _291U00000X;
            if (str.equals("292200000X"))
                return _292200000X;
            if (str.equals("293D00000X"))
                return _293D00000X;
		    return null;
        }
    }

	/**
	* specDomain: S20753 (C-0-T19465-S20753-cpt)
	*/
    public enum ManagedCareOrganizationsProviderCodes
    {
        
        _300000000X(0,"300000000X"),
        
        _302F00000X(1,"302F00000X"),
        
        _302R00000X(2,"302R00000X"),
        
        _305S00000X(3,"305S00000X"),
        
        _305R00000X(4,"305R00000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ManagedCareOrganizationsProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ManagedCareOrganizationsProviderCodes fromString(String str)
        {
            if (str.equals("300000000X"))
                return _300000000X;
            if (str.equals("302F00000X"))
                return _302F00000X;
            if (str.equals("302R00000X"))
                return _302R00000X;
            if (str.equals("305S00000X"))
                return _305S00000X;
            if (str.equals("305R00000X"))
                return _305R00000X;
		    return null;
        }
    }

	/**
	* specDomain: S20370 (C-0-T19465-S20366-S20370-cpt)
	*/
    public enum RegisteredNurseProviderCodes
    {
        
        _163W00000X(0,"163W00000X"),
        
        _163WA0400X(1,"163WA0400X"),
        
        _163WA2000X(2,"163WA2000X"),
        
        _163WP2201X(3,"163WP2201X"),
        
        _163WC3500X(4,"163WC3500X"),
        
        _163WC0400X(5,"163WC0400X"),
        
        _163WC1400X(6,"163WC1400X"),
        
        _163WC1500X(7,"163WC1500X"),
        
        _163WC2100X(8,"163WC2100X"),
        
        _163WC1600X(9,"163WC1600X"),
        
        _163WC0200X(10,"163WC0200X"),
        
        _163WD0400X(11,"163WD0400X"),
        
        _163WD1100X(12,"163WD1100X"),
        
        _163WE0003X(13,"163WE0003X"),
        
        _163WE0900X(14,"163WE0900X"),
        
        _163WF0300X(15,"163WF0300X"),
        
        _163WG0100X(16,"163WG0100X"),
        
        _163WG0000X(17,"163WG0000X"),
        
        _163WG0600X(18,"163WG0600X"),
        
        _163WH0500X(19,"163WH0500X"),
        
        _163WH0200X(20,"163WH0200X"),
        
        _163WH1000X(21,"163WH1000X"),
        
        _163WI0600X(22,"163WI0600X"),
        
        _163WI0500X(23,"163WI0500X"),
        
        _163WL0100X(24,"163WL0100X"),
        
        _163WM0102X(25,"163WM0102X"),
        
        _163WM0705X(26,"163WM0705X"),
        
        _163WN0002X(27,"163WN0002X"),
        
        _163WN0003X(28,"163WN0003X"),
        
        _163WN0300X(29,"163WN0300X"),
        
        _163WN0800X(30,"163WN0800X"),
        
        _163WM1400X(31,"163WM1400X"),
        
        _163WN1003X(32,"163WN1003X"),
        
        _163WX0002X(33,"163WX0002X"),
        
        _163WX0003X(34,"163WX0003X"),
        
        _163WX0106X(35,"163WX0106X"),
        
        _163WX0200X(36,"163WX0200X"),
        
        _163WX1100X(37,"163WX1100X"),
        
        _163WX0800X(38,"163WX0800X"),
        
        _163WX1500X(39,"163WX1500X"),
        
        _163WX0601X(40,"163WX0601X"),
        
        _163WP0000X(41,"163WP0000X"),
        
        _163WP0218X(42,"163WP0218X"),
        
        _163WP0200X(43,"163WP0200X"),
        
        _163WP1700X(44,"163WP1700X"),
        
        _163WS0121X(45,"163WS0121X"),
        
        _163WP0808X(46,"163WP0808X"),
        
        _163WP0809X(47,"163WP0809X"),
        
        _163WP0807X(48,"163WP0807X"),
        
        _163WR0400X(49,"163WR0400X"),
        
        _163WR1000X(50,"163WR1000X"),
        
        _163WS0200X(51,"163WS0200X"),
        
        _163WU0100X(52,"163WU0100X"),
        
        _163WW0101X(53,"163WW0101X"),
        
        _163WW0000X(54,"163WW0000X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RegisteredNurseProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RegisteredNurseProviderCodes fromString(String str)
        {
            if (str.equals("163W00000X"))
                return _163W00000X;
            if (str.equals("163WA0400X"))
                return _163WA0400X;
            if (str.equals("163WA2000X"))
                return _163WA2000X;
            if (str.equals("163WP2201X"))
                return _163WP2201X;
            if (str.equals("163WC3500X"))
                return _163WC3500X;
            if (str.equals("163WC0400X"))
                return _163WC0400X;
            if (str.equals("163WC1400X"))
                return _163WC1400X;
            if (str.equals("163WC1500X"))
                return _163WC1500X;
            if (str.equals("163WC2100X"))
                return _163WC2100X;
            if (str.equals("163WC1600X"))
                return _163WC1600X;
            if (str.equals("163WC0200X"))
                return _163WC0200X;
            if (str.equals("163WD0400X"))
                return _163WD0400X;
            if (str.equals("163WD1100X"))
                return _163WD1100X;
            if (str.equals("163WE0003X"))
                return _163WE0003X;
            if (str.equals("163WE0900X"))
                return _163WE0900X;
            if (str.equals("163WF0300X"))
                return _163WF0300X;
            if (str.equals("163WG0100X"))
                return _163WG0100X;
            if (str.equals("163WG0000X"))
                return _163WG0000X;
            if (str.equals("163WG0600X"))
                return _163WG0600X;
            if (str.equals("163WH0500X"))
                return _163WH0500X;
            if (str.equals("163WH0200X"))
                return _163WH0200X;
            if (str.equals("163WH1000X"))
                return _163WH1000X;
            if (str.equals("163WI0600X"))
                return _163WI0600X;
            if (str.equals("163WI0500X"))
                return _163WI0500X;
            if (str.equals("163WL0100X"))
                return _163WL0100X;
            if (str.equals("163WM0102X"))
                return _163WM0102X;
            if (str.equals("163WM0705X"))
                return _163WM0705X;
            if (str.equals("163WN0002X"))
                return _163WN0002X;
            if (str.equals("163WN0003X"))
                return _163WN0003X;
            if (str.equals("163WN0300X"))
                return _163WN0300X;
            if (str.equals("163WN0800X"))
                return _163WN0800X;
            if (str.equals("163WM1400X"))
                return _163WM1400X;
            if (str.equals("163WN1003X"))
                return _163WN1003X;
            if (str.equals("163WX0002X"))
                return _163WX0002X;
            if (str.equals("163WX0003X"))
                return _163WX0003X;
            if (str.equals("163WX0106X"))
                return _163WX0106X;
            if (str.equals("163WX0200X"))
                return _163WX0200X;
            if (str.equals("163WX1100X"))
                return _163WX1100X;
            if (str.equals("163WX0800X"))
                return _163WX0800X;
            if (str.equals("163WX1500X"))
                return _163WX1500X;
            if (str.equals("163WX0601X"))
                return _163WX0601X;
            if (str.equals("163WP0000X"))
                return _163WP0000X;
            if (str.equals("163WP0218X"))
                return _163WP0218X;
            if (str.equals("163WP0200X"))
                return _163WP0200X;
            if (str.equals("163WP1700X"))
                return _163WP1700X;
            if (str.equals("163WS0121X"))
                return _163WS0121X;
            if (str.equals("163WP0808X"))
                return _163WP0808X;
            if (str.equals("163WP0809X"))
                return _163WP0809X;
            if (str.equals("163WP0807X"))
                return _163WP0807X;
            if (str.equals("163WR0400X"))
                return _163WR0400X;
            if (str.equals("163WR1000X"))
                return _163WR1000X;
            if (str.equals("163WS0200X"))
                return _163WS0200X;
            if (str.equals("163WU0100X"))
                return _163WU0100X;
            if (str.equals("163WW0101X"))
                return _163WW0101X;
            if (str.equals("163WW0000X"))
                return _163WW0000X;
		    return null;
        }
    }

	/**
	* specDomain: S20432 (C-0-T19465-S20425-S20432-cpt)
	*/
    public enum TechnicianProviderCodes
    {
        
        _374700000X(0,"374700000X"),
        
        _3747A0650X(1,"3747A0650X"),
        
        _3747P1801X(2,"3747P1801X");
        
        private int code;
        private java.lang.String xmlValue;
        
        TechnicianProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TechnicianProviderCodes fromString(String str)
        {
            if (str.equals("374700000X"))
                return _374700000X;
            if (str.equals("3747A0650X"))
                return _3747A0650X;
            if (str.equals("3747P1801X"))
                return _3747P1801X;
		    return null;
        }
    }

	/**
	* specDomain: S20820 (C-0-T19465-S20758-S20820-cpt)
	*/
    public enum AssistedLivingFacilityProviderCodes
    {
        
        _310400000X(0,"310400000X"),
        
        _3104A0630X(1,"3104A0630X"),
        
        _3104A0625X(2,"3104A0625X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AssistedLivingFacilityProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AssistedLivingFacilityProviderCodes fromString(String str)
        {
            if (str.equals("310400000X"))
                return _310400000X;
            if (str.equals("3104A0630X"))
                return _3104A0630X;
            if (str.equals("3104A0625X"))
                return _3104A0625X;
		    return null;
        }
    }

	/**
	* specDomain: S20761 (C-0-T19465-S20758-S20761-cpt)
	*/
    public enum CustodialCareFacilityProviderCodes
    {
        
        _311Z00000X(0,"311Z00000X"),
        
        _311ZA0620X(1,"311ZA0620X");
        
        private int code;
        private java.lang.String xmlValue;
        
        CustodialCareFacilityProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static CustodialCareFacilityProviderCodes fromString(String str)
        {
            if (str.equals("311Z00000X"))
                return _311Z00000X;
            if (str.equals("311ZA0620X"))
                return _311ZA0620X;
		    return null;
        }
    }

	/**
	* specDomain: S20765 (C-0-T19465-S20758-S20765-cpt)
	*/
    public enum SkilledNursingFacilityProviderCodes
    {
        
        _314000000X(0,"314000000X"),
        
        _3140N1450X(1,"3140N1450X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SkilledNursingFacilityProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SkilledNursingFacilityProviderCodes fromString(String str)
        {
            if (str.equals("314000000X"))
                return _314000000X;
            if (str.equals("3140N1450X"))
                return _3140N1450X;
		    return null;
        }
    }

	/**
	* specDomain: S20436 (C-0-T19465-S20434-S20436-cpt)
	*/
    public enum ContractorProviderCodes
    {
        
        _171W00000X(0,"171W00000X"),
        
        _171WH0202X(1,"171WH0202X"),
        
        _171WV0202X(2,"171WV0202X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ContractorProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ContractorProviderCodes fromString(String str)
        {
            if (str.equals("171W00000X"))
                return _171W00000X;
            if (str.equals("171WH0202X"))
                return _171WH0202X;
            if (str.equals("171WV0202X"))
                return _171WV0202X;
		    return null;
        }
    }

	/**
	* specDomain: S20453 (C-0-T19465-S20434-S20448-S20453-cpt)
	*/
    public enum VeterinarianProviderCodes
    {
        
        _174M00000X(0,"174M00000X"),
        
        _174MM1900X(1,"174MM1900X");
        
        private int code;
        private java.lang.String xmlValue;
        
        VeterinarianProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static VeterinarianProviderCodes fromString(String str)
        {
            if (str.equals("174M00000X"))
                return _174M00000X;
            if (str.equals("174MM1900X"))
                return _174MM1900X;
		    return null;
        }
    }

	/**
	* specDomain: S20456 (C-0-T19465-S20455-S20456-cpt)
	*/
    public enum PharmacistProviderCodes
    {
        
        _183500000X(0,"183500000X"),
        
        _1835G0000X(1,"1835G0000X"),
        
        _1835N0905X(2,"1835N0905X"),
        
        _1835N1003X(3,"1835N1003X"),
        
        _1835P1200X(4,"1835P1200X"),
        
        _1835P1300X(5,"1835P1300X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PharmacistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PharmacistProviderCodes fromString(String str)
        {
            if (str.equals("183500000X"))
                return _183500000X;
            if (str.equals("1835G0000X"))
                return _1835G0000X;
            if (str.equals("1835N0905X"))
                return _1835N0905X;
            if (str.equals("1835N1003X"))
                return _1835N1003X;
            if (str.equals("1835P1200X"))
                return _1835P1200X;
            if (str.equals("1835P1300X"))
                return _1835P1300X;
		    return null;
        }
    }

	/**
	* specDomain: S20465 (C-0-T19465-S20463-S20465-cpt)
	*/
    public enum ClinicalNurseSpecialistProviderCodes
    {
        
        _364S00000X(0,"364S00000X"),
        
        _364SA2100X(1,"364SA2100X"),
        
        _364SA2200X(2,"364SA2200X"),
        
        _364SC2300X(3,"364SC2300X"),
        
        _364SC1501X(4,"364SC1501X"),
        
        _364SC0200X(5,"364SC0200X"),
        
        _364SE0003X(6,"364SE0003X"),
        
        _364SE1400X(7,"364SE1400X"),
        
        _364SF0001X(8,"364SF0001X"),
        
        _364SG0600X(9,"364SG0600X"),
        
        _364SH1100X(10,"364SH1100X"),
        
        _364SH0200X(11,"364SH0200X"),
        
        _364SI0800X(12,"364SI0800X"),
        
        _364SL0600X(13,"364SL0600X"),
        
        _364SM0705X(14,"364SM0705X"),
        
        _364SN0000X(15,"364SN0000X"),
        
        _364SN0800X(16,"364SN0800X"),
        
        _364SX0106X(17,"364SX0106X"),
        
        _364SX0200X(18,"364SX0200X"),
        
        _364SX0204X(19,"364SX0204X"),
        
        _364SP0200X(20,"364SP0200X"),
        
        _364SP1700X(21,"364SP1700X"),
        
        _364SP2800X(22,"364SP2800X"),
        
        _364SP0808X(23,"364SP0808X"),
        
        _364SP0809X(24,"364SP0809X"),
        
        _364SP0807X(25,"364SP0807X"),
        
        _364SP0810X(26,"364SP0810X"),
        
        _364SP0811X(27,"364SP0811X"),
        
        _364SP0812X(28,"364SP0812X"),
        
        _364SP0813X(29,"364SP0813X"),
        
        _364SR0400X(30,"364SR0400X"),
        
        _364SS0200X(31,"364SS0200X"),
        
        _364ST0500X(32,"364ST0500X"),
        
        _364SW0102X(33,"364SW0102X");
        
        private int code;
        private java.lang.String xmlValue;
        
        ClinicalNurseSpecialistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ClinicalNurseSpecialistProviderCodes fromString(String str)
        {
            if (str.equals("364S00000X"))
                return _364S00000X;
            if (str.equals("364SA2100X"))
                return _364SA2100X;
            if (str.equals("364SA2200X"))
                return _364SA2200X;
            if (str.equals("364SC2300X"))
                return _364SC2300X;
            if (str.equals("364SC1501X"))
                return _364SC1501X;
            if (str.equals("364SC0200X"))
                return _364SC0200X;
            if (str.equals("364SE0003X"))
                return _364SE0003X;
            if (str.equals("364SE1400X"))
                return _364SE1400X;
            if (str.equals("364SF0001X"))
                return _364SF0001X;
            if (str.equals("364SG0600X"))
                return _364SG0600X;
            if (str.equals("364SH1100X"))
                return _364SH1100X;
            if (str.equals("364SH0200X"))
                return _364SH0200X;
            if (str.equals("364SI0800X"))
                return _364SI0800X;
            if (str.equals("364SL0600X"))
                return _364SL0600X;
            if (str.equals("364SM0705X"))
                return _364SM0705X;
            if (str.equals("364SN0000X"))
                return _364SN0000X;
            if (str.equals("364SN0800X"))
                return _364SN0800X;
            if (str.equals("364SX0106X"))
                return _364SX0106X;
            if (str.equals("364SX0200X"))
                return _364SX0200X;
            if (str.equals("364SX0204X"))
                return _364SX0204X;
            if (str.equals("364SP0200X"))
                return _364SP0200X;
            if (str.equals("364SP1700X"))
                return _364SP1700X;
            if (str.equals("364SP2800X"))
                return _364SP2800X;
            if (str.equals("364SP0808X"))
                return _364SP0808X;
            if (str.equals("364SP0809X"))
                return _364SP0809X;
            if (str.equals("364SP0807X"))
                return _364SP0807X;
            if (str.equals("364SP0810X"))
                return _364SP0810X;
            if (str.equals("364SP0811X"))
                return _364SP0811X;
            if (str.equals("364SP0812X"))
                return _364SP0812X;
            if (str.equals("364SP0813X"))
                return _364SP0813X;
            if (str.equals("364SR0400X"))
                return _364SR0400X;
            if (str.equals("364SS0200X"))
                return _364SS0200X;
            if (str.equals("364ST0500X"))
                return _364ST0500X;
            if (str.equals("364SW0102X"))
                return _364SW0102X;
		    return null;
        }
    }

	/**
	* specDomain: S20519 (C-0-T19465-S20463-S20501-S20519-cpt)
	*/
    public enum PhysicianAssistantProviderCodes
    {
        
        _363A00000X(0,"363A00000X"),
        
        _363AM0700X(1,"363AM0700X"),
        
        _363AS0400X(2,"363AS0400X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicianAssistantProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicianAssistantProviderCodes fromString(String str)
        {
            if (str.equals("363A00000X"))
                return _363A00000X;
            if (str.equals("363AM0700X"))
                return _363AM0700X;
            if (str.equals("363AS0400X"))
                return _363AS0400X;
		    return null;
        }
    }

	/**
	* specDomain: S20524 (C-0-T19465-S20522-S20524-cpt)
	*/
    public enum PodiatristProviderCodes
    {
        
        _213E00000X(0,"213E00000X"),
        
        _213EG0000X(1,"213EG0000X"),
        
        _213EP1101X(2,"213EP1101X"),
        
        _213EP0504X(3,"213EP0504X"),
        
        _213ER0200X(4,"213ER0200X"),
        
        _213ES0000X(5,"213ES0000X"),
        
        _213ES0131X(6,"213ES0131X"),
        
        _213ES0103X(7,"213ES0103X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PodiatristProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PodiatristProviderCodes fromString(String str)
        {
            if (str.equals("213E00000X"))
                return _213E00000X;
            if (str.equals("213EG0000X"))
                return _213EG0000X;
            if (str.equals("213EP1101X"))
                return _213EP1101X;
            if (str.equals("213EP0504X"))
                return _213EP0504X;
            if (str.equals("213ER0200X"))
                return _213ER0200X;
            if (str.equals("213ES0000X"))
                return _213ES0000X;
            if (str.equals("213ES0131X"))
                return _213ES0131X;
            if (str.equals("213ES0103X"))
                return _213ES0103X;
		    return null;
        }
    }

	/**
	* specDomain: S20769 (C-0-T19465-S20766-S20769-cpt)
	*/
    public enum SubstanceAbuseDisorderRehabilitationFacilityProviderCodes
    {
        
        _324500000X(0,"324500000X"),
        
        _3245S0500X(1,"3245S0500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SubstanceAbuseDisorderRehabilitationFacilityProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SubstanceAbuseDisorderRehabilitationFacilityProviderCodes fromString(String str)
        {
            if (str.equals("324500000X"))
                return _324500000X;
            if (str.equals("3245S0500X"))
                return _3245S0500X;
		    return null;
        }
    }

	/**
	* specDomain: S20538 (C-0-T19465-S20532-S20538-cpt)
	*/
    public enum OccupationalTherapistProviderCodes
    {
        
        _225X00000X(0,"225X00000X"),
        
        _225XE1200X(1,"225XE1200X"),
        
        _225XH1200X(2,"225XH1200X"),
        
        _225XH1300X(3,"225XH1300X"),
        
        _225XN1300X(4,"225XN1300X"),
        
        _225XP0200X(5,"225XP0200X"),
        
        _225XR0403X(6,"225XR0403X");
        
        private int code;
        private java.lang.String xmlValue;
        
        OccupationalTherapistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static OccupationalTherapistProviderCodes fromString(String str)
        {
            if (str.equals("225X00000X"))
                return _225X00000X;
            if (str.equals("225XE1200X"))
                return _225XE1200X;
            if (str.equals("225XH1200X"))
                return _225XH1200X;
            if (str.equals("225XH1300X"))
                return _225XH1300X;
            if (str.equals("225XN1300X"))
                return _225XN1300X;
            if (str.equals("225XP0200X"))
                return _225XP0200X;
            if (str.equals("225XR0403X"))
                return _225XR0403X;
		    return null;
        }
    }

	/**
	* specDomain: S20548 (C-0-T19465-S20532-S20548-cpt)
	*/
    public enum PhysicalTherapistProviderCodes
    {
        
        _225100000X(0,"225100000X"),
        
        _2251C2600X(1,"2251C2600X"),
        
        _2251E1300X(2,"2251E1300X"),
        
        _2251E1200X(3,"2251E1200X"),
        
        _2251G0304X(4,"2251G0304X"),
        
        _2251H1200X(5,"2251H1200X"),
        
        _2251H1300X(6,"2251H1300X"),
        
        _2251N0400X(7,"2251N0400X"),
        
        _2251X0800X(8,"2251X0800X"),
        
        _2251P0200X(9,"2251P0200X"),
        
        _2251S0007X(10,"2251S0007X");
        
        private int code;
        private java.lang.String xmlValue;
        
        PhysicalTherapistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static PhysicalTherapistProviderCodes fromString(String str)
        {
            if (str.equals("225100000X"))
                return _225100000X;
            if (str.equals("2251C2600X"))
                return _2251C2600X;
            if (str.equals("2251E1300X"))
                return _2251E1300X;
            if (str.equals("2251E1200X"))
                return _2251E1200X;
            if (str.equals("2251G0304X"))
                return _2251G0304X;
            if (str.equals("2251H1200X"))
                return _2251H1200X;
            if (str.equals("2251H1300X"))
                return _2251H1300X;
            if (str.equals("2251N0400X"))
                return _2251N0400X;
            if (str.equals("2251X0800X"))
                return _2251X0800X;
            if (str.equals("2251P0200X"))
                return _2251P0200X;
            if (str.equals("2251S0007X"))
                return _2251S0007X;
		    return null;
        }
    }

	/**
	* specDomain: S20563 (C-0-T19465-S20532-S20563-cpt)
	*/
    public enum RehabilitationCounselorProviderCodes
    {
        
        _225C00000X(0,"225C00000X"),
        
        _225CA2400X(1,"225CA2400X"),
        
        _225CA2500X(2,"225CA2500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RehabilitationCounselorProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RehabilitationCounselorProviderCodes fromString(String str)
        {
            if (str.equals("225C00000X"))
                return _225C00000X;
            if (str.equals("225CA2400X"))
                return _225CA2400X;
            if (str.equals("225CA2500X"))
                return _225CA2500X;
		    return null;
        }
    }

	/**
	* specDomain: S20567 (C-0-T19465-S20532-S20567-cpt)
	*/
    public enum RespiratoryTherapistCertifiedProviderCodes
    {
        
        _227800000X(0,"227800000X"),
        
        _2278C0205X(1,"2278C0205X"),
        
        _2278E0002X(2,"2278E0002X"),
        
        _2278G1100X(3,"2278G1100X"),
        
        _2278G0305X(4,"2278G0305X"),
        
        _2278H0200X(5,"2278H0200X"),
        
        _2278P3900X(6,"2278P3900X"),
        
        _2278P3800X(7,"2278P3800X"),
        
        _2278E1000X(8,"2278E1000X"),
        
        _2278P4000X(9,"2278P4000X"),
        
        _2278P1004X(10,"2278P1004X"),
        
        _2278P1006X(11,"2278P1006X"),
        
        _2278P1005X(12,"2278P1005X"),
        
        _2278S1500X(13,"2278S1500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RespiratoryTherapistCertifiedProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RespiratoryTherapistCertifiedProviderCodes fromString(String str)
        {
            if (str.equals("227800000X"))
                return _227800000X;
            if (str.equals("2278C0205X"))
                return _2278C0205X;
            if (str.equals("2278E0002X"))
                return _2278E0002X;
            if (str.equals("2278G1100X"))
                return _2278G1100X;
            if (str.equals("2278G0305X"))
                return _2278G0305X;
            if (str.equals("2278H0200X"))
                return _2278H0200X;
            if (str.equals("2278P3900X"))
                return _2278P3900X;
            if (str.equals("2278P3800X"))
                return _2278P3800X;
            if (str.equals("2278E1000X"))
                return _2278E1000X;
            if (str.equals("2278P4000X"))
                return _2278P4000X;
            if (str.equals("2278P1004X"))
                return _2278P1004X;
            if (str.equals("2278P1006X"))
                return _2278P1006X;
            if (str.equals("2278P1005X"))
                return _2278P1005X;
            if (str.equals("2278S1500X"))
                return _2278S1500X;
		    return null;
        }
    }

	/**
	* specDomain: S20581 (C-0-T19465-S20532-S20581-cpt)
	*/
    public enum RespiratoryTherapistRegisteredProviderCodes
    {
        
        _227900000X(0,"227900000X"),
        
        _2279C0205X(1,"2279C0205X"),
        
        _2279E0002X(2,"2279E0002X"),
        
        _2279G1100X(3,"2279G1100X"),
        
        _2279G0305X(4,"2279G0305X"),
        
        _2279H0200X(5,"2279H0200X"),
        
        _2279P3900X(6,"2279P3900X"),
        
        _2279P3800X(7,"2279P3800X"),
        
        _2279E1000X(8,"2279E1000X"),
        
        _2279P4000X(9,"2279P4000X"),
        
        _2279P1004X(10,"2279P1004X"),
        
        _2279P1006X(11,"2279P1006X"),
        
        _2279P1005X(12,"2279P1005X"),
        
        _2279S1500X(13,"2279S1500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RespiratoryTherapistRegisteredProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RespiratoryTherapistRegisteredProviderCodes fromString(String str)
        {
            if (str.equals("227900000X"))
                return _227900000X;
            if (str.equals("2279C0205X"))
                return _2279C0205X;
            if (str.equals("2279E0002X"))
                return _2279E0002X;
            if (str.equals("2279G1100X"))
                return _2279G1100X;
            if (str.equals("2279G0305X"))
                return _2279G0305X;
            if (str.equals("2279H0200X"))
                return _2279H0200X;
            if (str.equals("2279P3900X"))
                return _2279P3900X;
            if (str.equals("2279P3800X"))
                return _2279P3800X;
            if (str.equals("2279E1000X"))
                return _2279E1000X;
            if (str.equals("2279P4000X"))
                return _2279P4000X;
            if (str.equals("2279P1004X"))
                return _2279P1004X;
            if (str.equals("2279P1006X"))
                return _2279P1006X;
            if (str.equals("2279P1005X"))
                return _2279P1005X;
            if (str.equals("2279S1500X"))
                return _2279S1500X;
		    return null;
        }
    }

	/**
	* specDomain: S20595 (C-0-T19465-S20532-S20595-cpt)
	*/
    public enum SpecialistTechnologistProviderCodes
    {
        
        _225500000X(0,"225500000X"),
        
        _2255A2300X(1,"2255A2300X"),
        
        _2255R0406X(2,"2255R0406X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpecialistTechnologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpecialistTechnologistProviderCodes fromString(String str)
        {
            if (str.equals("225500000X"))
                return _225500000X;
            if (str.equals("2255A2300X"))
                return _2255A2300X;
            if (str.equals("2255R0406X"))
                return _2255R0406X;
		    return null;
        }
    }

	/**
	* specDomain: S20771 (C-0-T19465-S20770-S20771-cpt)
	*/
    public enum RespiteCareProviderCodes
    {
        
        _385H00000X(0,"385H00000X"),
        
        _385HR2050X(1,"385HR2050X"),
        
        _385HR2055X(2,"385HR2055X"),
        
        _385HR2060X(3,"385HR2060X"),
        
        _385HR2065X(4,"385HR2065X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RespiteCareProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RespiteCareProviderCodes fromString(String str)
        {
            if (str.equals("385H00000X"))
                return _385H00000X;
            if (str.equals("385HR2050X"))
                return _385HR2050X;
            if (str.equals("385HR2055X"))
                return _385HR2055X;
            if (str.equals("385HR2060X"))
                return _385HR2060X;
            if (str.equals("385HR2065X"))
                return _385HR2065X;
		    return null;
        }
    }

	/**
	* specDomain: S20599 (C-0-T19465-S20598-S20599-cpt)
	*/
    public enum AudiologistProviderCodes
    {
        
        _231H00000X(0,"231H00000X"),
        
        _231HA2400X(1,"231HA2400X"),
        
        _231HA2500X(2,"231HA2500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AudiologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AudiologistProviderCodes fromString(String str)
        {
            if (str.equals("231H00000X"))
                return _231H00000X;
            if (str.equals("231HA2400X"))
                return _231HA2400X;
            if (str.equals("231HA2500X"))
                return _231HA2500X;
		    return null;
        }
    }

	/**
	* specDomain: S20604 (C-0-T19465-S20598-S20604-cpt)
	*/
    public enum SpeechLanguageTechnologistProviderCodes
    {
        
        _235500000X(0,"235500000X"),
        
        _2355A2700X(1,"2355A2700X"),
        
        _2355S0801X(2,"2355S0801X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpeechLanguageTechnologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpeechLanguageTechnologistProviderCodes fromString(String str)
        {
            if (str.equals("235500000X"))
                return _235500000X;
            if (str.equals("2355A2700X"))
                return _2355A2700X;
            if (str.equals("2355S0801X"))
                return _2355S0801X;
		    return null;
        }
    }

	/**
	* specDomain: S20774 (C-0-T19465-S20772-S20774-cpt)
	*/
    public enum DurableMedicalEquipmentandMedicalSuppliesProviderCodes
    {
        
        _332B00000X(0,"332B00000X"),
        
        _332BC3200X(1,"332BC3200X"),
        
        _332BD1200X(2,"332BD1200X"),
        
        _332BN1400X(3,"332BN1400X"),
        
        _332BX2000X(4,"332BX2000X"),
        
        _332BP3500X(5,"332BP3500X");
        
        private int code;
        private java.lang.String xmlValue;
        
        DurableMedicalEquipmentandMedicalSuppliesProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static DurableMedicalEquipmentandMedicalSuppliesProviderCodes fromString(String str)
        {
            if (str.equals("332B00000X"))
                return _332B00000X;
            if (str.equals("332BC3200X"))
                return _332BC3200X;
            if (str.equals("332BD1200X"))
                return _332BD1200X;
            if (str.equals("332BN1400X"))
                return _332BN1400X;
            if (str.equals("332BX2000X"))
                return _332BX2000X;
            if (str.equals("332BP3500X"))
                return _332BP3500X;
		    return null;
        }
    }

	/**
	* specDomain: S20609 (C-0-T19465-S20608-S20609-cpt)
	*/
    public enum RadiologicTechnologistProviderCodes
    {
        
        _247100000X(0,"247100000X"),
        
        _2471B0102X(1,"2471B0102X"),
        
        _2471C1106X(2,"2471C1106X"),
        
        _2471C1101X(3,"2471C1101X"),
        
        _2471C3401X(4,"2471C3401X"),
        
        _2471M1202X(5,"2471M1202X"),
        
        _2471M2300X(6,"2471M2300X"),
        
        _2471N0900X(7,"2471N0900X"),
        
        _2471Q0001X(8,"2471Q0001X"),
        
        _2471R0002X(9,"2471R0002X"),
        
        _2471C3402X(10,"2471C3402X"),
        
        _2471S1302X(11,"2471S1302X"),
        
        _2471V0105X(12,"2471V0105X"),
        
        _2471V0106X(13,"2471V0106X");
        
        private int code;
        private java.lang.String xmlValue;
        
        RadiologicTechnologistProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RadiologicTechnologistProviderCodes fromString(String str)
        {
            if (str.equals("247100000X"))
                return _247100000X;
            if (str.equals("2471B0102X"))
                return _2471B0102X;
            if (str.equals("2471C1106X"))
                return _2471C1106X;
            if (str.equals("2471C1101X"))
                return _2471C1101X;
            if (str.equals("2471C3401X"))
                return _2471C3401X;
            if (str.equals("2471M1202X"))
                return _2471M1202X;
            if (str.equals("2471M2300X"))
                return _2471M2300X;
            if (str.equals("2471N0900X"))
                return _2471N0900X;
            if (str.equals("2471Q0001X"))
                return _2471Q0001X;
            if (str.equals("2471R0002X"))
                return _2471R0002X;
            if (str.equals("2471C3402X"))
                return _2471C3402X;
            if (str.equals("2471S1302X"))
                return _2471S1302X;
            if (str.equals("2471V0105X"))
                return _2471V0105X;
            if (str.equals("2471V0106X"))
                return _2471V0106X;
		    return null;
        }
    }

	/**
	* specDomain: S20623 (C-0-T19465-S20608-S20623-cpt)
	*/
    public enum SpecialistTechnologistCardiovascularProviderCodes
    {
        
        _246X00000X(0,"246X00000X"),
        
        _246XC2901X(1,"246XC2901X"),
        
        _246XS1301X(2,"246XS1301X"),
        
        _246XC2903X(3,"246XC2903X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpecialistTechnologistCardiovascularProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpecialistTechnologistCardiovascularProviderCodes fromString(String str)
        {
            if (str.equals("246X00000X"))
                return _246X00000X;
            if (str.equals("246XC2901X"))
                return _246XC2901X;
            if (str.equals("246XS1301X"))
                return _246XS1301X;
            if (str.equals("246XC2903X"))
                return _246XC2903X;
		    return null;
        }
    }

	/**
	* specDomain: S20627 (C-0-T19465-S20608-S20627-cpt)
	*/
    public enum SpecialistTechnologistHealthInformationProviderCodes
    {
        
        _246Y00000X(0,"246Y00000X"),
        
        _246YC3301X(1,"246YC3301X"),
        
        _246YC3302X(2,"246YC3302X"),
        
        _246YR1600X(3,"246YR1600X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpecialistTechnologistHealthInformationProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpecialistTechnologistHealthInformationProviderCodes fromString(String str)
        {
            if (str.equals("246Y00000X"))
                return _246Y00000X;
            if (str.equals("246YC3301X"))
                return _246YC3301X;
            if (str.equals("246YC3302X"))
                return _246YC3302X;
            if (str.equals("246YR1600X"))
                return _246YR1600X;
		    return null;
        }
    }

	/**
	* specDomain: S20631 (C-0-T19465-S20608-S20631-cpt)
	*/
    public enum SpecialistTechnologistOtherProviderCodes
    {
        
        _246Z00000X(0,"246Z00000X"),
        
        _246ZA2600X(1,"246ZA2600X"),
        
        _246ZB0500X(2,"246ZB0500X"),
        
        _246ZB0301X(3,"246ZB0301X"),
        
        _246ZB0302X(4,"246ZB0302X"),
        
        _246ZB0600X(5,"246ZB0600X"),
        
        _246ZE0500X(6,"246ZE0500X"),
        
        _246ZE0600X(7,"246ZE0600X"),
        
        _246ZG1000X(8,"246ZG1000X"),
        
        _246ZG0701X(9,"246ZG0701X"),
        
        _246ZI1000X(10,"246ZI1000X"),
        
        _246ZN0300X(11,"246ZN0300X"),
        
        _246ZS0400X(12,"246ZS0400X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpecialistTechnologistOtherProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpecialistTechnologistOtherProviderCodes fromString(String str)
        {
            if (str.equals("246Z00000X"))
                return _246Z00000X;
            if (str.equals("246ZA2600X"))
                return _246ZA2600X;
            if (str.equals("246ZB0500X"))
                return _246ZB0500X;
            if (str.equals("246ZB0301X"))
                return _246ZB0301X;
            if (str.equals("246ZB0302X"))
                return _246ZB0302X;
            if (str.equals("246ZB0600X"))
                return _246ZB0600X;
            if (str.equals("246ZE0500X"))
                return _246ZE0500X;
            if (str.equals("246ZE0600X"))
                return _246ZE0600X;
            if (str.equals("246ZG1000X"))
                return _246ZG1000X;
            if (str.equals("246ZG0701X"))
                return _246ZG0701X;
            if (str.equals("246ZI1000X"))
                return _246ZI1000X;
            if (str.equals("246ZN0300X"))
                return _246ZN0300X;
            if (str.equals("246ZS0400X"))
                return _246ZS0400X;
		    return null;
        }
    }

	/**
	* specDomain: S20644 (C-0-T19465-S20608-S20644-cpt)
	*/
    public enum SpecialistTechnologistPathologyProviderCodes
    {
        
        _246Q00000X(0,"246Q00000X"),
        
        _246QB0000X(1,"246QB0000X"),
        
        _246QC1000X(2,"246QC1000X"),
        
        _246QC2700X(3,"246QC2700X"),
        
        _246QH0401X(4,"246QH0401X"),
        
        _246QH0000X(5,"246QH0000X"),
        
        _246QH0600X(6,"246QH0600X"),
        
        _246QI0000X(7,"246QI0000X"),
        
        _246QL0900X(8,"246QL0900X"),
        
        _246QL0901X(9,"246QL0901X"),
        
        _246QM0706X(10,"246QM0706X"),
        
        _246QM0900X(11,"246QM0900X");
        
        private int code;
        private java.lang.String xmlValue;
        
        SpecialistTechnologistPathologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static SpecialistTechnologistPathologyProviderCodes fromString(String str)
        {
            if (str.equals("246Q00000X"))
                return _246Q00000X;
            if (str.equals("246QB0000X"))
                return _246QB0000X;
            if (str.equals("246QC1000X"))
                return _246QC1000X;
            if (str.equals("246QC2700X"))
                return _246QC2700X;
            if (str.equals("246QH0401X"))
                return _246QH0401X;
            if (str.equals("246QH0000X"))
                return _246QH0000X;
            if (str.equals("246QH0600X"))
                return _246QH0600X;
            if (str.equals("246QI0000X"))
                return _246QI0000X;
            if (str.equals("246QL0900X"))
                return _246QL0900X;
            if (str.equals("246QL0901X"))
                return _246QL0901X;
            if (str.equals("246QM0706X"))
                return _246QM0706X;
            if (str.equals("246QM0900X"))
                return _246QM0900X;
		    return null;
        }
    }

	/**
	* specDomain: S20657 (C-0-T19465-S20608-S20657-cpt)
	*/
    public enum TechnicianHealthInformationProviderCodes
    {
        
        _247000000X(0,"247000000X"),
        
        _2470A2800X(1,"2470A2800X");
        
        private int code;
        private java.lang.String xmlValue;
        
        TechnicianHealthInformationProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TechnicianHealthInformationProviderCodes fromString(String str)
        {
            if (str.equals("247000000X"))
                return _247000000X;
            if (str.equals("2470A2800X"))
                return _2470A2800X;
		    return null;
        }
    }

	/**
	* specDomain: S20659 (C-0-T19465-S20608-S20659-cpt)
	*/
    public enum TechnicianOtherProviderCodes
    {
        
        _247200000X(0,"247200000X"),
        
        _2472B0301X(1,"2472B0301X"),
        
        _2472D0500X(2,"2472D0500X"),
        
        _2472E0500X(3,"2472E0500X"),
        
        _2472R0900X(4,"2472R0900X"),
        
        _2472V0600X(5,"2472V0600X");
        
        private int code;
        private java.lang.String xmlValue;
        
        TechnicianOtherProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TechnicianOtherProviderCodes fromString(String str)
        {
            if (str.equals("247200000X"))
                return _247200000X;
            if (str.equals("2472B0301X"))
                return _2472B0301X;
            if (str.equals("2472D0500X"))
                return _2472D0500X;
            if (str.equals("2472E0500X"))
                return _2472E0500X;
            if (str.equals("2472R0900X"))
                return _2472R0900X;
            if (str.equals("2472V0600X"))
                return _2472V0600X;
		    return null;
        }
    }

	/**
	* specDomain: S20665 (C-0-T19465-S20608-S20665-cpt)
	*/
    public enum TechnicianPathologyProviderCodes
    {
        
        _246R00000X(0,"246R00000X"),
        
        _246RH0600X(1,"246RH0600X"),
        
        _246RM2200X(2,"246RM2200X"),
        
        _246RP1900X(3,"246RP1900X");
        
        private int code;
        private java.lang.String xmlValue;
        
        TechnicianPathologyProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TechnicianPathologyProviderCodes fromString(String str)
        {
            if (str.equals("246R00000X"))
                return _246R00000X;
            if (str.equals("246RH0600X"))
                return _246RH0600X;
            if (str.equals("246RM2200X"))
                return _246RM2200X;
            if (str.equals("246RP1900X"))
                return _246RP1900X;
		    return null;
        }
    }

	/**
	* specDomain: S20789 (C-0-T19465-S20788-S20789-cpt)
	*/
    public enum AmbulanceProviderCodes
    {
        
        _341600000X(0,"341600000X"),
        
        _3416A0800X(1,"3416A0800X"),
        
        _3416L0300X(2,"3416L0300X"),
        
        _3416S0300X(3,"3416S0300X");
        
        private int code;
        private java.lang.String xmlValue;
        
        AmbulanceProviderCodes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static AmbulanceProviderCodes fromString(String str)
        {
            if (str.equals("341600000X"))
                return _341600000X;
            if (str.equals("3416A0800X"))
                return _3416A0800X;
            if (str.equals("3416L0300X"))
                return _3416L0300X;
            if (str.equals("3416S0300X"))
                return _3416S0300X;
		    return null;
        }
    }

	/**
	* abstDomain: A19819 (C-0-T19726-A19819-cpt)
	*/
    public enum IssueFilterCode
    {
        
        ISSFA(0),
        
        ISSFI(1),
        
        ISSFU(2);
        
        private int code;
        
        IssueFilterCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IssueFilterCode fromString(String str)
        {
            if (str.equals("ISSFA"))
                return ISSFA;
            if (str.equals("ISSFI"))
                return ISSFI;
            if (str.equals("ISSFU"))
                return ISSFU;
		    return null;
        }
    }

	/**
	* abstDomain: A19727 (C-0-T19726-A19727-cpt)
	*/
    public enum PrescriptionDispenseFilterCode
    {
        
        C(0),
        
        R(1),
        
        N(2);
        
        private int code;
        
        PrescriptionDispenseFilterCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PrescriptionDispenseFilterCode fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("R"))
                return R;
            if (str.equals("N"))
                return N;
		    return null;
        }
    }

	/**
	* vocSet: T91 (C-0-T91-cpt)
	*/
    public enum QueryPriority
    {
        
        D(0),
        
        I(1);
        
        private int code;
        
        QueryPriority(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static QueryPriority fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("I"))
                return I;
		    return null;
        }
    }

	/**
	* vocSet: T126 (C-0-T126-cpt)
	*/
    public enum QueryQuantityUnit
    {
        
        CH(0),
        
        LI(1),
        
        PG(2),
        
        RD(3);
        
        private int code;
        
        QueryQuantityUnit(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static QueryQuantityUnit fromString(String str)
        {
            if (str.equals("CH"))
                return CH;
            if (str.equals("LI"))
                return LI;
            if (str.equals("PG"))
                return PG;
            if (str.equals("RD"))
                return RD;
		    return null;
        }
    }

	/**
	* vocSet: T19911 (C-0-T19911-cpt)
	*/
    public enum QueryRequestLimit
    {
        
        RD(0);
        
        private int code;
        
        QueryRequestLimit(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static QueryRequestLimit fromString(String str)
        {
            if (str.equals("RD"))
                return RD;
		    return null;
        }
    }

	/**
	* vocSet: T208 (C-0-T208-cpt)
	*/
    public enum QueryResponse
    {
        
        AE(0),
        
        OK(1),
        
        NF(2),
        
        QE(3);
        
        private int code;
        
        QueryResponse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static QueryResponse fromString(String str)
        {
            if (str.equals("AE"))
                return AE;
            if (str.equals("OK"))
                return OK;
            if (str.equals("NF"))
                return NF;
            if (str.equals("QE"))
                return QE;
		    return null;
        }
    }

	/**
	* vocSet: T18899 (C-0-T18899-cpt)
	*/
    public enum QueryStatusCode
    {
        
        aborted(0,"aborted"),
        
        deliveredResponse(1,"deliveredResponse"),
        
        executing(2,"executing"),
        
        _new(3,"new"),
        
        waitContinuedQueryResponse(4,"waitContinuedQueryResponse");
        
        private int code;
        private java.lang.String xmlValue;
        
        QueryStatusCode(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static QueryStatusCode fromString(String str)
        {
            if (str.equals("aborted"))
                return aborted;
            if (str.equals("deliveredResponse"))
                return deliveredResponse;
            if (str.equals("executing"))
                return executing;
            if (str.equals("new"))
                return _new;
            if (str.equals("waitContinuedQueryResponse"))
                return waitContinuedQueryResponse;
		    return null;
        }
    }

	/**
	* specDomain: S15743 (C-0-T14914-S15743-cpt)
	*/
    public enum RaceAsian
    {
        
        _2028_x002D_9(0,"2028-9"),
        
        _2029_x002D_7(1,"2029-7"),
        
        _2030_x002D_5(2,"2030-5"),
        
        _2031_x002D_3(3,"2031-3"),
        
        _2032_x002D_1(4,"2032-1"),
        
        _2033_x002D_9(5,"2033-9"),
        
        _2034_x002D_7(6,"2034-7"),
        
        _2036_x002D_2(7,"2036-2"),
        
        _2037_x002D_0(8,"2037-0"),
        
        _2038_x002D_8(9,"2038-8"),
        
        _2048_x002D_7(10,"2048-7"),
        
        _2039_x002D_6(11,"2039-6"),
        
        _2040_x002D_4(12,"2040-4"),
        
        _2041_x002D_2(13,"2041-2"),
        
        _2052_x002D_9(14,"2052-9"),
        
        _2042_x002D_0(15,"2042-0"),
        
        _2049_x002D_5(16,"2049-5"),
        
        _2050_x002D_3(17,"2050-3"),
        
        _2043_x002D_8(18,"2043-8"),
        
        _2044_x002D_6(19,"2044-6"),
        
        _2051_x002D_1(20,"2051-1"),
        
        _2045_x002D_3(21,"2045-3"),
        
        _2035_x002D_4(22,"2035-4"),
        
        _2046_x002D_1(23,"2046-1"),
        
        _2047_x002D_9(24,"2047-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAsian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAsian fromString(String str)
        {
            if (str.equals("2028-9"))
                return _2028_x002D_9;
            if (str.equals("2029-7"))
                return _2029_x002D_7;
            if (str.equals("2030-5"))
                return _2030_x002D_5;
            if (str.equals("2031-3"))
                return _2031_x002D_3;
            if (str.equals("2032-1"))
                return _2032_x002D_1;
            if (str.equals("2033-9"))
                return _2033_x002D_9;
            if (str.equals("2034-7"))
                return _2034_x002D_7;
            if (str.equals("2036-2"))
                return _2036_x002D_2;
            if (str.equals("2037-0"))
                return _2037_x002D_0;
            if (str.equals("2038-8"))
                return _2038_x002D_8;
            if (str.equals("2048-7"))
                return _2048_x002D_7;
            if (str.equals("2039-6"))
                return _2039_x002D_6;
            if (str.equals("2040-4"))
                return _2040_x002D_4;
            if (str.equals("2041-2"))
                return _2041_x002D_2;
            if (str.equals("2052-9"))
                return _2052_x002D_9;
            if (str.equals("2042-0"))
                return _2042_x002D_0;
            if (str.equals("2049-5"))
                return _2049_x002D_5;
            if (str.equals("2050-3"))
                return _2050_x002D_3;
            if (str.equals("2043-8"))
                return _2043_x002D_8;
            if (str.equals("2044-6"))
                return _2044_x002D_6;
            if (str.equals("2051-1"))
                return _2051_x002D_1;
            if (str.equals("2045-3"))
                return _2045_x002D_3;
            if (str.equals("2035-4"))
                return _2035_x002D_4;
            if (str.equals("2046-1"))
                return _2046_x002D_1;
            if (str.equals("2047-9"))
                return _2047_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15771 (C-0-T14914-S15768-S15771-cpt)
	*/
    public enum RaceAfricanAmericanAfrican
    {
        
        _2060_x002D_2(0,"2060-2"),
        
        _2061_x002D_0(1,"2061-0"),
        
        _2062_x002D_8(2,"2062-8"),
        
        _2063_x002D_6(3,"2063-6"),
        
        _2064_x002D_4(4,"2064-4"),
        
        _2065_x002D_1(5,"2065-1"),
        
        _2066_x002D_9(6,"2066-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAfricanAmericanAfrican(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAfricanAmericanAfrican fromString(String str)
        {
            if (str.equals("2060-2"))
                return _2060_x002D_2;
            if (str.equals("2061-0"))
                return _2061_x002D_0;
            if (str.equals("2062-8"))
                return _2062_x002D_8;
            if (str.equals("2063-6"))
                return _2063_x002D_6;
            if (str.equals("2064-4"))
                return _2064_x002D_4;
            if (str.equals("2065-1"))
                return _2065_x002D_1;
            if (str.equals("2066-9"))
                return _2066_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15808 (C-0-T14914-S15787-S15808-cpt)
	*/
    public enum RacePacificIslandMelanesian
    {
        
        _2100_x002D_6(0,"2100-6"),
        
        _2101_x002D_4(1,"2101-4"),
        
        _2104_x002D_8(2,"2104-8"),
        
        _2102_x002D_2(3,"2102-2"),
        
        _2103_x002D_0(4,"2103-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RacePacificIslandMelanesian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RacePacificIslandMelanesian fromString(String str)
        {
            if (str.equals("2100-6"))
                return _2100_x002D_6;
            if (str.equals("2101-4"))
                return _2101_x002D_4;
            if (str.equals("2104-8"))
                return _2104_x002D_8;
            if (str.equals("2102-2"))
                return _2102_x002D_2;
            if (str.equals("2103-0"))
                return _2103_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15794 (C-0-T14914-S15787-S15794-cpt)
	*/
    public enum RacePacificIslandMicronesian
    {
        
        _2085_x002D_9(0,"2085-9"),
        
        _2092_x002D_5(1,"2092-5"),
        
        _2088_x002D_3(2,"2088-3"),
        
        _2097_x002D_4(3,"2097-4"),
        
        _2087_x002D_5(4,"2087-5"),
        
        _2086_x002D_7(5,"2086-7"),
        
        _2096_x002D_6(6,"2096-6"),
        
        _2093_x002D_3(7,"2093-3"),
        
        _2089_x002D_1(8,"2089-1"),
        
        _2090_x002D_9(9,"2090-9"),
        
        _2091_x002D_7(10,"2091-7"),
        
        _2094_x002D_1(11,"2094-1"),
        
        _2095_x002D_8(12,"2095-8"),
        
        _2098_x002D_2(13,"2098-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RacePacificIslandMicronesian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RacePacificIslandMicronesian fromString(String str)
        {
            if (str.equals("2085-9"))
                return _2085_x002D_9;
            if (str.equals("2092-5"))
                return _2092_x002D_5;
            if (str.equals("2088-3"))
                return _2088_x002D_3;
            if (str.equals("2097-4"))
                return _2097_x002D_4;
            if (str.equals("2087-5"))
                return _2087_x002D_5;
            if (str.equals("2086-7"))
                return _2086_x002D_7;
            if (str.equals("2096-6"))
                return _2096_x002D_6;
            if (str.equals("2093-3"))
                return _2093_x002D_3;
            if (str.equals("2089-1"))
                return _2089_x002D_1;
            if (str.equals("2090-9"))
                return _2090_x002D_9;
            if (str.equals("2091-7"))
                return _2091_x002D_7;
            if (str.equals("2094-1"))
                return _2094_x002D_1;
            if (str.equals("2095-8"))
                return _2095_x002D_8;
            if (str.equals("2098-2"))
                return _2098_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15788 (C-0-T14914-S15787-S15788-cpt)
	*/
    public enum RacePacificIslandPolynesian
    {
        
        _2078_x002D_4(0,"2078-4"),
        
        _2079_x002D_2(1,"2079-2"),
        
        _2080_x002D_0(2,"2080-0"),
        
        _2081_x002D_8(3,"2081-8"),
        
        _2083_x002D_4(4,"2083-4"),
        
        _2082_x002D_6(5,"2082-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RacePacificIslandPolynesian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RacePacificIslandPolynesian fromString(String str)
        {
            if (str.equals("2078-4"))
                return _2078_x002D_4;
            if (str.equals("2079-2"))
                return _2079_x002D_2;
            if (str.equals("2080-0"))
                return _2080_x002D_0;
            if (str.equals("2081-8"))
                return _2081_x002D_8;
            if (str.equals("2083-4"))
                return _2083_x002D_4;
            if (str.equals("2082-6"))
                return _2082_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15472 (C-0-T14914-S14915-S15470-S15471-S15472-cpt)
	*/
    public enum RaceAlaskanIndianAthabascan
    {
        
        _1739_x002D_2(0,"1739-2"),
        
        _1740_x002D_0(1,"1740-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanIndianAthabascan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanIndianAthabascan fromString(String str)
        {
            if (str.equals("1739-2"))
                return _1739_x002D_2;
            if (str.equals("1740-0"))
                return _1740_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15544 (C-0-T14914-S14915-S15470-S15471-S15543-S15544-cpt)
	*/
    public enum RaceSoutheastAlaskanIndianTlingit
    {
        
        _1813_x002D_5(0,"1813-5"),
        
        _1814_x002D_3(1,"1814-3"),
        
        _1815_x002D_0(2,"1815-0"),
        
        _1816_x002D_8(3,"1816-8"),
        
        _1817_x002D_6(4,"1817-6"),
        
        _1818_x002D_4(5,"1818-4"),
        
        _1819_x002D_2(6,"1819-2"),
        
        _1820_x002D_0(7,"1820-0"),
        
        _1821_x002D_8(8,"1821-8"),
        
        _1822_x002D_6(9,"1822-6"),
        
        _1823_x002D_4(10,"1823-4"),
        
        _1824_x002D_2(11,"1824-2"),
        
        _1825_x002D_9(12,"1825-9"),
        
        _1826_x002D_7(13,"1826-7"),
        
        _1827_x002D_5(14,"1827-5"),
        
        _1828_x002D_3(15,"1828-3"),
        
        _1829_x002D_1(16,"1829-1"),
        
        _1830_x002D_9(17,"1830-9"),
        
        _1831_x002D_7(18,"1831-7"),
        
        _1832_x002D_5(19,"1832-5"),
        
        _1833_x002D_3(20,"1833-3"),
        
        _1834_x002D_1(21,"1834-1"),
        
        _1835_x002D_8(22,"1835-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceSoutheastAlaskanIndianTlingit(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceSoutheastAlaskanIndianTlingit fromString(String str)
        {
            if (str.equals("1813-5"))
                return _1813_x002D_5;
            if (str.equals("1814-3"))
                return _1814_x002D_3;
            if (str.equals("1815-0"))
                return _1815_x002D_0;
            if (str.equals("1816-8"))
                return _1816_x002D_8;
            if (str.equals("1817-6"))
                return _1817_x002D_6;
            if (str.equals("1818-4"))
                return _1818_x002D_4;
            if (str.equals("1819-2"))
                return _1819_x002D_2;
            if (str.equals("1820-0"))
                return _1820_x002D_0;
            if (str.equals("1821-8"))
                return _1821_x002D_8;
            if (str.equals("1822-6"))
                return _1822_x002D_6;
            if (str.equals("1823-4"))
                return _1823_x002D_4;
            if (str.equals("1824-2"))
                return _1824_x002D_2;
            if (str.equals("1825-9"))
                return _1825_x002D_9;
            if (str.equals("1826-7"))
                return _1826_x002D_7;
            if (str.equals("1827-5"))
                return _1827_x002D_5;
            if (str.equals("1828-3"))
                return _1828_x002D_3;
            if (str.equals("1829-1"))
                return _1829_x002D_1;
            if (str.equals("1830-9"))
                return _1830_x002D_9;
            if (str.equals("1831-7"))
                return _1831_x002D_7;
            if (str.equals("1832-5"))
                return _1832_x002D_5;
            if (str.equals("1833-3"))
                return _1833_x002D_3;
            if (str.equals("1834-1"))
                return _1834_x002D_1;
            if (str.equals("1835-8"))
                return _1835_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15567 (C-0-T14914-S14915-S15470-S15471-S15543-S15567-cpt)
	*/
    public enum RaceSoutheastAlaskanIndianTsimshian
    {
        
        _1837_x002D_4(0,"1837-4"),
        
        _1838_x002D_2(1,"1838-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceSoutheastAlaskanIndianTsimshian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceSoutheastAlaskanIndianTsimshian fromString(String str)
        {
            if (str.equals("1837-4"))
                return _1837_x002D_4;
            if (str.equals("1838-2"))
                return _1838_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15691 (C-0-T14914-S14915-S15470-S15690-S15691-cpt)
	*/
    public enum RaceAlaskanNativeAleutAlutiiq
    {
        
        _1968_x002D_7(0,"1968-7"),
        
        _1969_x002D_5(1,"1969-5"),
        
        _1970_x002D_3(2,"1970-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeAleutAlutiiq(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeAleutAlutiiq fromString(String str)
        {
            if (str.equals("1968-7"))
                return _1968_x002D_7;
            if (str.equals("1969-5"))
                return _1969_x002D_5;
            if (str.equals("1970-3"))
                return _1970_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S16466 (C-0-T14914-S14915-S15470-S15690-S16466-cpt)
	*/
    public enum RaceAlaskanNativeAleutBristolBay
    {
        
        _1972_x002D_9(0,"1972-9"),
        
        _1973_x002D_7(1,"1973-7"),
        
        _1974_x002D_5(2,"1974-5"),
        
        _1975_x002D_2(3,"1975-2"),
        
        _1976_x002D_0(4,"1976-0"),
        
        _1977_x002D_8(5,"1977-8"),
        
        _1978_x002D_6(6,"1978-6"),
        
        _1979_x002D_4(7,"1979-4"),
        
        _1980_x002D_2(8,"1980-2"),
        
        _1981_x002D_0(9,"1981-0"),
        
        _1982_x002D_8(10,"1982-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeAleutBristolBay(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeAleutBristolBay fromString(String str)
        {
            if (str.equals("1972-9"))
                return _1972_x002D_9;
            if (str.equals("1973-7"))
                return _1973_x002D_7;
            if (str.equals("1974-5"))
                return _1974_x002D_5;
            if (str.equals("1975-2"))
                return _1975_x002D_2;
            if (str.equals("1976-0"))
                return _1976_x002D_0;
            if (str.equals("1977-8"))
                return _1977_x002D_8;
            if (str.equals("1978-6"))
                return _1978_x002D_6;
            if (str.equals("1979-4"))
                return _1979_x002D_4;
            if (str.equals("1980-2"))
                return _1980_x002D_2;
            if (str.equals("1981-0"))
                return _1981_x002D_0;
            if (str.equals("1982-8"))
                return _1982_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15705 (C-0-T14914-S14915-S15470-S15690-S15705-cpt)
	*/
    public enum RaceAlaskanNativeAleutChugach
    {
        
        _1984_x002D_4(0,"1984-4"),
        
        _1985_x002D_1(1,"1985-1"),
        
        _1986_x002D_9(2,"1986-9"),
        
        _1987_x002D_7(3,"1987-7"),
        
        _1988_x002D_5(4,"1988-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeAleutChugach(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeAleutChugach fromString(String str)
        {
            if (str.equals("1984-4"))
                return _1984_x002D_4;
            if (str.equals("1985-1"))
                return _1985_x002D_1;
            if (str.equals("1986-9"))
                return _1986_x002D_9;
            if (str.equals("1987-7"))
                return _1987_x002D_7;
            if (str.equals("1988-5"))
                return _1988_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15711 (C-0-T14914-S14915-S15470-S15690-S15711-cpt)
	*/
    public enum RaceAlaskanNativeAleutKoniag
    {
        
        _1992_x002D_7(0,"1992-7"),
        
        _1994_x002D_3(1,"1994-3"),
        
        _1993_x002D_5(2,"1993-5"),
        
        _1995_x002D_0(3,"1995-0"),
        
        _1996_x002D_8(4,"1996-8"),
        
        _1997_x002D_6(5,"1997-6"),
        
        _1998_x002D_4(6,"1998-4"),
        
        _1999_x002D_2(7,"1999-2"),
        
        _2000_x002D_8(8,"2000-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeAleutKoniag(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeAleutKoniag fromString(String str)
        {
            if (str.equals("1992-7"))
                return _1992_x002D_7;
            if (str.equals("1994-3"))
                return _1994_x002D_3;
            if (str.equals("1993-5"))
                return _1993_x002D_5;
            if (str.equals("1995-0"))
                return _1995_x002D_0;
            if (str.equals("1996-8"))
                return _1996_x002D_8;
            if (str.equals("1997-6"))
                return _1997_x002D_6;
            if (str.equals("1998-4"))
                return _1998_x002D_4;
            if (str.equals("1999-2"))
                return _1999_x002D_2;
            if (str.equals("2000-8"))
                return _2000_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15722 (C-0-T14914-S14915-S15470-S15690-S15722-cpt)
	*/
    public enum RaceAlaskanNativeAleutUnangan
    {
        
        _2006_x002D_5(0,"2006-5"),
        
        _2007_x002D_3(1,"2007-3"),
        
        _2008_x002D_1(2,"2008-1"),
        
        _2009_x002D_9(3,"2009-9"),
        
        _2010_x002D_7(4,"2010-7"),
        
        _2011_x002D_5(5,"2011-5"),
        
        _2012_x002D_3(6,"2012-3"),
        
        _2013_x002D_1(7,"2013-1"),
        
        _2015_x002D_6(8,"2015-6"),
        
        _2014_x002D_9(9,"2014-9"),
        
        _2016_x002D_4(10,"2016-4"),
        
        _2017_x002D_2(11,"2017-2"),
        
        _2018_x002D_0(12,"2018-0"),
        
        _2019_x002D_8(13,"2019-8"),
        
        _2020_x002D_6(14,"2020-6"),
        
        _2023_x002D_0(15,"2023-0"),
        
        _2024_x002D_8(16,"2024-8"),
        
        _2021_x002D_4(17,"2021-4"),
        
        _2022_x002D_2(18,"2022-2"),
        
        _2025_x002D_5(19,"2025-5"),
        
        _2026_x002D_3(20,"2026-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeAleutUnangan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeAleutUnangan fromString(String str)
        {
            if (str.equals("2006-5"))
                return _2006_x002D_5;
            if (str.equals("2007-3"))
                return _2007_x002D_3;
            if (str.equals("2008-1"))
                return _2008_x002D_1;
            if (str.equals("2009-9"))
                return _2009_x002D_9;
            if (str.equals("2010-7"))
                return _2010_x002D_7;
            if (str.equals("2011-5"))
                return _2011_x002D_5;
            if (str.equals("2012-3"))
                return _2012_x002D_3;
            if (str.equals("2013-1"))
                return _2013_x002D_1;
            if (str.equals("2015-6"))
                return _2015_x002D_6;
            if (str.equals("2014-9"))
                return _2014_x002D_9;
            if (str.equals("2016-4"))
                return _2016_x002D_4;
            if (str.equals("2017-2"))
                return _2017_x002D_2;
            if (str.equals("2018-0"))
                return _2018_x002D_0;
            if (str.equals("2019-8"))
                return _2019_x002D_8;
            if (str.equals("2020-6"))
                return _2020_x002D_6;
            if (str.equals("2023-0"))
                return _2023_x002D_0;
            if (str.equals("2024-8"))
                return _2024_x002D_8;
            if (str.equals("2021-4"))
                return _2021_x002D_4;
            if (str.equals("2022-2"))
                return _2022_x002D_2;
            if (str.equals("2025-5"))
                return _2025_x002D_5;
            if (str.equals("2026-3"))
                return _2026_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15571 (C-0-T14914-S14915-S15470-S15569-S15571-cpt)
	*/
    public enum RaceAlaskanNativeInupiatEskimo
    {
        
        _1844_x002D_0(0,"1844-0"),
        
        _1845_x002D_7(1,"1845-7"),
        
        _1846_x002D_5(2,"1846-5"),
        
        _1847_x002D_3(3,"1847-3"),
        
        _1849_x002D_9(4,"1849-9"),
        
        _1848_x002D_1(5,"1848-1"),
        
        _1850_x002D_7(6,"1850-7"),
        
        _1851_x002D_5(7,"1851-5"),
        
        _1852_x002D_3(8,"1852-3"),
        
        _1853_x002D_1(9,"1853-1"),
        
        _1854_x002D_9(10,"1854-9"),
        
        _1855_x002D_6(11,"1855-6"),
        
        _1856_x002D_4(12,"1856-4"),
        
        _1857_x002D_2(13,"1857-2"),
        
        _1858_x002D_0(14,"1858-0"),
        
        _1859_x002D_8(15,"1859-8"),
        
        _1860_x002D_6(16,"1860-6"),
        
        _1861_x002D_4(17,"1861-4"),
        
        _1862_x002D_2(18,"1862-2"),
        
        _1863_x002D_0(19,"1863-0"),
        
        _1864_x002D_8(20,"1864-8"),
        
        _1865_x002D_5(21,"1865-5"),
        
        _1866_x002D_3(22,"1866-3"),
        
        _1867_x002D_1(23,"1867-1"),
        
        _1868_x002D_9(24,"1868-9"),
        
        _1869_x002D_7(25,"1869-7"),
        
        _1889_x002D_5(26,"1889-5"),
        
        _1870_x002D_5(27,"1870-5"),
        
        _1871_x002D_3(28,"1871-3"),
        
        _1872_x002D_1(29,"1872-1"),
        
        _1873_x002D_9(30,"1873-9"),
        
        _1874_x002D_7(31,"1874-7"),
        
        _1875_x002D_4(32,"1875-4"),
        
        _1876_x002D_2(33,"1876-2"),
        
        _1877_x002D_0(34,"1877-0"),
        
        _1878_x002D_8(35,"1878-8"),
        
        _1879_x002D_6(36,"1879-6"),
        
        _1880_x002D_4(37,"1880-4"),
        
        _1881_x002D_2(38,"1881-2"),
        
        _1882_x002D_0(39,"1882-0"),
        
        _1883_x002D_8(40,"1883-8"),
        
        _1884_x002D_6(41,"1884-6"),
        
        _1885_x002D_3(42,"1885-3"),
        
        _1886_x002D_1(43,"1886-1"),
        
        _1887_x002D_9(44,"1887-9"),
        
        _1888_x002D_7(45,"1888-7");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeInupiatEskimo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeInupiatEskimo fromString(String str)
        {
            if (str.equals("1844-0"))
                return _1844_x002D_0;
            if (str.equals("1845-7"))
                return _1845_x002D_7;
            if (str.equals("1846-5"))
                return _1846_x002D_5;
            if (str.equals("1847-3"))
                return _1847_x002D_3;
            if (str.equals("1849-9"))
                return _1849_x002D_9;
            if (str.equals("1848-1"))
                return _1848_x002D_1;
            if (str.equals("1850-7"))
                return _1850_x002D_7;
            if (str.equals("1851-5"))
                return _1851_x002D_5;
            if (str.equals("1852-3"))
                return _1852_x002D_3;
            if (str.equals("1853-1"))
                return _1853_x002D_1;
            if (str.equals("1854-9"))
                return _1854_x002D_9;
            if (str.equals("1855-6"))
                return _1855_x002D_6;
            if (str.equals("1856-4"))
                return _1856_x002D_4;
            if (str.equals("1857-2"))
                return _1857_x002D_2;
            if (str.equals("1858-0"))
                return _1858_x002D_0;
            if (str.equals("1859-8"))
                return _1859_x002D_8;
            if (str.equals("1860-6"))
                return _1860_x002D_6;
            if (str.equals("1861-4"))
                return _1861_x002D_4;
            if (str.equals("1862-2"))
                return _1862_x002D_2;
            if (str.equals("1863-0"))
                return _1863_x002D_0;
            if (str.equals("1864-8"))
                return _1864_x002D_8;
            if (str.equals("1865-5"))
                return _1865_x002D_5;
            if (str.equals("1866-3"))
                return _1866_x002D_3;
            if (str.equals("1867-1"))
                return _1867_x002D_1;
            if (str.equals("1868-9"))
                return _1868_x002D_9;
            if (str.equals("1869-7"))
                return _1869_x002D_7;
            if (str.equals("1889-5"))
                return _1889_x002D_5;
            if (str.equals("1870-5"))
                return _1870_x002D_5;
            if (str.equals("1871-3"))
                return _1871_x002D_3;
            if (str.equals("1872-1"))
                return _1872_x002D_1;
            if (str.equals("1873-9"))
                return _1873_x002D_9;
            if (str.equals("1874-7"))
                return _1874_x002D_7;
            if (str.equals("1875-4"))
                return _1875_x002D_4;
            if (str.equals("1876-2"))
                return _1876_x002D_2;
            if (str.equals("1877-0"))
                return _1877_x002D_0;
            if (str.equals("1878-8"))
                return _1878_x002D_8;
            if (str.equals("1879-6"))
                return _1879_x002D_6;
            if (str.equals("1880-4"))
                return _1880_x002D_4;
            if (str.equals("1881-2"))
                return _1881_x002D_2;
            if (str.equals("1882-0"))
                return _1882_x002D_0;
            if (str.equals("1883-8"))
                return _1883_x002D_8;
            if (str.equals("1884-6"))
                return _1884_x002D_6;
            if (str.equals("1885-3"))
                return _1885_x002D_3;
            if (str.equals("1886-1"))
                return _1886_x002D_1;
            if (str.equals("1887-9"))
                return _1887_x002D_9;
            if (str.equals("1888-7"))
                return _1888_x002D_7;
		    return null;
        }
    }

	/**
	* specDomain: S15617 (C-0-T14914-S14915-S15470-S15569-S15617-cpt)
	*/
    public enum RaceAlaskanNativeSiberianEskimo
    {
        
        _1891_x002D_1(0,"1891-1"),
        
        _1892_x002D_9(1,"1892-9"),
        
        _1893_x002D_7(2,"1893-7"),
        
        _1894_x002D_5(3,"1894-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeSiberianEskimo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeSiberianEskimo fromString(String str)
        {
            if (str.equals("1891-1"))
                return _1891_x002D_1;
            if (str.equals("1892-9"))
                return _1892_x002D_9;
            if (str.equals("1893-7"))
                return _1893_x002D_7;
            if (str.equals("1894-5"))
                return _1894_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15621 (C-0-T14914-S14915-S15470-S15569-S15621-cpt)
	*/
    public enum RaceAlaskanNativeYupikEskimo
    {
        
        _1896_x002D_0(0,"1896-0"),
        
        _1897_x002D_8(1,"1897-8"),
        
        _1898_x002D_6(2,"1898-6"),
        
        _1899_x002D_4(3,"1899-4"),
        
        _1900_x002D_0(4,"1900-0"),
        
        _1901_x002D_8(5,"1901-8"),
        
        _1902_x002D_6(6,"1902-6"),
        
        _1903_x002D_4(7,"1903-4"),
        
        _1904_x002D_2(8,"1904-2"),
        
        _1905_x002D_9(9,"1905-9"),
        
        _1906_x002D_7(10,"1906-7"),
        
        _1907_x002D_5(11,"1907-5"),
        
        _1908_x002D_3(12,"1908-3"),
        
        _1909_x002D_1(13,"1909-1"),
        
        _1910_x002D_9(14,"1910-9"),
        
        _1911_x002D_7(15,"1911-7"),
        
        _1912_x002D_5(16,"1912-5"),
        
        _1913_x002D_3(17,"1913-3"),
        
        _1914_x002D_1(18,"1914-1"),
        
        _1915_x002D_8(19,"1915-8"),
        
        _1916_x002D_6(20,"1916-6"),
        
        _1917_x002D_4(21,"1917-4"),
        
        _1962_x002D_0(22,"1962-0"),
        
        _1918_x002D_2(23,"1918-2"),
        
        _1919_x002D_0(24,"1919-0"),
        
        _1920_x002D_8(25,"1920-8"),
        
        _1921_x002D_6(26,"1921-6"),
        
        _1922_x002D_4(27,"1922-4"),
        
        _1923_x002D_2(28,"1923-2"),
        
        _1924_x002D_0(29,"1924-0"),
        
        _1925_x002D_7(30,"1925-7"),
        
        _1926_x002D_5(31,"1926-5"),
        
        _1927_x002D_3(32,"1927-3"),
        
        _1928_x002D_1(33,"1928-1"),
        
        _1929_x002D_9(34,"1929-9"),
        
        _1930_x002D_7(35,"1930-7"),
        
        _1931_x002D_5(36,"1931-5"),
        
        _1932_x002D_3(37,"1932-3"),
        
        _1933_x002D_1(38,"1933-1"),
        
        _1934_x002D_9(39,"1934-9"),
        
        _1935_x002D_6(40,"1935-6"),
        
        _1937_x002D_2(41,"1937-2"),
        
        _1938_x002D_0(42,"1938-0"),
        
        _1936_x002D_4(43,"1936-4"),
        
        _1940_x002D_6(44,"1940-6"),
        
        _1939_x002D_8(45,"1939-8"),
        
        _1941_x002D_4(46,"1941-4"),
        
        _1942_x002D_2(47,"1942-2"),
        
        _1943_x002D_0(48,"1943-0"),
        
        _1944_x002D_8(49,"1944-8"),
        
        _1945_x002D_5(50,"1945-5"),
        
        _1946_x002D_3(51,"1946-3"),
        
        _1947_x002D_1(52,"1947-1"),
        
        _1948_x002D_9(53,"1948-9"),
        
        _1949_x002D_7(54,"1949-7"),
        
        _1950_x002D_5(55,"1950-5"),
        
        _1952_x002D_1(56,"1952-1"),
        
        _1953_x002D_9(57,"1953-9"),
        
        _1954_x002D_7(58,"1954-7"),
        
        _1963_x002D_8(59,"1963-8"),
        
        _1951_x002D_3(60,"1951-3"),
        
        _1955_x002D_4(61,"1955-4"),
        
        _1956_x002D_2(62,"1956-2"),
        
        _1957_x002D_0(63,"1957-0"),
        
        _1958_x002D_8(64,"1958-8"),
        
        _1959_x002D_6(65,"1959-6"),
        
        _1960_x002D_4(66,"1960-4"),
        
        _1961_x002D_2(67,"1961-2"),
        
        _1964_x002D_6(68,"1964-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAlaskanNativeYupikEskimo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAlaskanNativeYupikEskimo fromString(String str)
        {
            if (str.equals("1896-0"))
                return _1896_x002D_0;
            if (str.equals("1897-8"))
                return _1897_x002D_8;
            if (str.equals("1898-6"))
                return _1898_x002D_6;
            if (str.equals("1899-4"))
                return _1899_x002D_4;
            if (str.equals("1900-0"))
                return _1900_x002D_0;
            if (str.equals("1901-8"))
                return _1901_x002D_8;
            if (str.equals("1902-6"))
                return _1902_x002D_6;
            if (str.equals("1903-4"))
                return _1903_x002D_4;
            if (str.equals("1904-2"))
                return _1904_x002D_2;
            if (str.equals("1905-9"))
                return _1905_x002D_9;
            if (str.equals("1906-7"))
                return _1906_x002D_7;
            if (str.equals("1907-5"))
                return _1907_x002D_5;
            if (str.equals("1908-3"))
                return _1908_x002D_3;
            if (str.equals("1909-1"))
                return _1909_x002D_1;
            if (str.equals("1910-9"))
                return _1910_x002D_9;
            if (str.equals("1911-7"))
                return _1911_x002D_7;
            if (str.equals("1912-5"))
                return _1912_x002D_5;
            if (str.equals("1913-3"))
                return _1913_x002D_3;
            if (str.equals("1914-1"))
                return _1914_x002D_1;
            if (str.equals("1915-8"))
                return _1915_x002D_8;
            if (str.equals("1916-6"))
                return _1916_x002D_6;
            if (str.equals("1917-4"))
                return _1917_x002D_4;
            if (str.equals("1962-0"))
                return _1962_x002D_0;
            if (str.equals("1918-2"))
                return _1918_x002D_2;
            if (str.equals("1919-0"))
                return _1919_x002D_0;
            if (str.equals("1920-8"))
                return _1920_x002D_8;
            if (str.equals("1921-6"))
                return _1921_x002D_6;
            if (str.equals("1922-4"))
                return _1922_x002D_4;
            if (str.equals("1923-2"))
                return _1923_x002D_2;
            if (str.equals("1924-0"))
                return _1924_x002D_0;
            if (str.equals("1925-7"))
                return _1925_x002D_7;
            if (str.equals("1926-5"))
                return _1926_x002D_5;
            if (str.equals("1927-3"))
                return _1927_x002D_3;
            if (str.equals("1928-1"))
                return _1928_x002D_1;
            if (str.equals("1929-9"))
                return _1929_x002D_9;
            if (str.equals("1930-7"))
                return _1930_x002D_7;
            if (str.equals("1931-5"))
                return _1931_x002D_5;
            if (str.equals("1932-3"))
                return _1932_x002D_3;
            if (str.equals("1933-1"))
                return _1933_x002D_1;
            if (str.equals("1934-9"))
                return _1934_x002D_9;
            if (str.equals("1935-6"))
                return _1935_x002D_6;
            if (str.equals("1937-2"))
                return _1937_x002D_2;
            if (str.equals("1938-0"))
                return _1938_x002D_0;
            if (str.equals("1936-4"))
                return _1936_x002D_4;
            if (str.equals("1940-6"))
                return _1940_x002D_6;
            if (str.equals("1939-8"))
                return _1939_x002D_8;
            if (str.equals("1941-4"))
                return _1941_x002D_4;
            if (str.equals("1942-2"))
                return _1942_x002D_2;
            if (str.equals("1943-0"))
                return _1943_x002D_0;
            if (str.equals("1944-8"))
                return _1944_x002D_8;
            if (str.equals("1945-5"))
                return _1945_x002D_5;
            if (str.equals("1946-3"))
                return _1946_x002D_3;
            if (str.equals("1947-1"))
                return _1947_x002D_1;
            if (str.equals("1948-9"))
                return _1948_x002D_9;
            if (str.equals("1949-7"))
                return _1949_x002D_7;
            if (str.equals("1950-5"))
                return _1950_x002D_5;
            if (str.equals("1952-1"))
                return _1952_x002D_1;
            if (str.equals("1953-9"))
                return _1953_x002D_9;
            if (str.equals("1954-7"))
                return _1954_x002D_7;
            if (str.equals("1963-8"))
                return _1963_x002D_8;
            if (str.equals("1951-3"))
                return _1951_x002D_3;
            if (str.equals("1955-4"))
                return _1955_x002D_4;
            if (str.equals("1956-2"))
                return _1956_x002D_2;
            if (str.equals("1957-0"))
                return _1957_x002D_0;
            if (str.equals("1958-8"))
                return _1958_x002D_8;
            if (str.equals("1959-6"))
                return _1959_x002D_6;
            if (str.equals("1960-4"))
                return _1960_x002D_4;
            if (str.equals("1961-2"))
                return _1961_x002D_2;
            if (str.equals("1964-6"))
                return _1964_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S14972 (C-0-T14914-S14915-S14916-S14972-cpt)
	*/
    public enum Catawba
    {
        
        _1076_x002D_9(0,"1076-9"),
        
        _1744_x002D_2(1,"1744-2"),
        
        _1741_x002D_8(2,"1741-8"),
        
        _1742_x002D_6(3,"1742-6"),
        
        _1743_x002D_4(4,"1743-4"),
        
        _1745_x002D_9(5,"1745-9"),
        
        _1746_x002D_7(6,"1746-7"),
        
        _1747_x002D_5(7,"1747-5"),
        
        _1748_x002D_3(8,"1748-3"),
        
        _1749_x002D_1(9,"1749-1"),
        
        _1750_x002D_9(10,"1750-9"),
        
        _1751_x002D_7(11,"1751-7"),
        
        _1752_x002D_5(12,"1752-5"),
        
        _1753_x002D_3(13,"1753-3"),
        
        _1754_x002D_1(14,"1754-1"),
        
        _1755_x002D_8(15,"1755-8"),
        
        _1756_x002D_6(16,"1756-6"),
        
        _1757_x002D_4(17,"1757-4"),
        
        _1758_x002D_2(18,"1758-2"),
        
        _1759_x002D_0(19,"1759-0"),
        
        _1760_x002D_8(20,"1760-8"),
        
        _1761_x002D_6(21,"1761-6"),
        
        _1762_x002D_4(22,"1762-4"),
        
        _1763_x002D_2(23,"1763-2"),
        
        _1764_x002D_0(24,"1764-0"),
        
        _1765_x002D_7(25,"1765-7"),
        
        _1766_x002D_5(26,"1766-5"),
        
        _1767_x002D_3(27,"1767-3"),
        
        _1768_x002D_1(28,"1768-1"),
        
        _1769_x002D_9(29,"1769-9"),
        
        _1770_x002D_7(30,"1770-7"),
        
        _1771_x002D_5(31,"1771-5"),
        
        _1772_x002D_3(32,"1772-3"),
        
        _1773_x002D_1(33,"1773-1"),
        
        _1774_x002D_9(34,"1774-9"),
        
        _1775_x002D_6(35,"1775-6"),
        
        _1776_x002D_4(36,"1776-4"),
        
        _1777_x002D_2(37,"1777-2"),
        
        _1778_x002D_0(38,"1778-0"),
        
        _1780_x002D_6(39,"1780-6"),
        
        _1779_x002D_8(40,"1779-8"),
        
        _1781_x002D_4(41,"1781-4"),
        
        _1782_x002D_2(42,"1782-2"),
        
        _1783_x002D_0(43,"1783-0"),
        
        _1784_x002D_8(44,"1784-8"),
        
        _1785_x002D_5(45,"1785-5"),
        
        _1786_x002D_3(46,"1786-3"),
        
        _1787_x002D_1(47,"1787-1"),
        
        _1788_x002D_9(48,"1788-9"),
        
        _1789_x002D_7(49,"1789-7"),
        
        _1790_x002D_5(50,"1790-5"),
        
        _1791_x002D_3(51,"1791-3"),
        
        _1792_x002D_1(52,"1792-1"),
        
        _1793_x002D_9(53,"1793-9"),
        
        _1795_x002D_4(54,"1795-4"),
        
        _1794_x002D_7(55,"1794-7"),
        
        _1796_x002D_2(56,"1796-2"),
        
        _1797_x002D_0(57,"1797-0"),
        
        _1798_x002D_8(58,"1798-8"),
        
        _1799_x002D_6(59,"1799-6"),
        
        _1800_x002D_2(60,"1800-2"),
        
        _1801_x002D_0(61,"1801-0"),
        
        _1802_x002D_8(62,"1802-8"),
        
        _1803_x002D_6(63,"1803-6"),
        
        _1804_x002D_4(64,"1804-4"),
        
        _1805_x002D_1(65,"1805-1"),
        
        _1806_x002D_9(66,"1806-9"),
        
        _1807_x002D_7(67,"1807-7"),
        
        _1808_x002D_5(68,"1808-5"),
        
        _1809_x002D_3(69,"1809-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        Catawba(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Catawba fromString(String str)
        {
            if (str.equals("1076-9"))
                return _1076_x002D_9;
            if (str.equals("1744-2"))
                return _1744_x002D_2;
            if (str.equals("1741-8"))
                return _1741_x002D_8;
            if (str.equals("1742-6"))
                return _1742_x002D_6;
            if (str.equals("1743-4"))
                return _1743_x002D_4;
            if (str.equals("1745-9"))
                return _1745_x002D_9;
            if (str.equals("1746-7"))
                return _1746_x002D_7;
            if (str.equals("1747-5"))
                return _1747_x002D_5;
            if (str.equals("1748-3"))
                return _1748_x002D_3;
            if (str.equals("1749-1"))
                return _1749_x002D_1;
            if (str.equals("1750-9"))
                return _1750_x002D_9;
            if (str.equals("1751-7"))
                return _1751_x002D_7;
            if (str.equals("1752-5"))
                return _1752_x002D_5;
            if (str.equals("1753-3"))
                return _1753_x002D_3;
            if (str.equals("1754-1"))
                return _1754_x002D_1;
            if (str.equals("1755-8"))
                return _1755_x002D_8;
            if (str.equals("1756-6"))
                return _1756_x002D_6;
            if (str.equals("1757-4"))
                return _1757_x002D_4;
            if (str.equals("1758-2"))
                return _1758_x002D_2;
            if (str.equals("1759-0"))
                return _1759_x002D_0;
            if (str.equals("1760-8"))
                return _1760_x002D_8;
            if (str.equals("1761-6"))
                return _1761_x002D_6;
            if (str.equals("1762-4"))
                return _1762_x002D_4;
            if (str.equals("1763-2"))
                return _1763_x002D_2;
            if (str.equals("1764-0"))
                return _1764_x002D_0;
            if (str.equals("1765-7"))
                return _1765_x002D_7;
            if (str.equals("1766-5"))
                return _1766_x002D_5;
            if (str.equals("1767-3"))
                return _1767_x002D_3;
            if (str.equals("1768-1"))
                return _1768_x002D_1;
            if (str.equals("1769-9"))
                return _1769_x002D_9;
            if (str.equals("1770-7"))
                return _1770_x002D_7;
            if (str.equals("1771-5"))
                return _1771_x002D_5;
            if (str.equals("1772-3"))
                return _1772_x002D_3;
            if (str.equals("1773-1"))
                return _1773_x002D_1;
            if (str.equals("1774-9"))
                return _1774_x002D_9;
            if (str.equals("1775-6"))
                return _1775_x002D_6;
            if (str.equals("1776-4"))
                return _1776_x002D_4;
            if (str.equals("1777-2"))
                return _1777_x002D_2;
            if (str.equals("1778-0"))
                return _1778_x002D_0;
            if (str.equals("1780-6"))
                return _1780_x002D_6;
            if (str.equals("1779-8"))
                return _1779_x002D_8;
            if (str.equals("1781-4"))
                return _1781_x002D_4;
            if (str.equals("1782-2"))
                return _1782_x002D_2;
            if (str.equals("1783-0"))
                return _1783_x002D_0;
            if (str.equals("1784-8"))
                return _1784_x002D_8;
            if (str.equals("1785-5"))
                return _1785_x002D_5;
            if (str.equals("1786-3"))
                return _1786_x002D_3;
            if (str.equals("1787-1"))
                return _1787_x002D_1;
            if (str.equals("1788-9"))
                return _1788_x002D_9;
            if (str.equals("1789-7"))
                return _1789_x002D_7;
            if (str.equals("1790-5"))
                return _1790_x002D_5;
            if (str.equals("1791-3"))
                return _1791_x002D_3;
            if (str.equals("1792-1"))
                return _1792_x002D_1;
            if (str.equals("1793-9"))
                return _1793_x002D_9;
            if (str.equals("1795-4"))
                return _1795_x002D_4;
            if (str.equals("1794-7"))
                return _1794_x002D_7;
            if (str.equals("1796-2"))
                return _1796_x002D_2;
            if (str.equals("1797-0"))
                return _1797_x002D_0;
            if (str.equals("1798-8"))
                return _1798_x002D_8;
            if (str.equals("1799-6"))
                return _1799_x002D_6;
            if (str.equals("1800-2"))
                return _1800_x002D_2;
            if (str.equals("1801-0"))
                return _1801_x002D_0;
            if (str.equals("1802-8"))
                return _1802_x002D_8;
            if (str.equals("1803-6"))
                return _1803_x002D_6;
            if (str.equals("1804-4"))
                return _1804_x002D_4;
            if (str.equals("1805-1"))
                return _1805_x002D_1;
            if (str.equals("1806-9"))
                return _1806_x002D_9;
            if (str.equals("1807-7"))
                return _1807_x002D_7;
            if (str.equals("1808-5"))
                return _1808_x002D_5;
            if (str.equals("1809-3"))
                return _1809_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S14919 (C-0-T14914-S14915-S14916-S14919-cpt)
	*/
    public enum RaceAmericanIndianApache
    {
        
        _1010_x002D_8(0,"1010-8"),
        
        _1011_x002D_6(1,"1011-6"),
        
        _1012_x002D_4(2,"1012-4"),
        
        _1013_x002D_2(3,"1013-2"),
        
        _1014_x002D_0(4,"1014-0"),
        
        _1015_x002D_7(5,"1015-7"),
        
        _1016_x002D_5(6,"1016-5"),
        
        _1017_x002D_3(7,"1017-3"),
        
        _1018_x002D_1(8,"1018-1"),
        
        _1019_x002D_9(9,"1019-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianApache(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianApache fromString(String str)
        {
            if (str.equals("1010-8"))
                return _1010_x002D_8;
            if (str.equals("1011-6"))
                return _1011_x002D_6;
            if (str.equals("1012-4"))
                return _1012_x002D_4;
            if (str.equals("1013-2"))
                return _1013_x002D_2;
            if (str.equals("1014-0"))
                return _1014_x002D_0;
            if (str.equals("1015-7"))
                return _1015_x002D_7;
            if (str.equals("1016-5"))
                return _1016_x002D_5;
            if (str.equals("1017-3"))
                return _1017_x002D_3;
            if (str.equals("1018-1"))
                return _1018_x002D_1;
            if (str.equals("1019-9"))
                return _1019_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S14929 (C-0-T14914-S14915-S14916-S14929-cpt)
	*/
    public enum RaceAmericanIndianArapaho
    {
        
        _1021_x002D_5(0,"1021-5"),
        
        _1022_x002D_3(1,"1022-3"),
        
        _1023_x002D_1(2,"1023-1"),
        
        _1024_x002D_9(3,"1024-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianArapaho(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianArapaho fromString(String str)
        {
            if (str.equals("1021-5"))
                return _1021_x002D_5;
            if (str.equals("1022-3"))
                return _1022_x002D_3;
            if (str.equals("1023-1"))
                return _1023_x002D_1;
            if (str.equals("1024-9"))
                return _1024_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S14935 (C-0-T14914-S14915-S14916-S14935-cpt)
	*/
    public enum RaceAmericanIndianAssiniboineSioux
    {
        
        _1030_x002D_6(0,"1030-6"),
        
        _1031_x002D_4(1,"1031-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianAssiniboineSioux(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianAssiniboineSioux fromString(String str)
        {
            if (str.equals("1030-6"))
                return _1030_x002D_6;
            if (str.equals("1031-4"))
                return _1031_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S14941 (C-0-T14914-S14915-S14916-S14941-cpt)
	*/
    public enum RaceAmericanIndianCaddo
    {
        
        _1041_x002D_3(0,"1041-3"),
        
        _1042_x002D_1(1,"1042-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCaddo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCaddo fromString(String str)
        {
            if (str.equals("1041-3"))
                return _1041_x002D_3;
            if (str.equals("1042-1"))
                return _1042_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S14943 (C-0-T14914-S14915-S14916-S14943-cpt)
	*/
    public enum RaceAmericanIndianCahuilla
    {
        
        _1044_x002D_7(0,"1044-7"),
        
        _1045_x002D_4(1,"1045-4"),
        
        _1046_x002D_2(2,"1046-2"),
        
        _1047_x002D_0(3,"1047-0"),
        
        _1048_x002D_8(4,"1048-8"),
        
        _1049_x002D_6(5,"1049-6"),
        
        _1050_x002D_4(6,"1050-4"),
        
        _1051_x002D_2(7,"1051-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCahuilla(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCahuilla fromString(String str)
        {
            if (str.equals("1044-7"))
                return _1044_x002D_7;
            if (str.equals("1045-4"))
                return _1045_x002D_4;
            if (str.equals("1046-2"))
                return _1046_x002D_2;
            if (str.equals("1047-0"))
                return _1047_x002D_0;
            if (str.equals("1048-8"))
                return _1048_x002D_8;
            if (str.equals("1049-6"))
                return _1049_x002D_6;
            if (str.equals("1050-4"))
                return _1050_x002D_4;
            if (str.equals("1051-2"))
                return _1051_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S14951 (C-0-T14914-S14915-S14916-S14951-cpt)
	*/
    public enum RaceAmericanIndianCalifornia
    {
        
        _1053_x002D_8(0,"1053-8"),
        
        _1054_x002D_6(1,"1054-6"),
        
        _1055_x002D_3(2,"1055-3"),
        
        _1056_x002D_1(3,"1056-1"),
        
        _1057_x002D_9(4,"1057-9"),
        
        _1058_x002D_7(5,"1058-7"),
        
        _1059_x002D_5(6,"1059-5"),
        
        _1060_x002D_3(7,"1060-3"),
        
        _1061_x002D_1(8,"1061-1"),
        
        _1062_x002D_9(9,"1062-9"),
        
        _1063_x002D_7(10,"1063-7"),
        
        _1064_x002D_5(11,"1064-5"),
        
        _1065_x002D_2(12,"1065-2"),
        
        _1066_x002D_0(13,"1066-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCalifornia(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCalifornia fromString(String str)
        {
            if (str.equals("1053-8"))
                return _1053_x002D_8;
            if (str.equals("1054-6"))
                return _1054_x002D_6;
            if (str.equals("1055-3"))
                return _1055_x002D_3;
            if (str.equals("1056-1"))
                return _1056_x002D_1;
            if (str.equals("1057-9"))
                return _1057_x002D_9;
            if (str.equals("1058-7"))
                return _1058_x002D_7;
            if (str.equals("1059-5"))
                return _1059_x002D_5;
            if (str.equals("1060-3"))
                return _1060_x002D_3;
            if (str.equals("1061-1"))
                return _1061_x002D_1;
            if (str.equals("1062-9"))
                return _1062_x002D_9;
            if (str.equals("1063-7"))
                return _1063_x002D_7;
            if (str.equals("1064-5"))
                return _1064_x002D_5;
            if (str.equals("1065-2"))
                return _1065_x002D_2;
            if (str.equals("1066-0"))
                return _1066_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S14975 (C-0-T14914-S14915-S14916-S14975-cpt)
	*/
    public enum RaceAmericanIndianChemakuan
    {
        
        _1082_x002D_7(0,"1082-7"),
        
        _1083_x002D_5(1,"1083-5"),
        
        _1084_x002D_3(2,"1084-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChemakuan(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChemakuan fromString(String str)
        {
            if (str.equals("1082-7"))
                return _1082_x002D_7;
            if (str.equals("1083-5"))
                return _1083_x002D_5;
            if (str.equals("1084-3"))
                return _1084_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S14979 (C-0-T14914-S14915-S14916-S14979-cpt)
	*/
    public enum RaceAmericanIndianCherokee
    {
        
        _1088_x002D_4(0,"1088-4"),
        
        _1089_x002D_2(1,"1089-2"),
        
        _1090_x002D_0(2,"1090-0"),
        
        _1091_x002D_8(3,"1091-8"),
        
        _1092_x002D_6(4,"1092-6"),
        
        _1093_x002D_4(5,"1093-4"),
        
        _1094_x002D_2(6,"1094-2"),
        
        _1095_x002D_9(7,"1095-9"),
        
        _1096_x002D_7(8,"1096-7"),
        
        _1097_x002D_5(9,"1097-5"),
        
        _1098_x002D_3(10,"1098-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCherokee(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCherokee fromString(String str)
        {
            if (str.equals("1088-4"))
                return _1088_x002D_4;
            if (str.equals("1089-2"))
                return _1089_x002D_2;
            if (str.equals("1090-0"))
                return _1090_x002D_0;
            if (str.equals("1091-8"))
                return _1091_x002D_8;
            if (str.equals("1092-6"))
                return _1092_x002D_6;
            if (str.equals("1093-4"))
                return _1093_x002D_4;
            if (str.equals("1094-2"))
                return _1094_x002D_2;
            if (str.equals("1095-9"))
                return _1095_x002D_9;
            if (str.equals("1096-7"))
                return _1096_x002D_7;
            if (str.equals("1097-5"))
                return _1097_x002D_5;
            if (str.equals("1098-3"))
                return _1098_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S14991 (C-0-T14914-S14915-S14916-S14991-cpt)
	*/
    public enum RaceAmericanIndianCheyenne
    {
        
        _1102_x002D_3(0,"1102-3"),
        
        _1103_x002D_1(1,"1103-1"),
        
        _1104_x002D_9(2,"1104-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCheyenne(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCheyenne fromString(String str)
        {
            if (str.equals("1102-3"))
                return _1102_x002D_3;
            if (str.equals("1103-1"))
                return _1103_x002D_1;
            if (str.equals("1104-9"))
                return _1104_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S14995 (C-0-T14914-S14915-S14916-S14995-cpt)
	*/
    public enum RaceAmericanIndianChickahominy
    {
        
        _1108_x002D_0(0,"1108-0"),
        
        _1109_x002D_8(1,"1109-8"),
        
        _1110_x002D_6(2,"1110-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChickahominy(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChickahominy fromString(String str)
        {
            if (str.equals("1108-0"))
                return _1108_x002D_0;
            if (str.equals("1109-8"))
                return _1109_x002D_8;
            if (str.equals("1110-6"))
                return _1110_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S14999 (C-0-T14914-S14915-S14916-S14999-cpt)
	*/
    public enum RaceAmericanIndianChinook
    {
        
        _1114_x002D_8(0,"1114-8"),
        
        _1115_x002D_5(1,"1115-5"),
        
        _1116_x002D_3(2,"1116-3"),
        
        _1117_x002D_1(3,"1117-1"),
        
        _1118_x002D_9(4,"1118-9"),
        
        _1119_x002D_7(5,"1119-7"),
        
        _1120_x002D_5(6,"1120-5"),
        
        _1121_x002D_3(7,"1121-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChinook(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChinook fromString(String str)
        {
            if (str.equals("1114-8"))
                return _1114_x002D_8;
            if (str.equals("1115-5"))
                return _1115_x002D_5;
            if (str.equals("1116-3"))
                return _1116_x002D_3;
            if (str.equals("1117-1"))
                return _1117_x002D_1;
            if (str.equals("1118-9"))
                return _1118_x002D_9;
            if (str.equals("1119-7"))
                return _1119_x002D_7;
            if (str.equals("1120-5"))
                return _1120_x002D_5;
            if (str.equals("1121-3"))
                return _1121_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15007 (C-0-T14914-S14915-S14916-S15007-cpt)
	*/
    public enum RaceAmericanIndianChippewa
    {
        
        _1123_x002D_9(0,"1123-9"),
        
        _1124_x002D_7(1,"1124-7"),
        
        _1125_x002D_4(2,"1125-4"),
        
        _1126_x002D_2(3,"1126-2"),
        
        _1127_x002D_0(4,"1127-0"),
        
        _1128_x002D_8(5,"1128-8"),
        
        _1129_x002D_6(6,"1129-6"),
        
        _1130_x002D_4(7,"1130-4"),
        
        _1131_x002D_2(8,"1131-2"),
        
        _1132_x002D_0(9,"1132-0"),
        
        _1134_x002D_6(10,"1134-6"),
        
        _1133_x002D_8(11,"1133-8"),
        
        _1135_x002D_3(12,"1135-3"),
        
        _1136_x002D_1(13,"1136-1"),
        
        _1137_x002D_9(14,"1137-9"),
        
        _1138_x002D_7(15,"1138-7"),
        
        _1139_x002D_5(16,"1139-5"),
        
        _1140_x002D_3(17,"1140-3"),
        
        _1141_x002D_1(18,"1141-1"),
        
        _1142_x002D_9(19,"1142-9"),
        
        _1143_x002D_7(20,"1143-7"),
        
        _1145_x002D_2(21,"1145-2"),
        
        _1146_x002D_0(22,"1146-0"),
        
        _1144_x002D_5(23,"1144-5"),
        
        _1147_x002D_8(24,"1147-8"),
        
        _1148_x002D_6(25,"1148-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChippewa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChippewa fromString(String str)
        {
            if (str.equals("1123-9"))
                return _1123_x002D_9;
            if (str.equals("1124-7"))
                return _1124_x002D_7;
            if (str.equals("1125-4"))
                return _1125_x002D_4;
            if (str.equals("1126-2"))
                return _1126_x002D_2;
            if (str.equals("1127-0"))
                return _1127_x002D_0;
            if (str.equals("1128-8"))
                return _1128_x002D_8;
            if (str.equals("1129-6"))
                return _1129_x002D_6;
            if (str.equals("1130-4"))
                return _1130_x002D_4;
            if (str.equals("1131-2"))
                return _1131_x002D_2;
            if (str.equals("1132-0"))
                return _1132_x002D_0;
            if (str.equals("1134-6"))
                return _1134_x002D_6;
            if (str.equals("1133-8"))
                return _1133_x002D_8;
            if (str.equals("1135-3"))
                return _1135_x002D_3;
            if (str.equals("1136-1"))
                return _1136_x002D_1;
            if (str.equals("1137-9"))
                return _1137_x002D_9;
            if (str.equals("1138-7"))
                return _1138_x002D_7;
            if (str.equals("1139-5"))
                return _1139_x002D_5;
            if (str.equals("1140-3"))
                return _1140_x002D_3;
            if (str.equals("1141-1"))
                return _1141_x002D_1;
            if (str.equals("1142-9"))
                return _1142_x002D_9;
            if (str.equals("1143-7"))
                return _1143_x002D_7;
            if (str.equals("1145-2"))
                return _1145_x002D_2;
            if (str.equals("1146-0"))
                return _1146_x002D_0;
            if (str.equals("1144-5"))
                return _1144_x002D_5;
            if (str.equals("1147-8"))
                return _1147_x002D_8;
            if (str.equals("1148-6"))
                return _1148_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15033 (C-0-T14914-S14915-S14916-S15033-cpt)
	*/
    public enum RaceAmericanIndianChippewaCree
    {
        
        _1150_x002D_2(0,"1150-2"),
        
        _1151_x002D_0(1,"1151-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChippewaCree(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChippewaCree fromString(String str)
        {
            if (str.equals("1150-2"))
                return _1150_x002D_2;
            if (str.equals("1151-0"))
                return _1151_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15036 (C-0-T14914-S14915-S14916-S15036-cpt)
	*/
    public enum RaceAmericanIndianChoctaw
    {
        
        _1155_x002D_1(0,"1155-1"),
        
        _1156_x002D_9(1,"1156-9"),
        
        _1157_x002D_7(2,"1157-7"),
        
        _1158_x002D_5(3,"1158-5"),
        
        _1159_x002D_3(4,"1159-3"),
        
        _1160_x002D_1(5,"1160-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChoctaw(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChoctaw fromString(String str)
        {
            if (str.equals("1155-1"))
                return _1155_x002D_1;
            if (str.equals("1156-9"))
                return _1156_x002D_9;
            if (str.equals("1157-7"))
                return _1157_x002D_7;
            if (str.equals("1158-5"))
                return _1158_x002D_5;
            if (str.equals("1159-3"))
                return _1159_x002D_3;
            if (str.equals("1160-1"))
                return _1160_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15042 (C-0-T14914-S14915-S14916-S15042-cpt)
	*/
    public enum RaceAmericanIndianChumash
    {
        
        _1162_x002D_7(0,"1162-7"),
        
        _1163_x002D_5(1,"1163-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianChumash(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianChumash fromString(String str)
        {
            if (str.equals("1162-7"))
                return _1162_x002D_7;
            if (str.equals("1163-5"))
                return _1163_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15049 (C-0-T14914-S14915-S14916-S15049-cpt)
	*/
    public enum RaceAmericanIndianComanche
    {
        
        _1175_x002D_9(0,"1175-9"),
        
        _1176_x002D_7(1,"1176-7");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianComanche(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianComanche fromString(String str)
        {
            if (str.equals("1175-9"))
                return _1175_x002D_9;
            if (str.equals("1176-7"))
                return _1176_x002D_7;
		    return null;
        }
    }

	/**
	* specDomain: S15055 (C-0-T14914-S14915-S14916-S15055-cpt)
	*/
    public enum RaceAmericanIndianCoushatta
    {
        
        _1186_x002D_6(0,"1186-6"),
        
        _1187_x002D_4(1,"1187-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCoushatta(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCoushatta fromString(String str)
        {
            if (str.equals("1186-6"))
                return _1186_x002D_6;
            if (str.equals("1187-4"))
                return _1187_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15059 (C-0-T14914-S14915-S14916-S15059-cpt)
	*/
    public enum RaceAmericanIndianCreek
    {
        
        _1193_x002D_2(0,"1193-2"),
        
        _1194_x002D_0(1,"1194-0"),
        
        _1195_x002D_7(2,"1195-7"),
        
        _1196_x002D_5(3,"1196-5"),
        
        _1197_x002D_3(4,"1197-3"),
        
        _1198_x002D_1(5,"1198-1"),
        
        _1199_x002D_9(6,"1199-9"),
        
        _1200_x002D_5(7,"1200-5"),
        
        _1201_x002D_3(8,"1201-3"),
        
        _1202_x002D_1(9,"1202-1"),
        
        _1203_x002D_9(10,"1203-9"),
        
        _1204_x002D_7(11,"1204-7"),
        
        _1205_x002D_4(12,"1205-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCreek(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCreek fromString(String str)
        {
            if (str.equals("1193-2"))
                return _1193_x002D_2;
            if (str.equals("1194-0"))
                return _1194_x002D_0;
            if (str.equals("1195-7"))
                return _1195_x002D_7;
            if (str.equals("1196-5"))
                return _1196_x002D_5;
            if (str.equals("1197-3"))
                return _1197_x002D_3;
            if (str.equals("1198-1"))
                return _1198_x002D_1;
            if (str.equals("1199-9"))
                return _1199_x002D_9;
            if (str.equals("1200-5"))
                return _1200_x002D_5;
            if (str.equals("1201-3"))
                return _1201_x002D_3;
            if (str.equals("1202-1"))
                return _1202_x002D_1;
            if (str.equals("1203-9"))
                return _1203_x002D_9;
            if (str.equals("1204-7"))
                return _1204_x002D_7;
            if (str.equals("1205-4"))
                return _1205_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15074 (C-0-T14914-S14915-S14916-S15074-cpt)
	*/
    public enum RaceAmericanIndianCupeno
    {
        
        _1211_x002D_2(0,"1211-2"),
        
        _1212_x002D_0(1,"1212-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianCupeno(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianCupeno fromString(String str)
        {
            if (str.equals("1211-2"))
                return _1211_x002D_2;
            if (str.equals("1212-0"))
                return _1212_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15076 (C-0-T14914-S14915-S14916-S15076-cpt)
	*/
    public enum RaceAmericanIndianDelaware
    {
        
        _1214_x002D_6(0,"1214-6"),
        
        _1215_x002D_3(1,"1215-3"),
        
        _1216_x002D_1(2,"1216-1"),
        
        _1217_x002D_9(3,"1217-9"),
        
        _1218_x002D_7(4,"1218-7"),
        
        _1219_x002D_5(5,"1219-5"),
        
        _1220_x002D_3(6,"1220-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianDelaware(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianDelaware fromString(String str)
        {
            if (str.equals("1214-6"))
                return _1214_x002D_6;
            if (str.equals("1215-3"))
                return _1215_x002D_3;
            if (str.equals("1216-1"))
                return _1216_x002D_1;
            if (str.equals("1217-9"))
                return _1217_x002D_9;
            if (str.equals("1218-7"))
                return _1218_x002D_7;
            if (str.equals("1219-5"))
                return _1219_x002D_5;
            if (str.equals("1220-3"))
                return _1220_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15083 (C-0-T14914-S14915-S14916-S15083-cpt)
	*/
    public enum RaceAmericanIndianDiegueno
    {
        
        _1222_x002D_9(0,"1222-9"),
        
        _1223_x002D_7(1,"1223-7"),
        
        _1224_x002D_5(2,"1224-5"),
        
        _1225_x002D_2(3,"1225-2"),
        
        _1226_x002D_0(4,"1226-0"),
        
        _1227_x002D_8(5,"1227-8"),
        
        _1228_x002D_6(6,"1228-6"),
        
        _1229_x002D_4(7,"1229-4"),
        
        _1230_x002D_2(8,"1230-2"),
        
        _1231_x002D_0(9,"1231-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianDiegueno(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianDiegueno fromString(String str)
        {
            if (str.equals("1222-9"))
                return _1222_x002D_9;
            if (str.equals("1223-7"))
                return _1223_x002D_7;
            if (str.equals("1224-5"))
                return _1224_x002D_5;
            if (str.equals("1225-2"))
                return _1225_x002D_2;
            if (str.equals("1226-0"))
                return _1226_x002D_0;
            if (str.equals("1227-8"))
                return _1227_x002D_8;
            if (str.equals("1228-6"))
                return _1228_x002D_6;
            if (str.equals("1229-4"))
                return _1229_x002D_4;
            if (str.equals("1230-2"))
                return _1230_x002D_2;
            if (str.equals("1231-0"))
                return _1231_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15093 (C-0-T14914-S14915-S14916-S15093-cpt)
	*/
    public enum RaceAmericanIndianEasternTribes
    {
        
        _1233_x002D_6(0,"1233-6"),
        
        _1234_x002D_4(1,"1234-4"),
        
        _1235_x002D_1(2,"1235-1"),
        
        _1236_x002D_9(3,"1236-9"),
        
        _1237_x002D_7(4,"1237-7"),
        
        _1238_x002D_5(5,"1238-5"),
        
        _1239_x002D_3(6,"1239-3"),
        
        _1240_x002D_1(7,"1240-1"),
        
        _1241_x002D_9(8,"1241-9"),
        
        _1242_x002D_7(9,"1242-7"),
        
        _1243_x002D_5(10,"1243-5"),
        
        _1244_x002D_3(11,"1244-3"),
        
        _1245_x002D_0(12,"1245-0"),
        
        _1246_x002D_8(13,"1246-8"),
        
        _1247_x002D_6(14,"1247-6"),
        
        _1248_x002D_4(15,"1248-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianEasternTribes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianEasternTribes fromString(String str)
        {
            if (str.equals("1233-6"))
                return _1233_x002D_6;
            if (str.equals("1234-4"))
                return _1234_x002D_4;
            if (str.equals("1235-1"))
                return _1235_x002D_1;
            if (str.equals("1236-9"))
                return _1236_x002D_9;
            if (str.equals("1237-7"))
                return _1237_x002D_7;
            if (str.equals("1238-5"))
                return _1238_x002D_5;
            if (str.equals("1239-3"))
                return _1239_x002D_3;
            if (str.equals("1240-1"))
                return _1240_x002D_1;
            if (str.equals("1241-9"))
                return _1241_x002D_9;
            if (str.equals("1242-7"))
                return _1242_x002D_7;
            if (str.equals("1243-5"))
                return _1243_x002D_5;
            if (str.equals("1244-3"))
                return _1244_x002D_3;
            if (str.equals("1245-0"))
                return _1245_x002D_0;
            if (str.equals("1246-8"))
                return _1246_x002D_8;
            if (str.equals("1247-6"))
                return _1247_x002D_6;
            if (str.equals("1248-4"))
                return _1248_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15116 (C-0-T14914-S14915-S14916-S15116-cpt)
	*/
    public enum RaceAmericanIndianGrosVentres
    {
        
        _1264_x002D_1(0,"1264-1"),
        
        _1265_x002D_8(1,"1265-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianGrosVentres(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianGrosVentres fromString(String str)
        {
            if (str.equals("1264-1"))
                return _1264_x002D_1;
            if (str.equals("1265-8"))
                return _1265_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15120 (C-0-T14914-S14915-S14916-S15120-cpt)
	*/
    public enum RaceAmericanIndianHoopa
    {
        
        _1271_x002D_6(0,"1271-6"),
        
        _1272_x002D_4(1,"1272-4"),
        
        _1273_x002D_2(2,"1273-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianHoopa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianHoopa fromString(String str)
        {
            if (str.equals("1271-6"))
                return _1271_x002D_6;
            if (str.equals("1272-4"))
                return _1272_x002D_4;
            if (str.equals("1273-2"))
                return _1273_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15126 (C-0-T14914-S14915-S14916-S15126-cpt)
	*/
    public enum RaceAmericanIndianIowa
    {
        
        _1281_x002D_5(0,"1281-5"),
        
        _1282_x002D_3(1,"1282-3"),
        
        _1283_x002D_1(2,"1283-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianIowa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianIowa fromString(String str)
        {
            if (str.equals("1281-5"))
                return _1281_x002D_5;
            if (str.equals("1282-3"))
                return _1282_x002D_3;
            if (str.equals("1283-1"))
                return _1283_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15129 (C-0-T14914-S14915-S14916-S15129-cpt)
	*/
    public enum RaceAmericanIndianIroquois
    {
        
        _1285_x002D_6(0,"1285-6"),
        
        _1286_x002D_4(1,"1286-4"),
        
        _1287_x002D_2(2,"1287-2"),
        
        _1288_x002D_0(3,"1288-0"),
        
        _1289_x002D_8(4,"1289-8"),
        
        _1290_x002D_6(5,"1290-6"),
        
        _1291_x002D_4(6,"1291-4"),
        
        _1292_x002D_2(7,"1292-2"),
        
        _1293_x002D_0(8,"1293-0"),
        
        _1294_x002D_8(9,"1294-8"),
        
        _1295_x002D_5(10,"1295-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianIroquois(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianIroquois fromString(String str)
        {
            if (str.equals("1285-6"))
                return _1285_x002D_6;
            if (str.equals("1286-4"))
                return _1286_x002D_4;
            if (str.equals("1287-2"))
                return _1287_x002D_2;
            if (str.equals("1288-0"))
                return _1288_x002D_0;
            if (str.equals("1289-8"))
                return _1289_x002D_8;
            if (str.equals("1290-6"))
                return _1290_x002D_6;
            if (str.equals("1291-4"))
                return _1291_x002D_4;
            if (str.equals("1292-2"))
                return _1292_x002D_2;
            if (str.equals("1293-0"))
                return _1293_x002D_0;
            if (str.equals("1294-8"))
                return _1294_x002D_8;
            if (str.equals("1295-5"))
                return _1295_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15144 (C-0-T14914-S14915-S14916-S15144-cpt)
	*/
    public enum RaceAmericanIndianKickapoo
    {
        
        _1305_x002D_2(0,"1305-2"),
        
        _1306_x002D_0(1,"1306-0"),
        
        _1307_x002D_8(2,"1307-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianKickapoo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianKickapoo fromString(String str)
        {
            if (str.equals("1305-2"))
                return _1305_x002D_2;
            if (str.equals("1306-0"))
                return _1306_x002D_0;
            if (str.equals("1307-8"))
                return _1307_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15147 (C-0-T14914-S14915-S14916-S15147-cpt)
	*/
    public enum RaceAmericanIndianKiowa
    {
        
        _1309_x002D_4(0,"1309-4"),
        
        _1310_x002D_2(1,"1310-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianKiowa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianKiowa fromString(String str)
        {
            if (str.equals("1309-4"))
                return _1309_x002D_4;
            if (str.equals("1310-2"))
                return _1310_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15149 (C-0-T14914-S14915-S14916-S15149-cpt)
	*/
    public enum RaceAmericanIndianKlallam
    {
        
        _1312_x002D_8(0,"1312-8"),
        
        _1313_x002D_6(1,"1313-6"),
        
        _1314_x002D_4(2,"1314-4"),
        
        _1315_x002D_1(3,"1315-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianKlallam(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianKlallam fromString(String str)
        {
            if (str.equals("1312-8"))
                return _1312_x002D_8;
            if (str.equals("1313-6"))
                return _1313_x002D_6;
            if (str.equals("1314-4"))
                return _1314_x002D_4;
            if (str.equals("1315-1"))
                return _1315_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15157 (C-0-T14914-S14915-S14916-S15157-cpt)
	*/
    public enum RaceAmericanIndianLongIsland
    {
        
        _1325_x002D_0(0,"1325-0"),
        
        _1326_x002D_8(1,"1326-8"),
        
        _1327_x002D_6(2,"1327-6"),
        
        _1328_x002D_4(3,"1328-4"),
        
        _1329_x002D_2(4,"1329-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianLongIsland(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianLongIsland fromString(String str)
        {
            if (str.equals("1325-0"))
                return _1325_x002D_0;
            if (str.equals("1326-8"))
                return _1326_x002D_8;
            if (str.equals("1327-6"))
                return _1327_x002D_6;
            if (str.equals("1328-4"))
                return _1328_x002D_4;
            if (str.equals("1329-2"))
                return _1329_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15162 (C-0-T14914-S14915-S14916-S15162-cpt)
	*/
    public enum RaceAmericanIndianLuiseno
    {
        
        _1331_x002D_8(0,"1331-8"),
        
        _1332_x002D_6(1,"1332-6"),
        
        _1333_x002D_4(2,"1333-4"),
        
        _1334_x002D_2(3,"1334-2"),
        
        _1335_x002D_9(4,"1335-9"),
        
        _1336_x002D_7(5,"1336-7"),
        
        _1338_x002D_3(6,"1338-3"),
        
        _1337_x002D_5(7,"1337-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianLuiseno(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianLuiseno fromString(String str)
        {
            if (str.equals("1331-8"))
                return _1331_x002D_8;
            if (str.equals("1332-6"))
                return _1332_x002D_6;
            if (str.equals("1333-4"))
                return _1333_x002D_4;
            if (str.equals("1334-2"))
                return _1334_x002D_2;
            if (str.equals("1335-9"))
                return _1335_x002D_9;
            if (str.equals("1336-7"))
                return _1336_x002D_7;
            if (str.equals("1338-3"))
                return _1338_x002D_3;
            if (str.equals("1337-5"))
                return _1337_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15172 (C-0-T14914-S14915-S14916-S15172-cpt)
	*/
    public enum RaceAmericanIndianMaidu
    {
        
        _1344_x002D_1(0,"1344-1"),
        
        _1345_x002D_8(1,"1345-8"),
        
        _1346_x002D_6(2,"1346-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianMaidu(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianMaidu fromString(String str)
        {
            if (str.equals("1344-1"))
                return _1344_x002D_1;
            if (str.equals("1345-8"))
                return _1345_x002D_8;
            if (str.equals("1346-6"))
                return _1346_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15180 (C-0-T14914-S14915-S14916-S15180-cpt)
	*/
    public enum RaceAmericanIndianMiami
    {
        
        _1358_x002D_1(0,"1358-1"),
        
        _1359_x002D_9(1,"1359-9"),
        
        _1360_x002D_7(2,"1360-7"),
        
        _1361_x002D_5(3,"1361-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianMiami(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianMiami fromString(String str)
        {
            if (str.equals("1358-1"))
                return _1358_x002D_1;
            if (str.equals("1359-9"))
                return _1359_x002D_9;
            if (str.equals("1360-7"))
                return _1360_x002D_7;
            if (str.equals("1361-5"))
                return _1361_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15185 (C-0-T14914-S14915-S14916-S15185-cpt)
	*/
    public enum RaceAmericanIndianMicmac
    {
        
        _1365_x002D_6(0,"1365-6"),
        
        _1366_x002D_4(1,"1366-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianMicmac(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianMicmac fromString(String str)
        {
            if (str.equals("1365-6"))
                return _1365_x002D_6;
            if (str.equals("1366-4"))
                return _1366_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15194 (C-0-T14914-S14915-S14916-S15194-cpt)
	*/
    public enum RaceAmericanIndianNavajo
    {
        
        _1382_x002D_1(0,"1382-1"),
        
        _1383_x002D_9(1,"1383-9"),
        
        _1384_x002D_7(2,"1384-7"),
        
        _1385_x002D_4(3,"1385-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianNavajo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianNavajo fromString(String str)
        {
            if (str.equals("1382-1"))
                return _1382_x002D_1;
            if (str.equals("1383-9"))
                return _1383_x002D_9;
            if (str.equals("1384-7"))
                return _1384_x002D_7;
            if (str.equals("1385-4"))
                return _1385_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15200 (C-0-T14914-S14915-S14916-S15200-cpt)
	*/
    public enum RaceAmericanIndianNorthwestTribes
    {
        
        _1391_x002D_2(0,"1391-2"),
        
        _1392_x002D_0(1,"1392-0"),
        
        _1393_x002D_8(2,"1393-8"),
        
        _1394_x002D_6(3,"1394-6"),
        
        _1395_x002D_3(4,"1395-3"),
        
        _1396_x002D_1(5,"1396-1"),
        
        _1397_x002D_9(6,"1397-9"),
        
        _1398_x002D_7(7,"1398-7"),
        
        _1399_x002D_5(8,"1399-5"),
        
        _1400_x002D_1(9,"1400-1"),
        
        _1401_x002D_9(10,"1401-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianNorthwestTribes(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianNorthwestTribes fromString(String str)
        {
            if (str.equals("1391-2"))
                return _1391_x002D_2;
            if (str.equals("1392-0"))
                return _1392_x002D_0;
            if (str.equals("1393-8"))
                return _1393_x002D_8;
            if (str.equals("1394-6"))
                return _1394_x002D_6;
            if (str.equals("1395-3"))
                return _1395_x002D_3;
            if (str.equals("1396-1"))
                return _1396_x002D_1;
            if (str.equals("1397-9"))
                return _1397_x002D_9;
            if (str.equals("1398-7"))
                return _1398_x002D_7;
            if (str.equals("1399-5"))
                return _1399_x002D_5;
            if (str.equals("1400-1"))
                return _1400_x002D_1;
            if (str.equals("1401-9"))
                return _1401_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15215 (C-0-T14914-S14915-S14916-S15215-cpt)
	*/
    public enum RaceAmericanIndianOttawa
    {
        
        _1411_x002D_8(0,"1411-8"),
        
        _1412_x002D_6(1,"1412-6"),
        
        _1413_x002D_4(2,"1413-4"),
        
        _1414_x002D_2(3,"1414-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianOttawa(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianOttawa fromString(String str)
        {
            if (str.equals("1411-8"))
                return _1411_x002D_8;
            if (str.equals("1412-6"))
                return _1412_x002D_6;
            if (str.equals("1413-4"))
                return _1413_x002D_4;
            if (str.equals("1414-2"))
                return _1414_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15219 (C-0-T14914-S14915-S14916-S15219-cpt)
	*/
    public enum RaceAmericanIndianPaiute
    {
        
        _1416_x002D_7(0,"1416-7"),
        
        _1417_x002D_5(1,"1417-5"),
        
        _1418_x002D_3(2,"1418-3"),
        
        _1419_x002D_1(3,"1419-1"),
        
        _1420_x002D_9(4,"1420-9"),
        
        _1421_x002D_7(5,"1421-7"),
        
        _1422_x002D_5(6,"1422-5"),
        
        _1423_x002D_3(7,"1423-3"),
        
        _1424_x002D_1(8,"1424-1"),
        
        _1425_x002D_8(9,"1425-8"),
        
        _1426_x002D_6(10,"1426-6"),
        
        _1427_x002D_4(11,"1427-4"),
        
        _1428_x002D_2(12,"1428-2"),
        
        _1429_x002D_0(13,"1429-0"),
        
        _1430_x002D_8(14,"1430-8"),
        
        _1431_x002D_6(15,"1431-6"),
        
        _1432_x002D_4(16,"1432-4"),
        
        _1433_x002D_2(17,"1433-2"),
        
        _1434_x002D_0(18,"1434-0"),
        
        _1435_x002D_7(19,"1435-7"),
        
        _1436_x002D_5(20,"1436-5"),
        
        _1437_x002D_3(21,"1437-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPaiute(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPaiute fromString(String str)
        {
            if (str.equals("1416-7"))
                return _1416_x002D_7;
            if (str.equals("1417-5"))
                return _1417_x002D_5;
            if (str.equals("1418-3"))
                return _1418_x002D_3;
            if (str.equals("1419-1"))
                return _1419_x002D_1;
            if (str.equals("1420-9"))
                return _1420_x002D_9;
            if (str.equals("1421-7"))
                return _1421_x002D_7;
            if (str.equals("1422-5"))
                return _1422_x002D_5;
            if (str.equals("1423-3"))
                return _1423_x002D_3;
            if (str.equals("1424-1"))
                return _1424_x002D_1;
            if (str.equals("1425-8"))
                return _1425_x002D_8;
            if (str.equals("1426-6"))
                return _1426_x002D_6;
            if (str.equals("1427-4"))
                return _1427_x002D_4;
            if (str.equals("1428-2"))
                return _1428_x002D_2;
            if (str.equals("1429-0"))
                return _1429_x002D_0;
            if (str.equals("1430-8"))
                return _1430_x002D_8;
            if (str.equals("1431-6"))
                return _1431_x002D_6;
            if (str.equals("1432-4"))
                return _1432_x002D_4;
            if (str.equals("1433-2"))
                return _1433_x002D_2;
            if (str.equals("1434-0"))
                return _1434_x002D_0;
            if (str.equals("1435-7"))
                return _1435_x002D_7;
            if (str.equals("1436-5"))
                return _1436_x002D_5;
            if (str.equals("1437-3"))
                return _1437_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15242 (C-0-T14914-S14915-S14916-S15242-cpt)
	*/
    public enum RaceAmericanIndianPassamaquoddy
    {
        
        _1441_x002D_5(0,"1441-5"),
        
        _1442_x002D_3(1,"1442-3"),
        
        _1443_x002D_1(2,"1443-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPassamaquoddy(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPassamaquoddy fromString(String str)
        {
            if (str.equals("1441-5"))
                return _1441_x002D_5;
            if (str.equals("1442-3"))
                return _1442_x002D_3;
            if (str.equals("1443-1"))
                return _1443_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15245 (C-0-T14914-S14915-S14916-S15245-cpt)
	*/
    public enum RaceAmericanIndianPawnee
    {
        
        _1445_x002D_6(0,"1445-6"),
        
        _1446_x002D_4(1,"1446-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPawnee(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPawnee fromString(String str)
        {
            if (str.equals("1445-6"))
                return _1445_x002D_6;
            if (str.equals("1446-4"))
                return _1446_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15248 (C-0-T14914-S14915-S14916-S15248-cpt)
	*/
    public enum RaceAmericanIndianPeoria
    {
        
        _1450_x002D_6(0,"1450-6"),
        
        _1451_x002D_4(1,"1451-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPeoria(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPeoria fromString(String str)
        {
            if (str.equals("1450-6"))
                return _1450_x002D_6;
            if (str.equals("1451-4"))
                return _1451_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15250 (C-0-T14914-S14915-S14916-S15250-cpt)
	*/
    public enum RaceAmericanIndianPequot
    {
        
        _1453_x002D_0(0,"1453-0"),
        
        _1454_x002D_8(1,"1454-8");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPequot(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPequot fromString(String str)
        {
            if (str.equals("1453-0"))
                return _1453_x002D_0;
            if (str.equals("1454-8"))
                return _1454_x002D_8;
		    return null;
        }
    }

	/**
	* specDomain: S15252 (C-0-T14914-S14915-S14916-S15252-cpt)
	*/
    public enum RaceAmericanIndianPima
    {
        
        _1456_x002D_3(0,"1456-3"),
        
        _1457_x002D_1(1,"1457-1"),
        
        _1458_x002D_9(2,"1458-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPima(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPima fromString(String str)
        {
            if (str.equals("1456-3"))
                return _1456_x002D_3;
            if (str.equals("1457-1"))
                return _1457_x002D_1;
            if (str.equals("1458-9"))
                return _1458_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15257 (C-0-T14914-S14915-S14916-S15257-cpt)
	*/
    public enum RaceAmericanIndianPomo
    {
        
        _1464_x002D_7(0,"1464-7"),
        
        _1465_x002D_4(1,"1465-4"),
        
        _1466_x002D_2(2,"1466-2"),
        
        _1467_x002D_0(3,"1467-0"),
        
        _1468_x002D_8(4,"1468-8"),
        
        _1469_x002D_6(5,"1469-6"),
        
        _1470_x002D_4(6,"1470-4"),
        
        _1471_x002D_2(7,"1471-2"),
        
        _1472_x002D_0(8,"1472-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPomo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPomo fromString(String str)
        {
            if (str.equals("1464-7"))
                return _1464_x002D_7;
            if (str.equals("1465-4"))
                return _1465_x002D_4;
            if (str.equals("1466-2"))
                return _1466_x002D_2;
            if (str.equals("1467-0"))
                return _1467_x002D_0;
            if (str.equals("1468-8"))
                return _1468_x002D_8;
            if (str.equals("1469-6"))
                return _1469_x002D_6;
            if (str.equals("1470-4"))
                return _1470_x002D_4;
            if (str.equals("1471-2"))
                return _1471_x002D_2;
            if (str.equals("1472-0"))
                return _1472_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15266 (C-0-T14914-S14915-S14916-S15266-cpt)
	*/
    public enum RaceAmericanIndianPonca
    {
        
        _1474_x002D_6(0,"1474-6"),
        
        _1475_x002D_3(1,"1475-3"),
        
        _1476_x002D_1(2,"1476-1");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPonca(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPonca fromString(String str)
        {
            if (str.equals("1474-6"))
                return _1474_x002D_6;
            if (str.equals("1475-3"))
                return _1475_x002D_3;
            if (str.equals("1476-1"))
                return _1476_x002D_1;
		    return null;
        }
    }

	/**
	* specDomain: S15269 (C-0-T14914-S14915-S14916-S15269-cpt)
	*/
    public enum RaceAmericanIndianPotawatomi
    {
        
        _1478_x002D_7(0,"1478-7"),
        
        _1479_x002D_5(1,"1479-5"),
        
        _1480_x002D_3(2,"1480-3"),
        
        _1481_x002D_1(3,"1481-1"),
        
        _1482_x002D_9(4,"1482-9"),
        
        _1483_x002D_7(5,"1483-7"),
        
        _1484_x002D_5(6,"1484-5"),
        
        _1485_x002D_2(7,"1485-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPotawatomi(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPotawatomi fromString(String str)
        {
            if (str.equals("1478-7"))
                return _1478_x002D_7;
            if (str.equals("1479-5"))
                return _1479_x002D_5;
            if (str.equals("1480-3"))
                return _1480_x002D_3;
            if (str.equals("1481-1"))
                return _1481_x002D_1;
            if (str.equals("1482-9"))
                return _1482_x002D_9;
            if (str.equals("1483-7"))
                return _1483_x002D_7;
            if (str.equals("1484-5"))
                return _1484_x002D_5;
            if (str.equals("1485-2"))
                return _1485_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15278 (C-0-T14914-S14915-S14916-S15278-cpt)
	*/
    public enum RaceAmericanIndianPueblo
    {
        
        _1489_x002D_4(0,"1489-4"),
        
        _1490_x002D_2(1,"1490-2"),
        
        _1491_x002D_0(2,"1491-0"),
        
        _1492_x002D_8(3,"1492-8"),
        
        _1493_x002D_6(4,"1493-6"),
        
        _1494_x002D_4(5,"1494-4"),
        
        _1495_x002D_1(6,"1495-1"),
        
        _1496_x002D_9(7,"1496-9"),
        
        _1497_x002D_7(8,"1497-7"),
        
        _1498_x002D_5(9,"1498-5"),
        
        _1499_x002D_3(10,"1499-3"),
        
        _1500_x002D_8(11,"1500-8"),
        
        _1501_x002D_6(12,"1501-6"),
        
        _1502_x002D_4(13,"1502-4"),
        
        _1503_x002D_2(14,"1503-2"),
        
        _1506_x002D_5(15,"1506-5"),
        
        _1505_x002D_7(16,"1505-7"),
        
        _1504_x002D_0(17,"1504-0"),
        
        _1507_x002D_3(18,"1507-3"),
        
        _1508_x002D_1(19,"1508-1"),
        
        _1509_x002D_9(20,"1509-9"),
        
        _1510_x002D_7(21,"1510-7"),
        
        _1511_x002D_5(22,"1511-5"),
        
        _1512_x002D_3(23,"1512-3"),
        
        _1513_x002D_1(24,"1513-1"),
        
        _1514_x002D_9(25,"1514-9"),
        
        _1515_x002D_6(26,"1515-6"),
        
        _1516_x002D_4(27,"1516-4");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPueblo(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPueblo fromString(String str)
        {
            if (str.equals("1489-4"))
                return _1489_x002D_4;
            if (str.equals("1490-2"))
                return _1490_x002D_2;
            if (str.equals("1491-0"))
                return _1491_x002D_0;
            if (str.equals("1492-8"))
                return _1492_x002D_8;
            if (str.equals("1493-6"))
                return _1493_x002D_6;
            if (str.equals("1494-4"))
                return _1494_x002D_4;
            if (str.equals("1495-1"))
                return _1495_x002D_1;
            if (str.equals("1496-9"))
                return _1496_x002D_9;
            if (str.equals("1497-7"))
                return _1497_x002D_7;
            if (str.equals("1498-5"))
                return _1498_x002D_5;
            if (str.equals("1499-3"))
                return _1499_x002D_3;
            if (str.equals("1500-8"))
                return _1500_x002D_8;
            if (str.equals("1501-6"))
                return _1501_x002D_6;
            if (str.equals("1502-4"))
                return _1502_x002D_4;
            if (str.equals("1503-2"))
                return _1503_x002D_2;
            if (str.equals("1506-5"))
                return _1506_x002D_5;
            if (str.equals("1505-7"))
                return _1505_x002D_7;
            if (str.equals("1504-0"))
                return _1504_x002D_0;
            if (str.equals("1507-3"))
                return _1507_x002D_3;
            if (str.equals("1508-1"))
                return _1508_x002D_1;
            if (str.equals("1509-9"))
                return _1509_x002D_9;
            if (str.equals("1510-7"))
                return _1510_x002D_7;
            if (str.equals("1511-5"))
                return _1511_x002D_5;
            if (str.equals("1512-3"))
                return _1512_x002D_3;
            if (str.equals("1513-1"))
                return _1513_x002D_1;
            if (str.equals("1514-9"))
                return _1514_x002D_9;
            if (str.equals("1515-6"))
                return _1515_x002D_6;
            if (str.equals("1516-4"))
                return _1516_x002D_4;
		    return null;
        }
    }

	/**
	* specDomain: S15306 (C-0-T14914-S14915-S14916-S15306-cpt)
	*/
    public enum RaceAmericanIndianPugetSoundSalish
    {
        
        _1518_x002D_0(0,"1518-0"),
        
        _1519_x002D_8(1,"1519-8"),
        
        _1520_x002D_6(2,"1520-6"),
        
        _1521_x002D_4(3,"1521-4"),
        
        _1522_x002D_2(4,"1522-2"),
        
        _1523_x002D_0(5,"1523-0"),
        
        _1524_x002D_8(6,"1524-8"),
        
        _1525_x002D_5(7,"1525-5"),
        
        _1526_x002D_3(8,"1526-3"),
        
        _1527_x002D_1(9,"1527-1"),
        
        _1528_x002D_9(10,"1528-9"),
        
        _1529_x002D_7(11,"1529-7"),
        
        _1530_x002D_5(12,"1530-5"),
        
        _1531_x002D_3(13,"1531-3"),
        
        _1532_x002D_1(14,"1532-1"),
        
        _1533_x002D_9(15,"1533-9"),
        
        _1534_x002D_7(16,"1534-7"),
        
        _1535_x002D_4(17,"1535-4"),
        
        _1536_x002D_2(18,"1536-2"),
        
        _1537_x002D_0(19,"1537-0"),
        
        _1538_x002D_8(20,"1538-8"),
        
        _1539_x002D_6(21,"1539-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianPugetSoundSalish(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianPugetSoundSalish fromString(String str)
        {
            if (str.equals("1518-0"))
                return _1518_x002D_0;
            if (str.equals("1519-8"))
                return _1519_x002D_8;
            if (str.equals("1520-6"))
                return _1520_x002D_6;
            if (str.equals("1521-4"))
                return _1521_x002D_4;
            if (str.equals("1522-2"))
                return _1522_x002D_2;
            if (str.equals("1523-0"))
                return _1523_x002D_0;
            if (str.equals("1524-8"))
                return _1524_x002D_8;
            if (str.equals("1525-5"))
                return _1525_x002D_5;
            if (str.equals("1526-3"))
                return _1526_x002D_3;
            if (str.equals("1527-1"))
                return _1527_x002D_1;
            if (str.equals("1528-9"))
                return _1528_x002D_9;
            if (str.equals("1529-7"))
                return _1529_x002D_7;
            if (str.equals("1530-5"))
                return _1530_x002D_5;
            if (str.equals("1531-3"))
                return _1531_x002D_3;
            if (str.equals("1532-1"))
                return _1532_x002D_1;
            if (str.equals("1533-9"))
                return _1533_x002D_9;
            if (str.equals("1534-7"))
                return _1534_x002D_7;
            if (str.equals("1535-4"))
                return _1535_x002D_4;
            if (str.equals("1536-2"))
                return _1536_x002D_2;
            if (str.equals("1537-0"))
                return _1537_x002D_0;
            if (str.equals("1538-8"))
                return _1538_x002D_8;
            if (str.equals("1539-6"))
                return _1539_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15333 (C-0-T14914-S14915-S14916-S15333-cpt)
	*/
    public enum RaceAmericanIndianSacFox
    {
        
        _1551_x002D_1(0,"1551-1"),
        
        _1552_x002D_9(1,"1552-9"),
        
        _1553_x002D_7(2,"1553-7"),
        
        _1554_x002D_5(3,"1554-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianSacFox(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianSacFox fromString(String str)
        {
            if (str.equals("1551-1"))
                return _1551_x002D_1;
            if (str.equals("1552-9"))
                return _1552_x002D_9;
            if (str.equals("1553-7"))
                return _1553_x002D_7;
            if (str.equals("1554-5"))
                return _1554_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15342 (C-0-T14914-S14915-S14916-S15342-cpt)
	*/
    public enum RaceAmericanIndianSeminole
    {
        
        _1566_x002D_9(0,"1566-9"),
        
        _1567_x002D_7(1,"1567-7"),
        
        _1568_x002D_5(2,"1568-5"),
        
        _1569_x002D_3(3,"1569-3"),
        
        _1570_x002D_1(4,"1570-1"),
        
        _1571_x002D_9(5,"1571-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianSeminole(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianSeminole fromString(String str)
        {
            if (str.equals("1566-9"))
                return _1566_x002D_9;
            if (str.equals("1567-7"))
                return _1567_x002D_7;
            if (str.equals("1568-5"))
                return _1568_x002D_5;
            if (str.equals("1569-3"))
                return _1569_x002D_3;
            if (str.equals("1570-1"))
                return _1570_x002D_1;
            if (str.equals("1571-9"))
                return _1571_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15348 (C-0-T14914-S14915-S14916-S15348-cpt)
	*/
    public enum RaceAmericanIndianSerrano
    {
        
        _1573_x002D_5(0,"1573-5"),
        
        _1574_x002D_3(1,"1574-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianSerrano(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianSerrano fromString(String str)
        {
            if (str.equals("1573-5"))
                return _1573_x002D_5;
            if (str.equals("1574-3"))
                return _1574_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15351 (C-0-T14914-S14915-S14916-S15351-cpt)
	*/
    public enum RaceAmericanIndianShawnee
    {
        
        _1578_x002D_4(0,"1578-4"),
        
        _1579_x002D_2(1,"1579-2"),
        
        _1580_x002D_0(2,"1580-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianShawnee(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianShawnee fromString(String str)
        {
            if (str.equals("1578-4"))
                return _1578_x002D_4;
            if (str.equals("1579-2"))
                return _1579_x002D_2;
            if (str.equals("1580-0"))
                return _1580_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15356 (C-0-T14914-S14915-S14916-S15356-cpt)
	*/
    public enum RaceAmericanIndianShoshone
    {
        
        _1586_x002D_7(0,"1586-7"),
        
        _1587_x002D_5(1,"1587-5"),
        
        _1588_x002D_3(2,"1588-3"),
        
        _1589_x002D_1(3,"1589-1"),
        
        _1590_x002D_9(4,"1590-9"),
        
        _1591_x002D_7(5,"1591-7"),
        
        _1592_x002D_5(6,"1592-5"),
        
        _1593_x002D_3(7,"1593-3"),
        
        _1594_x002D_1(8,"1594-1"),
        
        _1595_x002D_8(9,"1595-8"),
        
        _1596_x002D_6(10,"1596-6"),
        
        _1597_x002D_4(11,"1597-4"),
        
        _1598_x002D_2(12,"1598-2"),
        
        _1599_x002D_0(13,"1599-0"),
        
        _1600_x002D_6(14,"1600-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianShoshone(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianShoshone fromString(String str)
        {
            if (str.equals("1586-7"))
                return _1586_x002D_7;
            if (str.equals("1587-5"))
                return _1587_x002D_5;
            if (str.equals("1588-3"))
                return _1588_x002D_3;
            if (str.equals("1589-1"))
                return _1589_x002D_1;
            if (str.equals("1590-9"))
                return _1590_x002D_9;
            if (str.equals("1591-7"))
                return _1591_x002D_7;
            if (str.equals("1592-5"))
                return _1592_x002D_5;
            if (str.equals("1593-3"))
                return _1593_x002D_3;
            if (str.equals("1594-1"))
                return _1594_x002D_1;
            if (str.equals("1595-8"))
                return _1595_x002D_8;
            if (str.equals("1596-6"))
                return _1596_x002D_6;
            if (str.equals("1597-4"))
                return _1597_x002D_4;
            if (str.equals("1598-2"))
                return _1598_x002D_2;
            if (str.equals("1599-0"))
                return _1599_x002D_0;
            if (str.equals("1600-6"))
                return _1600_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15371 (C-0-T14914-S14915-S14916-S15371-cpt)
	*/
    public enum RaceAmericanIndianShoshonePaiute
    {
        
        _1602_x002D_2(0,"1602-2"),
        
        _1603_x002D_0(1,"1603-0"),
        
        _1604_x002D_8(2,"1604-8"),
        
        _1605_x002D_5(3,"1605-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianShoshonePaiute(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianShoshonePaiute fromString(String str)
        {
            if (str.equals("1602-2"))
                return _1602_x002D_2;
            if (str.equals("1603-0"))
                return _1603_x002D_0;
            if (str.equals("1604-8"))
                return _1604_x002D_8;
            if (str.equals("1605-5"))
                return _1605_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15376 (C-0-T14914-S14915-S14916-S15376-cpt)
	*/
    public enum RaceAmericanIndianSioux
    {
        
        _1609_x002D_7(0,"1609-7"),
        
        _1610_x002D_5(1,"1610-5"),
        
        _1611_x002D_3(2,"1611-3"),
        
        _1612_x002D_1(3,"1612-1"),
        
        _1613_x002D_9(4,"1613-9"),
        
        _1614_x002D_7(5,"1614-7"),
        
        _1615_x002D_4(6,"1615-4"),
        
        _1616_x002D_2(7,"1616-2"),
        
        _1617_x002D_0(8,"1617-0"),
        
        _1618_x002D_8(9,"1618-8"),
        
        _1619_x002D_6(10,"1619-6"),
        
        _1620_x002D_4(11,"1620-4"),
        
        _1621_x002D_2(12,"1621-2"),
        
        _1622_x002D_0(13,"1622-0"),
        
        _1623_x002D_8(14,"1623-8"),
        
        _1624_x002D_6(15,"1624-6"),
        
        _1625_x002D_3(16,"1625-3"),
        
        _1626_x002D_1(17,"1626-1"),
        
        _1627_x002D_9(18,"1627-9"),
        
        _1628_x002D_7(19,"1628-7"),
        
        _1629_x002D_5(20,"1629-5"),
        
        _1631_x002D_1(21,"1631-1"),
        
        _1630_x002D_3(22,"1630-3"),
        
        _1632_x002D_9(23,"1632-9"),
        
        _1633_x002D_7(24,"1633-7"),
        
        _1634_x002D_5(25,"1634-5"),
        
        _1635_x002D_2(26,"1635-2"),
        
        _1636_x002D_0(27,"1636-0"),
        
        _1637_x002D_8(28,"1637-8"),
        
        _1638_x002D_6(29,"1638-6"),
        
        _1639_x002D_4(30,"1639-4"),
        
        _1640_x002D_2(31,"1640-2"),
        
        _1641_x002D_0(32,"1641-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianSioux(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianSioux fromString(String str)
        {
            if (str.equals("1609-7"))
                return _1609_x002D_7;
            if (str.equals("1610-5"))
                return _1610_x002D_5;
            if (str.equals("1611-3"))
                return _1611_x002D_3;
            if (str.equals("1612-1"))
                return _1612_x002D_1;
            if (str.equals("1613-9"))
                return _1613_x002D_9;
            if (str.equals("1614-7"))
                return _1614_x002D_7;
            if (str.equals("1615-4"))
                return _1615_x002D_4;
            if (str.equals("1616-2"))
                return _1616_x002D_2;
            if (str.equals("1617-0"))
                return _1617_x002D_0;
            if (str.equals("1618-8"))
                return _1618_x002D_8;
            if (str.equals("1619-6"))
                return _1619_x002D_6;
            if (str.equals("1620-4"))
                return _1620_x002D_4;
            if (str.equals("1621-2"))
                return _1621_x002D_2;
            if (str.equals("1622-0"))
                return _1622_x002D_0;
            if (str.equals("1623-8"))
                return _1623_x002D_8;
            if (str.equals("1624-6"))
                return _1624_x002D_6;
            if (str.equals("1625-3"))
                return _1625_x002D_3;
            if (str.equals("1626-1"))
                return _1626_x002D_1;
            if (str.equals("1627-9"))
                return _1627_x002D_9;
            if (str.equals("1628-7"))
                return _1628_x002D_7;
            if (str.equals("1629-5"))
                return _1629_x002D_5;
            if (str.equals("1631-1"))
                return _1631_x002D_1;
            if (str.equals("1630-3"))
                return _1630_x002D_3;
            if (str.equals("1632-9"))
                return _1632_x002D_9;
            if (str.equals("1633-7"))
                return _1633_x002D_7;
            if (str.equals("1634-5"))
                return _1634_x002D_5;
            if (str.equals("1635-2"))
                return _1635_x002D_2;
            if (str.equals("1636-0"))
                return _1636_x002D_0;
            if (str.equals("1637-8"))
                return _1637_x002D_8;
            if (str.equals("1638-6"))
                return _1638_x002D_6;
            if (str.equals("1639-4"))
                return _1639_x002D_4;
            if (str.equals("1640-2"))
                return _1640_x002D_2;
            if (str.equals("1641-0"))
                return _1641_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15414 (C-0-T14914-S14915-S14916-S15414-cpt)
	*/
    public enum RaceAmericanIndianTohonoOOdham
    {
        
        _1653_x002D_5(0,"1653-5"),
        
        _1654_x002D_3(1,"1654-3"),
        
        _1655_x002D_0(2,"1655-0"),
        
        _1656_x002D_8(3,"1656-8"),
        
        _1657_x002D_6(4,"1657-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianTohonoOOdham(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianTohonoOOdham fromString(String str)
        {
            if (str.equals("1653-5"))
                return _1653_x002D_5;
            if (str.equals("1654-3"))
                return _1654_x002D_3;
            if (str.equals("1655-0"))
                return _1655_x002D_0;
            if (str.equals("1656-8"))
                return _1656_x002D_8;
            if (str.equals("1657-6"))
                return _1657_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15423 (C-0-T14914-S14915-S14916-S15423-cpt)
	*/
    public enum RaceAmericanIndianUmpqua
    {
        
        _1667_x002D_5(0,"1667-5"),
        
        _1668_x002D_3(1,"1668-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianUmpqua(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianUmpqua fromString(String str)
        {
            if (str.equals("1667-5"))
                return _1667_x002D_5;
            if (str.equals("1668-3"))
                return _1668_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15425 (C-0-T14914-S14915-S14916-S15425-cpt)
	*/
    public enum RaceAmericanIndianUte
    {
        
        _1670_x002D_9(0,"1670-9"),
        
        _1671_x002D_7(1,"1671-7"),
        
        _1672_x002D_5(2,"1672-5"),
        
        _1673_x002D_3(3,"1673-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianUte(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianUte fromString(String str)
        {
            if (str.equals("1670-9"))
                return _1670_x002D_9;
            if (str.equals("1671-7"))
                return _1671_x002D_7;
            if (str.equals("1672-5"))
                return _1672_x002D_5;
            if (str.equals("1673-3"))
                return _1673_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15431 (C-0-T14914-S14915-S14916-S15431-cpt)
	*/
    public enum RaceAmericanIndianWampanoag
    {
        
        _1679_x002D_0(0,"1679-0"),
        
        _1680_x002D_8(1,"1680-8"),
        
        _1681_x002D_6(2,"1681-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianWampanoag(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianWampanoag fromString(String str)
        {
            if (str.equals("1679-0"))
                return _1679_x002D_0;
            if (str.equals("1680-8"))
                return _1680_x002D_8;
            if (str.equals("1681-6"))
                return _1681_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15436 (C-0-T14914-S14915-S14916-S15436-cpt)
	*/
    public enum RaceAmericanIndianWashoe
    {
        
        _1687_x002D_3(0,"1687-3"),
        
        _1688_x002D_1(1,"1688-1"),
        
        _1689_x002D_9(2,"1689-9"),
        
        _1690_x002D_7(3,"1690-7");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianWashoe(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianWashoe fromString(String str)
        {
            if (str.equals("1687-3"))
                return _1687_x002D_3;
            if (str.equals("1688-1"))
                return _1688_x002D_1;
            if (str.equals("1689-9"))
                return _1689_x002D_9;
            if (str.equals("1690-7"))
                return _1690_x002D_7;
		    return null;
        }
    }

	/**
	* specDomain: S15442 (C-0-T14914-S14915-S14916-S15442-cpt)
	*/
    public enum RaceAmericanIndianWinnebago
    {
        
        _1696_x002D_4(0,"1696-4"),
        
        _1697_x002D_2(1,"1697-2"),
        
        _1698_x002D_0(2,"1698-0");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianWinnebago(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianWinnebago fromString(String str)
        {
            if (str.equals("1696-4"))
                return _1696_x002D_4;
            if (str.equals("1697-2"))
                return _1697_x002D_2;
            if (str.equals("1698-0"))
                return _1698_x002D_0;
		    return null;
        }
    }

	/**
	* specDomain: S15460 (C-0-T14914-S14915-S14916-S15460-cpt)
	*/
    public enum RaceAmericanIndianYuman
    {
        
        _1724_x002D_4(0,"1724-4"),
        
        _1725_x002D_1(1,"1725-1"),
        
        _1726_x002D_9(2,"1726-9"),
        
        _1727_x002D_7(3,"1727-7"),
        
        _1728_x002D_5(4,"1728-5"),
        
        _1729_x002D_3(5,"1729-3"),
        
        _1730_x002D_1(6,"1730-1"),
        
        _1731_x002D_9(7,"1731-9");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianYuman(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianYuman fromString(String str)
        {
            if (str.equals("1724-4"))
                return _1724_x002D_4;
            if (str.equals("1725-1"))
                return _1725_x002D_1;
            if (str.equals("1726-9"))
                return _1726_x002D_9;
            if (str.equals("1727-7"))
                return _1727_x002D_7;
            if (str.equals("1728-5"))
                return _1728_x002D_5;
            if (str.equals("1729-3"))
                return _1729_x002D_3;
            if (str.equals("1730-1"))
                return _1730_x002D_1;
            if (str.equals("1731-9"))
                return _1731_x002D_9;
		    return null;
        }
    }

	/**
	* specDomain: S15468 (C-0-T14914-S14915-S14916-S15468-cpt)
	*/
    public enum RaceAmericanIndianYurok
    {
        
        _1732_x002D_7(0,"1732-7"),
        
        _1733_x002D_5(1,"1733-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceAmericanIndianYurok(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceAmericanIndianYurok fromString(String str)
        {
            if (str.equals("1732-7"))
                return _1732_x002D_7;
            if (str.equals("1733-5"))
                return _1733_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S14965 (C-0-T14914-S14915-S14916-S14965-cpt)
	*/
    public enum RaceCanadianLatinIndian
    {
        
        _1068_x002D_6(0,"1068-6"),
        
        _1069_x002D_4(1,"1069-4"),
        
        _1070_x002D_2(2,"1070-2"),
        
        _1071_x002D_0(3,"1071-0"),
        
        _1072_x002D_8(4,"1072-8"),
        
        _1073_x002D_6(5,"1073-6");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceCanadianLatinIndian(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceCanadianLatinIndian fromString(String str)
        {
            if (str.equals("1068-6"))
                return _1068_x002D_6;
            if (str.equals("1069-4"))
                return _1069_x002D_4;
            if (str.equals("1070-2"))
                return _1070_x002D_2;
            if (str.equals("1071-0"))
                return _1071_x002D_0;
            if (str.equals("1072-8"))
                return _1072_x002D_8;
            if (str.equals("1073-6"))
                return _1073_x002D_6;
		    return null;
        }
    }

	/**
	* specDomain: S15447 (C-0-T14914-S14915-S14916-S15447-cpt)
	*/
    public enum Wiyot
    {
        
        _1704_x002D_6(0,"1704-6"),
        
        _1705_x002D_3(1,"1705-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        Wiyot(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Wiyot fromString(String str)
        {
            if (str.equals("1704-6"))
                return _1704_x002D_6;
            if (str.equals("1705-3"))
                return _1705_x002D_3;
		    return null;
        }
    }

	/**
	* specDomain: S15451 (C-0-T14914-S14915-S14916-S15451-cpt)
	*/
    public enum Yaqui
    {
        
        _1711_x002D_1(0,"1711-1"),
        
        _1712_x002D_9(1,"1712-9"),
        
        _1713_x002D_7(2,"1713-7");
        
        private int code;
        private java.lang.String xmlValue;
        
        Yaqui(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Yaqui fromString(String str)
        {
            if (str.equals("1711-1"))
                return _1711_x002D_1;
            if (str.equals("1712-9"))
                return _1712_x002D_9;
            if (str.equals("1713-7"))
                return _1713_x002D_7;
		    return null;
        }
    }

	/**
	* specDomain: S15455 (C-0-T14914-S14915-S14916-S15455-cpt)
	*/
    public enum Yokuts
    {
        
        _1717_x002D_8(0,"1717-8"),
        
        _1718_x002D_6(1,"1718-6"),
        
        _1719_x002D_4(2,"1719-4"),
        
        _1720_x002D_2(3,"1720-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        Yokuts(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static Yokuts fromString(String str)
        {
            if (str.equals("1717-8"))
                return _1717_x002D_8;
            if (str.equals("1718-6"))
                return _1718_x002D_6;
            if (str.equals("1719-4"))
                return _1719_x002D_4;
            if (str.equals("1720-2"))
                return _1720_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15834 (C-0-T14914-S15814-S15834-cpt)
	*/
    public enum RaceWhiteArab
    {
        
        _2129_x002D_5(0,"2129-5");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceWhiteArab(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceWhiteArab fromString(String str)
        {
            if (str.equals("2129-5"))
                return _2129_x002D_5;
		    return null;
        }
    }

	/**
	* specDomain: S15815 (C-0-T14914-S15814-S15815-cpt)
	*/
    public enum RaceWhiteEuropean
    {
        
        _2108_x002D_9(0,"2108-9"),
        
        _2109_x002D_7(1,"2109-7"),
        
        _2110_x002D_5(2,"2110-5"),
        
        _2111_x002D_3(3,"2111-3"),
        
        _2112_x002D_1(4,"2112-1"),
        
        _2113_x002D_9(5,"2113-9"),
        
        _2114_x002D_7(6,"2114-7"),
        
        _2115_x002D_4(7,"2115-4"),
        
        _2116_x002D_2(8,"2116-2");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceWhiteEuropean(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceWhiteEuropean fromString(String str)
        {
            if (str.equals("2108-9"))
                return _2108_x002D_9;
            if (str.equals("2109-7"))
                return _2109_x002D_7;
            if (str.equals("2110-5"))
                return _2110_x002D_5;
            if (str.equals("2111-3"))
                return _2111_x002D_3;
            if (str.equals("2112-1"))
                return _2112_x002D_1;
            if (str.equals("2113-9"))
                return _2113_x002D_9;
            if (str.equals("2114-7"))
                return _2114_x002D_7;
            if (str.equals("2115-4"))
                return _2115_x002D_4;
            if (str.equals("2116-2"))
                return _2116_x002D_2;
		    return null;
        }
    }

	/**
	* specDomain: S15824 (C-0-T14914-S15814-S15824-cpt)
	*/
    public enum RaceWhiteMiddleEast
    {
        
        _2118_x002D_8(0,"2118-8"),
        
        _2126_x002D_1(1,"2126-1"),
        
        _2119_x002D_6(2,"2119-6"),
        
        _2120_x002D_4(3,"2120-4"),
        
        _2121_x002D_2(4,"2121-2"),
        
        _2122_x002D_0(5,"2122-0"),
        
        _2127_x002D_9(6,"2127-9"),
        
        _2123_x002D_8(7,"2123-8"),
        
        _2124_x002D_6(8,"2124-6"),
        
        _2125_x002D_3(9,"2125-3");
        
        private int code;
        private java.lang.String xmlValue;
        
        RaceWhiteMiddleEast(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RaceWhiteMiddleEast fromString(String str)
        {
            if (str.equals("2118-8"))
                return _2118_x002D_8;
            if (str.equals("2126-1"))
                return _2126_x002D_1;
            if (str.equals("2119-6"))
                return _2119_x002D_6;
            if (str.equals("2120-4"))
                return _2120_x002D_4;
            if (str.equals("2121-2"))
                return _2121_x002D_2;
            if (str.equals("2122-0"))
                return _2122_x002D_0;
            if (str.equals("2127-9"))
                return _2127_x002D_9;
            if (str.equals("2123-8"))
                return _2123_x002D_8;
            if (str.equals("2124-6"))
                return _2124_x002D_6;
            if (str.equals("2125-3"))
                return _2125_x002D_3;
		    return null;
        }
    }

	/**
	* vocSet: T209 (C-0-T209-cpt)
	*/
    public enum RelationalOperator
    {
        
        CT(0),
        
        EQ(1),
        
        GN(2),
        
        GT(3),
        
        GE(4),
        
        LT(5),
        
        LE(6),
        
        NE(7);
        
        private int code;
        
        RelationalOperator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RelationalOperator fromString(String str)
        {
            if (str.equals("CT"))
                return CT;
            if (str.equals("EQ"))
                return EQ;
            if (str.equals("GN"))
                return GN;
            if (str.equals("GT"))
                return GT;
            if (str.equals("GE"))
                return GE;
            if (str.equals("LT"))
                return LT;
            if (str.equals("LE"))
                return LE;
            if (str.equals("NE"))
                return NE;
		    return null;
        }
    }

	/**
	* vocSet: T10365 (C-0-T10365-cpt)
	*/
    public enum RelationshipConjunction
    {
        
        AND(0),
        
        XOR(1),
        
        OR(2);
        
        private int code;
        
        RelationshipConjunction(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RelationshipConjunction fromString(String str)
        {
            if (str.equals("AND"))
                return AND;
            if (str.equals("XOR"))
                return XOR;
            if (str.equals("OR"))
                return OR;
		    return null;
        }
    }

	/**
	* vocSet: T19185 (C-0-T19185-cpt)
	*/
    public enum ReligiousAffiliation
    {
        
        _1001(0,"1001"),
        
        _1002(1,"1002"),
        
        _1003(2,"1003"),
        
        _1004(3,"1004"),
        
        _1005(4,"1005"),
        
        _1006(5,"1006"),
        
        _1061(6,"1061"),
        
        _1007(7,"1007"),
        
        _1008(8,"1008"),
        
        _1009(9,"1009"),
        
        _1010(10,"1010"),
        
        _1062(11,"1062"),
        
        _1011(12,"1011"),
        
        _1012(13,"1012"),
        
        _1013(14,"1013"),
        
        _1063(15,"1063"),
        
        _1064(16,"1064"),
        
        _1065(17,"1065"),
        
        _1014(18,"1014"),
        
        _1066(19,"1066"),
        
        _1015(20,"1015"),
        
        _1067(21,"1067"),
        
        _1016(22,"1016"),
        
        _1068(23,"1068"),
        
        _1069(24,"1069"),
        
        _1070(25,"1070"),
        
        _1017(26,"1017"),
        
        _1018(27,"1018"),
        
        _1071(28,"1071"),
        
        _1072(29,"1072"),
        
        _1019(30,"1019"),
        
        _1020(31,"1020"),
        
        _1021(32,"1021"),
        
        _1022(33,"1022"),
        
        _1023(34,"1023"),
        
        _1024(35,"1024"),
        
        _1025(36,"1025"),
        
        _1026(37,"1026"),
        
        _1027(38,"1027"),
        
        _1028(39,"1028"),
        
        _1029(40,"1029"),
        
        _1030(41,"1030"),
        
        _1031(42,"1031"),
        
        _1073(43,"1073"),
        
        _1032(44,"1032"),
        
        _1074(45,"1074"),
        
        _1075(46,"1075"),
        
        _1033(47,"1033"),
        
        _1035(48,"1035"),
        
        _1036(49,"1036"),
        
        _1037(50,"1037"),
        
        _1038(51,"1038"),
        
        _1076(52,"1076"),
        
        _1039(53,"1039"),
        
        _1077(54,"1077"),
        
        _1078(55,"1078"),
        
        _1079(56,"1079"),
        
        _1040(57,"1040"),
        
        _1041(58,"1041"),
        
        _1080(59,"1080"),
        
        _1042(60,"1042"),
        
        _1043(61,"1043"),
        
        _1044(62,"1044"),
        
        _1045(63,"1045"),
        
        _1046(64,"1046"),
        
        _1047(65,"1047"),
        
        _1048(66,"1048"),
        
        _1049(67,"1049"),
        
        _1050(68,"1050"),
        
        _1051(69,"1051"),
        
        _1081(70,"1081"),
        
        _1052(71,"1052"),
        
        _1082(72,"1082"),
        
        _1053(73,"1053"),
        
        _1054(74,"1054"),
        
        _1055(75,"1055"),
        
        _1056(76,"1056"),
        
        _1057(77,"1057"),
        
        _1058(78,"1058"),
        
        _1059(79,"1059"),
        
        _1060(80,"1060"),
        
        _1034(81,"1034");
        
        private int code;
        private java.lang.String xmlValue;
        
        ReligiousAffiliation(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ReligiousAffiliation fromString(String str)
        {
            if (str.equals("1001"))
                return _1001;
            if (str.equals("1002"))
                return _1002;
            if (str.equals("1003"))
                return _1003;
            if (str.equals("1004"))
                return _1004;
            if (str.equals("1005"))
                return _1005;
            if (str.equals("1006"))
                return _1006;
            if (str.equals("1061"))
                return _1061;
            if (str.equals("1007"))
                return _1007;
            if (str.equals("1008"))
                return _1008;
            if (str.equals("1009"))
                return _1009;
            if (str.equals("1010"))
                return _1010;
            if (str.equals("1062"))
                return _1062;
            if (str.equals("1011"))
                return _1011;
            if (str.equals("1012"))
                return _1012;
            if (str.equals("1013"))
                return _1013;
            if (str.equals("1063"))
                return _1063;
            if (str.equals("1064"))
                return _1064;
            if (str.equals("1065"))
                return _1065;
            if (str.equals("1014"))
                return _1014;
            if (str.equals("1066"))
                return _1066;
            if (str.equals("1015"))
                return _1015;
            if (str.equals("1067"))
                return _1067;
            if (str.equals("1016"))
                return _1016;
            if (str.equals("1068"))
                return _1068;
            if (str.equals("1069"))
                return _1069;
            if (str.equals("1070"))
                return _1070;
            if (str.equals("1017"))
                return _1017;
            if (str.equals("1018"))
                return _1018;
            if (str.equals("1071"))
                return _1071;
            if (str.equals("1072"))
                return _1072;
            if (str.equals("1019"))
                return _1019;
            if (str.equals("1020"))
                return _1020;
            if (str.equals("1021"))
                return _1021;
            if (str.equals("1022"))
                return _1022;
            if (str.equals("1023"))
                return _1023;
            if (str.equals("1024"))
                return _1024;
            if (str.equals("1025"))
                return _1025;
            if (str.equals("1026"))
                return _1026;
            if (str.equals("1027"))
                return _1027;
            if (str.equals("1028"))
                return _1028;
            if (str.equals("1029"))
                return _1029;
            if (str.equals("1030"))
                return _1030;
            if (str.equals("1031"))
                return _1031;
            if (str.equals("1073"))
                return _1073;
            if (str.equals("1032"))
                return _1032;
            if (str.equals("1074"))
                return _1074;
            if (str.equals("1075"))
                return _1075;
            if (str.equals("1033"))
                return _1033;
            if (str.equals("1035"))
                return _1035;
            if (str.equals("1036"))
                return _1036;
            if (str.equals("1037"))
                return _1037;
            if (str.equals("1038"))
                return _1038;
            if (str.equals("1076"))
                return _1076;
            if (str.equals("1039"))
                return _1039;
            if (str.equals("1077"))
                return _1077;
            if (str.equals("1078"))
                return _1078;
            if (str.equals("1079"))
                return _1079;
            if (str.equals("1040"))
                return _1040;
            if (str.equals("1041"))
                return _1041;
            if (str.equals("1080"))
                return _1080;
            if (str.equals("1042"))
                return _1042;
            if (str.equals("1043"))
                return _1043;
            if (str.equals("1044"))
                return _1044;
            if (str.equals("1045"))
                return _1045;
            if (str.equals("1046"))
                return _1046;
            if (str.equals("1047"))
                return _1047;
            if (str.equals("1048"))
                return _1048;
            if (str.equals("1049"))
                return _1049;
            if (str.equals("1050"))
                return _1050;
            if (str.equals("1051"))
                return _1051;
            if (str.equals("1081"))
                return _1081;
            if (str.equals("1052"))
                return _1052;
            if (str.equals("1082"))
                return _1082;
            if (str.equals("1053"))
                return _1053;
            if (str.equals("1054"))
                return _1054;
            if (str.equals("1055"))
                return _1055;
            if (str.equals("1056"))
                return _1056;
            if (str.equals("1057"))
                return _1057;
            if (str.equals("1058"))
                return _1058;
            if (str.equals("1059"))
                return _1059;
            if (str.equals("1060"))
                return _1060;
            if (str.equals("1034"))
                return _1034;
		    return null;
        }
    }

	/**
	* vocSet: T14761 (C-0-T14761-cpt)
	*/
    public enum ResponseLevel
    {
        
        C(0),
        
        F(1),
        
        D(2),
        
        E(3),
        
        N(4),
        
        R(5),
        
        X(6);
        
        private int code;
        
        ResponseLevel(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ResponseLevel fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("F"))
                return F;
            if (str.equals("D"))
                return D;
            if (str.equals("E"))
                return E;
            if (str.equals("N"))
                return N;
            if (str.equals("R"))
                return R;
            if (str.equals("X"))
                return X;
		    return null;
        }
    }

	/**
	* vocSet: T394 (C-0-T394-cpt)
	*/
    public enum ResponseModality
    {
        
        B(0),
        
        T(1),
        
        R(2);
        
        private int code;
        
        ResponseModality(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ResponseModality fromString(String str)
        {
            if (str.equals("B"))
                return B;
            if (str.equals("T"))
                return T;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* vocSet: T19650 (C-0-T19650-cpt)
	*/
    public enum ResponseMode
    {
        
        D(0),
        
        I(1),
        
        Q(2);
        
        private int code;
        
        ResponseMode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ResponseMode fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("I"))
                return I;
            if (str.equals("Q"))
                return Q;
		    return null;
        }
    }

	/**
	* specDomain: S12205 (C-0-T11555-S13940-A19313-A19316-A10416-S14006-S11595-S12205-cpt)
	*/
    public enum RoleClassContact
    {
        
        CON(0),
        
        ECON(1),
        
        NOK(2);
        
        private int code;
        
        RoleClassContact(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassContact fromString(String str)
        {
            if (str.equals("CON"))
                return CON;
            if (str.equals("ECON"))
                return ECON;
            if (str.equals("NOK"))
                return NOK;
		    return null;
        }
    }

	/**
	* specDomain: S21957 (C-0-T11555-S13940-A19313-A19316-A10416-S14011-S21957-cpt)
	*/
    public enum RoleClassNamedInsured
    {
        
        NAMED(0),
        
        DEPEN(1),
        
        INDIV(2),
        
        SUBSCR(3);
        
        private int code;
        
        RoleClassNamedInsured(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassNamedInsured fromString(String str)
        {
            if (str.equals("NAMED"))
                return NAMED;
            if (str.equals("DEPEN"))
                return DEPEN;
            if (str.equals("INDIV"))
                return INDIV;
            if (str.equals("SUBSCR"))
                return SUBSCR;
		    return null;
        }
    }

	/**
	* specDomain: S11569 (C-0-T11555-S13940-A19313-A19316-A10416-S11569-cpt)
	*/
    public enum RoleClassEmployee
    {
        
        EMP(0),
        
        MIL(1);
        
        private int code;
        
        RoleClassEmployee(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassEmployee fromString(String str)
        {
            if (str.equals("EMP"))
                return EMP;
            if (str.equals("MIL"))
                return MIL;
		    return null;
        }
    }

	/**
	* specDomain: S21464 (C-0-T11555-S13940-A19313-A19316-A10416-S21464-cpt)
	*/
    public enum RoleClassInvestigationSubject
    {
        
        INVSBJ(0),
        
        CASEBJ(1),
        
        RESBJ(2);
        
        private int code;
        
        RoleClassInvestigationSubject(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassInvestigationSubject fromString(String str)
        {
            if (str.equals("INVSBJ"))
                return INVSBJ;
            if (str.equals("CASEBJ"))
                return CASEBJ;
            if (str.equals("RESBJ"))
                return RESBJ;
		    return null;
        }
    }

	/**
	* specDomain: S16773 (C-0-T11555-S13940-A19313-A19316-A10416-S16773-cpt)
	*/
    public enum RoleClassLicensedEntity
    {
        
        LIC(0),
        
        PROV(1),
        
        NOT(2);
        
        private int code;
        
        RoleClassLicensedEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassLicensedEntity fromString(String str)
        {
            if (str.equals("LIC"))
                return LIC;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("NOT"))
                return NOT;
		    return null;
        }
    }

	/**
	* specDomain: S10418 (C-0-T11555-S13940-A19313-A19105-S10418-cpt)
	*/
    public enum RoleClassDistributedMaterial
    {
        
        DST(0),
        
        RET(1);
        
        private int code;
        
        RoleClassDistributedMaterial(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassDistributedMaterial fromString(String str)
        {
            if (str.equals("DST"))
                return DST;
            if (str.equals("RET"))
                return RET;
		    return null;
        }
    }

	/**
	* specDomain: S11580 (C-0-T11555-S13940-A19313-A19105-S11580-cpt)
	*/
    public enum RoleClassManufacturedProduct
    {
        
        MANU(0),
        
        THER(1);
        
        private int code;
        
        RoleClassManufacturedProduct(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassManufacturedProduct fromString(String str)
        {
            if (str.equals("MANU"))
                return MANU;
            if (str.equals("THER"))
                return THER;
		    return null;
        }
    }

	/**
	* specDomain: S16927 (C-0-T11555-S13940-A19313-A19105-S16927-cpt)
	*/
    public enum RoleClassServiceDeliveryLocation
    {
        
        SDLOC(0),
        
        DSDLOC(1),
        
        ISDLOC(2);
        
        private int code;
        
        RoleClassServiceDeliveryLocation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassServiceDeliveryLocation fromString(String str)
        {
            if (str.equals("SDLOC"))
                return SDLOC;
            if (str.equals("DSDLOC"))
                return DSDLOC;
            if (str.equals("ISDLOC"))
                return ISDLOC;
		    return null;
        }
    }

	/**
	* specDomain: S10441 (C-0-T11555-S13940-A10428-S10441-cpt)
	*/
    public enum RoleClassIsSpeciesEntity
    {
        
        GEN(0),
        
        GRIC(1);
        
        private int code;
        
        RoleClassIsSpeciesEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassIsSpeciesEntity fromString(String str)
        {
            if (str.equals("GEN"))
                return GEN;
            if (str.equals("GRIC"))
                return GRIC;
		    return null;
        }
    }

	/**
	* specDomain: S22399 (C-0-T11555-S13940-A10428-S22399-cpt)
	*/
    public enum RoleClassOntologicalEquivalentEntityByBOT
    {
        
        EQUIV(0),
        
        SAME(1),
        
        SUBY(2);
        
        private int code;
        
        RoleClassOntologicalEquivalentEntityByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassOntologicalEquivalentEntityByBOT fromString(String str)
        {
            if (str.equals("EQUIV"))
                return EQUIV;
            if (str.equals("SAME"))
                return SAME;
            if (str.equals("SUBY"))
                return SUBY;
		    return null;
        }
    }

	/**
	* specDomain: S22350 (C-0-T11555-S13940-A10429-S22350-cpt)
	*/
    public enum RoleClassExposureAgentCarrier
    {
        
        EXPAGTCAR(0),
        
        EXPVECTOR(1),
        
        FOMITE(2);
        
        private int code;
        
        RoleClassExposureAgentCarrier(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassExposureAgentCarrier fromString(String str)
        {
            if (str.equals("EXPAGTCAR"))
                return EXPAGTCAR;
            if (str.equals("EXPVECTOR"))
                return EXPVECTOR;
            if (str.equals("FOMITE"))
                return FOMITE;
		    return null;
        }
    }

	/**
	* specDomain: S19089 (C-0-T11555-S13940-A10429-S10430-S19089-cpt)
	*/
    public enum RoleClassInactiveIngredient
    {
        
        IACT(0),
        
        COLR(1),
        
        FLVR(2),
        
        PRSV(3),
        
        STBL(4);
        
        private int code;
        
        RoleClassInactiveIngredient(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassInactiveIngredient fromString(String str)
        {
            if (str.equals("IACT"))
                return IACT;
            if (str.equals("COLR"))
                return COLR;
            if (str.equals("FLVR"))
                return FLVR;
            if (str.equals("PRSV"))
                return PRSV;
            if (str.equals("STBL"))
                return STBL;
		    return null;
        }
    }

	/**
	* specDomain: S10433 (C-0-T11555-S13940-A10429-S10430-S10433-cpt)
	*/
    public enum RoleClassIngredientEntityActiveIngredientByBOT
    {
        
        ACTI(0),
        
        ACTIB(1),
        
        ACTIM(2),
        
        ACTIR(3);
        
        private int code;
        
        RoleClassIngredientEntityActiveIngredientByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassIngredientEntityActiveIngredientByBOT fromString(String str)
        {
            if (str.equals("ACTI"))
                return ACTI;
            if (str.equals("ACTIB"))
                return ACTIB;
            if (str.equals("ACTIM"))
                return ACTIM;
            if (str.equals("ACTIR"))
                return ACTIR;
		    return null;
        }
    }

	/**
	* specDomain: S16815 (C-0-T11555-S13940-A10429-S16815-cpt)
	*/
    public enum RoleClassLocatedEntity
    {
        
        LOCE(0),
        
        STOR(1);
        
        private int code;
        
        RoleClassLocatedEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassLocatedEntity fromString(String str)
        {
            if (str.equals("LOCE"))
                return LOCE;
            if (str.equals("STOR"))
                return STOR;
		    return null;
        }
    }

	/**
	* specDomain: S19102 (C-0-T11555-S13940-A10429-S19102-cpt)
	*/
    public enum RoleClassPartitivePartByBOT
    {
        
        PART(0),
        
        ACTM(1);
        
        private int code;
        
        RoleClassPartitivePartByBOT(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassPartitivePartByBOT fromString(String str)
        {
            if (str.equals("PART"))
                return PART;
            if (str.equals("ACTM"))
                return ACTM;
		    return null;
        }
    }

	/**
	* specDomain: S11591 (C-0-T11555-S13940-A10429-S11591-cpt)
	*/
    public enum RoleClassSpecimen
    {
        
        SPEC(0),
        
        ALQT(1),
        
        ISLT(2);
        
        private int code;
        
        RoleClassSpecimen(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassSpecimen fromString(String str)
        {
            if (str.equals("SPEC"))
                return SPEC;
            if (str.equals("ALQT"))
                return ALQT;
            if (str.equals("ISLT"))
                return ISLT;
		    return null;
        }
    }

	/**
	* abstDomain: A19352 (C-0-T11555-A19352-cpt)
	*/
    public enum x_AccommodationRequestorRole
    {
        
        AGNT(0),
        
        PROV(1),
        
        PAT(2),
        
        PRS(3);
        
        private int code;
        
        x_AccommodationRequestorRole(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_AccommodationRequestorRole fromString(String str)
        {
            if (str.equals("AGNT"))
                return AGNT;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PRS"))
                return PRS;
		    return null;
        }
    }

	/**
	* abstDomain: A19367 (C-0-T11555-A19367-cpt)
	*/
    public enum x_DocumentEntrySubject
    {
        
        PAT(0),
        
        PRS(1),
        
        SPEC(2);
        
        private int code;
        
        x_DocumentEntrySubject(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentEntrySubject fromString(String str)
        {
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PRS"))
                return PRS;
            if (str.equals("SPEC"))
                return SPEC;
		    return null;
        }
    }

	/**
	* abstDomain: A19368 (C-0-T11555-A19368-cpt)
	*/
    public enum x_DocumentSubject
    {
        
        PAT(0),
        
        PRS(1);
        
        private int code;
        
        x_DocumentSubject(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_DocumentSubject fromString(String str)
        {
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PRS"))
                return PRS;
		    return null;
        }
    }

	/**
	* abstDomain: A16772 (C-0-T11555-A16772-cpt)
	*/
    public enum x_InformationRecipientRole
    {
        
        ASSIGNED(0),
        
        HLTHCHRT(1);
        
        private int code;
        
        x_InformationRecipientRole(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_InformationRecipientRole fromString(String str)
        {
            if (str.equals("ASSIGNED"))
                return ASSIGNED;
            if (str.equals("HLTHCHRT"))
                return HLTHCHRT;
		    return null;
        }
    }

	/**
	* abstDomain: A19382 (C-0-T11555-A19382-cpt)
	*/
    public enum x_RoleClassAccommodationRequestor
    {
        
        AGNT(0),
        
        PROV(1),
        
        PAT(2),
        
        PRS(3);
        
        private int code;
        
        x_RoleClassAccommodationRequestor(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_RoleClassAccommodationRequestor fromString(String str)
        {
            if (str.equals("AGNT"))
                return AGNT;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("PAT"))
                return PAT;
            if (str.equals("PRS"))
                return PRS;
		    return null;
        }
    }

	/**
	* abstDomain: A14008 (C-0-T11555-A14008-cpt)
	*/
    public enum x_RoleClassCoverage
    {
        
        SPNSR(0),
        
        COVPTY(1),
        
        POLHOLD(2),
        
        UNDWRT(3);
        
        private int code;
        
        x_RoleClassCoverage(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_RoleClassCoverage fromString(String str)
        {
            if (str.equals("SPNSR"))
                return SPNSR;
            if (str.equals("COVPTY"))
                return COVPTY;
            if (str.equals("POLHOLD"))
                return POLHOLD;
            if (str.equals("UNDWRT"))
                return UNDWRT;
		    return null;
        }
    }

	/**
	* abstDomain: A14013 (C-0-T11555-A14013-cpt)
	*/
    public enum x_RoleClassCoverageInvoice
    {
        
        PAYOR(0),
        
        PAYEE(1);
        
        private int code;
        
        x_RoleClassCoverageInvoice(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_RoleClassCoverageInvoice fromString(String str)
        {
            if (str.equals("PAYOR"))
                return PAYOR;
            if (str.equals("PAYEE"))
                return PAYEE;
		    return null;
        }
    }

	/**
	* abstDomain: A16930 (C-0-T11555-A16930-cpt)
	*/
    public enum x_RoleClassCredentialedEntity
    {
        
        ASSIGNED(0),
        
        QUAL(1);
        
        private int code;
        
        x_RoleClassCredentialedEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_RoleClassCredentialedEntity fromString(String str)
        {
            if (str.equals("ASSIGNED"))
                return ASSIGNED;
            if (str.equals("QUAL"))
                return QUAL;
		    return null;
        }
    }

	/**
	* abstDomain: A19395 (C-0-T11555-A19395-cpt)
	*/
    public enum x_RoleClassPayeePolicyRelationship
    {
        
        COVPTY(0),
        
        GUAR(1),
        
        PROV(2),
        
        PRS(3),
        
        POLHOLD(4);
        
        private int code;
        
        x_RoleClassPayeePolicyRelationship(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_RoleClassPayeePolicyRelationship fromString(String str)
        {
            if (str.equals("COVPTY"))
                return COVPTY;
            if (str.equals("GUAR"))
                return GUAR;
            if (str.equals("PROV"))
                return PROV;
            if (str.equals("PRS"))
                return PRS;
            if (str.equals("POLHOLD"))
                return POLHOLD;
		    return null;
        }
    }

	/**
	* vocSet: O20270 (C-0-O20270-cpt)
	*/
    public enum RoleClassEquivalentEntity
    {
        
        SAME(0),
        
        SUBY(1);
        
        private int code;
        
        RoleClassEquivalentEntity(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleClassEquivalentEntity fromString(String str)
        {
            if (str.equals("SAME"))
                return SAME;
            if (str.equals("SUBY"))
                return SUBY;
		    return null;
        }
    }

	/**
	* abstDomain: A19877 (C-0-T12206-A19690-A19877-cpt)
	*/
    public enum CoverageSponsorRoleType
    {
        
        FULLINS(0),
        
        SELFINS(1);
        
        private int code;
        
        CoverageSponsorRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CoverageSponsorRoleType fromString(String str)
        {
            if (str.equals("FULLINS"))
                return FULLINS;
            if (str.equals("SELFINS"))
                return SELFINS;
		    return null;
        }
    }

	/**
	* abstDomain: A19853 (C-0-T12206-A19690-A19853-cpt)
	*/
    public enum PayorRoleType
    {
        
        ENROLBKR(0),
        
        TPA(1),
        
        UMO(2);
        
        private int code;
        
        PayorRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PayorRoleType fromString(String str)
        {
            if (str.equals("ENROLBKR"))
                return ENROLBKR;
            if (str.equals("TPA"))
                return TPA;
            if (str.equals("UMO"))
                return UMO;
		    return null;
        }
    }

	/**
	* specDomain: S22034 (C-0-T12206-A19690-S22030-S22034-cpt)
	*/
    public enum PowerOfAttorney
    {
        
        POWATT(0),
        
        DPOWATT(1),
        
        HPOWATT(2),
        
        SPOWATT(3);
        
        private int code;
        
        PowerOfAttorney(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PowerOfAttorney fromString(String str)
        {
            if (str.equals("POWATT"))
                return POWATT;
            if (str.equals("DPOWATT"))
                return DPOWATT;
            if (str.equals("HPOWATT"))
                return HPOWATT;
            if (str.equals("SPOWATT"))
                return SPOWATT;
		    return null;
        }
    }

	/**
	* specDomain: S22157 (C-0-T12206-A19679-A19869-S22157-cpt)
	*/
    public enum BiotherapeuticNon_x002D_personLivingSubjectRoleType
    {
        
        BIOTH(0),
        
        ANTIBIOT(1),
        
        DEBR(2);
        
        private int code;
        
        BiotherapeuticNon_x002D_personLivingSubjectRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BiotherapeuticNon_x002D_personLivingSubjectRoleType fromString(String str)
        {
            if (str.equals("BIOTH"))
                return BIOTH;
            if (str.equals("ANTIBIOT"))
                return ANTIBIOT;
            if (str.equals("DEBR"))
                return DEBR;
		    return null;
        }
    }

	/**
	* abstDomain: A19748 (C-0-T12206-A19679-A19748-cpt)
	*/
    public enum x_LabSpecimenCollectionProviders
    {
        
        communityLaboratory(0),
        
        homeHealth(1),
        
        laboratory(2),
        
        pathologist(3),
        
        phlebotomist(4),
        
        self(5),
        
        thirdParty(6);
        
        private int code;
        
        x_LabSpecimenCollectionProviders(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_LabSpecimenCollectionProviders fromString(String str)
        {
            if (str.equals("communityLaboratory"))
                return communityLaboratory;
            if (str.equals("homeHealth"))
                return homeHealth;
            if (str.equals("laboratory"))
                return laboratory;
            if (str.equals("pathologist"))
                return pathologist;
            if (str.equals("phlebotomist"))
                return phlebotomist;
            if (str.equals("self"))
                return self;
            if (str.equals("thirdParty"))
                return thirdParty;
		    return null;
        }
    }

	/**
	* abstDomain: A17622 (C-0-T12206-A15920-A17622-cpt)
	*/
    public enum AdministrativeContactRoleType
    {
        
        BILL(0),
        
        PAYOR(1),
        
        ORG(2);
        
        private int code;
        
        AdministrativeContactRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdministrativeContactRoleType fromString(String str)
        {
            if (str.equals("BILL"))
                return BILL;
            if (str.equals("PAYOR"))
                return PAYOR;
            if (str.equals("ORG"))
                return ORG;
		    return null;
        }
    }

	/**
	* abstDomain: A16368 (C-0-T12206-A16368-cpt)
	*/
    public enum LivingSubjectProductionClass
    {
        
        BF(0),
        
        BR(1),
        
        BL(2),
        
        CO(3),
        
        DA(4),
        
        DR(5),
        
        DU(6),
        
        FI(7),
        
        LY(8),
        
        MT(9),
        
        MU(10),
        
        PL(11),
        
        RC(12),
        
        SH(13),
        
        VL(14),
        
        WL(15),
        
        WO(16);
        
        private int code;
        
        LivingSubjectProductionClass(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LivingSubjectProductionClass fromString(String str)
        {
            if (str.equals("BF"))
                return BF;
            if (str.equals("BR"))
                return BR;
            if (str.equals("BL"))
                return BL;
            if (str.equals("CO"))
                return CO;
            if (str.equals("DA"))
                return DA;
            if (str.equals("DR"))
                return DR;
            if (str.equals("DU"))
                return DU;
            if (str.equals("FI"))
                return FI;
            if (str.equals("LY"))
                return LY;
            if (str.equals("MT"))
                return MT;
            if (str.equals("MU"))
                return MU;
            if (str.equals("PL"))
                return PL;
            if (str.equals("RC"))
                return RC;
            if (str.equals("SH"))
                return SH;
            if (str.equals("VL"))
                return VL;
            if (str.equals("WL"))
                return WL;
            if (str.equals("WO"))
                return WO;
		    return null;
        }
    }

	/**
	* abstDomain: A19720 (C-0-T12206-A19720-cpt)
	*/
    public enum MedicationGeneralizationRoleType
    {
        
        GD(0),
        
        GDF(1),
        
        GDS(2),
        
        GDSF(3),
        
        MGDSF(4);
        
        private int code;
        
        MedicationGeneralizationRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MedicationGeneralizationRoleType fromString(String str)
        {
            if (str.equals("GD"))
                return GD;
            if (str.equals("GDF"))
                return GDF;
            if (str.equals("GDS"))
                return GDS;
            if (str.equals("GDSF"))
                return GDSF;
            if (str.equals("MGDSF"))
                return MGDSF;
		    return null;
        }
    }

	/**
	* abstDomain: A15925 (C-0-T12206-A15925-cpt)
	*/
    public enum MemberRoleType
    {
        
        TRB(0);
        
        private int code;
        
        MemberRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MemberRoleType fromString(String str)
        {
            if (str.equals("TRB"))
                return TRB;
		    return null;
        }
    }

	/**
	* specDomain: S11564 (C-0-T12206-A19563-S17926-S16360-S11564-cpt)
	*/
    public enum AdoptedChild
    {
        
        CHLDADOPT(0),
        
        DAUADOPT(1),
        
        SONADOPT(2);
        
        private int code;
        
        AdoptedChild(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AdoptedChild fromString(String str)
        {
            if (str.equals("CHLDADOPT"))
                return CHLDADOPT;
            if (str.equals("DAUADOPT"))
                return DAUADOPT;
            if (str.equals("SONADOPT"))
                return SONADOPT;
		    return null;
        }
    }

	/**
	* specDomain: S11563 (C-0-T12206-A19563-S17926-S16360-S11563-cpt)
	*/
    public enum ChildInLaw
    {
        
        CHLDINLAW(0),
        
        DAUINLAW(1),
        
        SONINLAW(2);
        
        private int code;
        
        ChildInLaw(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ChildInLaw fromString(String str)
        {
            if (str.equals("CHLDINLAW"))
                return CHLDINLAW;
            if (str.equals("DAUINLAW"))
                return DAUINLAW;
            if (str.equals("SONINLAW"))
                return SONINLAW;
		    return null;
        }
    }

	/**
	* specDomain: S11565 (C-0-T12206-A19563-S17926-S16360-S11565-cpt)
	*/
    public enum FosterChild
    {
        
        CHLDFOST(0),
        
        DAUFOST(1),
        
        SONFOST(2);
        
        private int code;
        
        FosterChild(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FosterChild fromString(String str)
        {
            if (str.equals("CHLDFOST"))
                return CHLDFOST;
            if (str.equals("DAUFOST"))
                return DAUFOST;
            if (str.equals("SONFOST"))
                return SONFOST;
		    return null;
        }
    }

	/**
	* specDomain: S17930 (C-0-T12206-A19563-S17926-S16360-S17930-cpt)
	*/
    public enum NaturalChild
    {
        
        NCHILD(0),
        
        DAU(1),
        
        SON(2);
        
        private int code;
        
        NaturalChild(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NaturalChild fromString(String str)
        {
            if (str.equals("NCHILD"))
                return NCHILD;
            if (str.equals("DAU"))
                return DAU;
            if (str.equals("SON"))
                return SON;
		    return null;
        }
    }

	/**
	* specDomain: S11562 (C-0-T12206-A19563-S17926-S16360-S11562-cpt)
	*/
    public enum StepChild
    {
        
        STPCHLD(0),
        
        STPDAU(1),
        
        STPSON(2);
        
        private int code;
        
        StepChild(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static StepChild fromString(String str)
        {
            if (str.equals("STPCHLD"))
                return STPCHLD;
            if (str.equals("STPDAU"))
                return STPDAU;
            if (str.equals("STPSON"))
                return STPSON;
		    return null;
        }
    }

	/**
	* specDomain: S19748 (C-0-T12206-A19563-S17926-S19748-cpt)
	*/
    public enum FamilyMemberAunt
    {
        
        AUNT(0),
        
        MAUNT(1),
        
        PAUNT(2);
        
        private int code;
        
        FamilyMemberAunt(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FamilyMemberAunt fromString(String str)
        {
            if (str.equals("AUNT"))
                return AUNT;
            if (str.equals("MAUNT"))
                return MAUNT;
            if (str.equals("PAUNT"))
                return PAUNT;
		    return null;
        }
    }

	/**
	* specDomain: S19749 (C-0-T12206-A19563-S17926-S19749-cpt)
	*/
    public enum FamilyMemberCousin
    {
        
        COUSN(0),
        
        MCOUSN(1),
        
        PCOUSN(2);
        
        private int code;
        
        FamilyMemberCousin(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FamilyMemberCousin fromString(String str)
        {
            if (str.equals("COUSN"))
                return COUSN;
            if (str.equals("MCOUSN"))
                return MCOUSN;
            if (str.equals("PCOUSN"))
                return PCOUSN;
		    return null;
        }
    }

	/**
	* specDomain: S19753 (C-0-T12206-A19563-S17926-S19753-cpt)
	*/
    public enum FamilyMemberUncle
    {
        
        UNCLE(0),
        
        MUNCLE(1),
        
        PUNCLE(2);
        
        private int code;
        
        FamilyMemberUncle(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FamilyMemberUncle fromString(String str)
        {
            if (str.equals("UNCLE"))
                return UNCLE;
            if (str.equals("MUNCLE"))
                return MUNCLE;
            if (str.equals("PUNCLE"))
                return PUNCLE;
		    return null;
        }
    }

	/**
	* specDomain: S19745 (C-0-T12206-A19563-S17926-S19745-cpt)
	*/
    public enum GrandChild
    {
        
        GRNDCHILD(0),
        
        GRNDDAU(1),
        
        GRNDSON(2);
        
        private int code;
        
        GrandChild(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GrandChild fromString(String str)
        {
            if (str.equals("GRNDCHILD"))
                return GRNDCHILD;
            if (str.equals("GRNDDAU"))
                return GRNDDAU;
            if (str.equals("GRNDSON"))
                return GRNDSON;
		    return null;
        }
    }

	/**
	* specDomain: S16349 (C-0-T12206-A19563-S17926-S16349-cpt)
	*/
    public enum Grandparent
    {
        
        GRPRN(0),
        
        GRFTH(1),
        
        GRMTH(2),
        
        MGRFTH(3),
        
        MGRMTH(4),
        
        MGRPRN(5),
        
        PGRFTH(6),
        
        PGRMTH(7),
        
        PGRPRN(8);
        
        private int code;
        
        Grandparent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Grandparent fromString(String str)
        {
            if (str.equals("GRPRN"))
                return GRPRN;
            if (str.equals("GRFTH"))
                return GRFTH;
            if (str.equals("GRMTH"))
                return GRMTH;
            if (str.equals("MGRFTH"))
                return MGRFTH;
            if (str.equals("MGRMTH"))
                return MGRMTH;
            if (str.equals("MGRPRN"))
                return MGRPRN;
            if (str.equals("PGRFTH"))
                return PGRFTH;
            if (str.equals("PGRMTH"))
                return PGRMTH;
            if (str.equals("PGRPRN"))
                return PGRPRN;
		    return null;
        }
    }

	/**
	* specDomain: S19739 (C-0-T12206-A19563-S17926-S19739-cpt)
	*/
    public enum GreatGrandparent
    {
        
        GGRPRN(0),
        
        MGGRFTH(1),
        
        MGGRMTH(2),
        
        MGGRPRN(3),
        
        PGGRFTH(4),
        
        PGGRMTH(5),
        
        PGGRPRN(6),
        
        GGRFTH(7),
        
        GGRMTH(8);
        
        private int code;
        
        GreatGrandparent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GreatGrandparent fromString(String str)
        {
            if (str.equals("GGRPRN"))
                return GGRPRN;
            if (str.equals("MGGRFTH"))
                return MGGRFTH;
            if (str.equals("MGGRMTH"))
                return MGGRMTH;
            if (str.equals("MGGRPRN"))
                return MGGRPRN;
            if (str.equals("PGGRFTH"))
                return PGGRFTH;
            if (str.equals("PGGRMTH"))
                return PGGRMTH;
            if (str.equals("PGGRPRN"))
                return PGGRPRN;
            if (str.equals("GGRFTH"))
                return GGRFTH;
            if (str.equals("GGRMTH"))
                return GGRMTH;
		    return null;
        }
    }

	/**
	* specDomain: S19750 (C-0-T12206-A19563-S17926-S19750-cpt)
	*/
    public enum NieceNephew
    {
        
        NIENEPH(0),
        
        NEPHEW(1),
        
        NIECE(2);
        
        private int code;
        
        NieceNephew(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NieceNephew fromString(String str)
        {
            if (str.equals("NIENEPH"))
                return NIENEPH;
            if (str.equals("NEPHEW"))
                return NEPHEW;
            if (str.equals("NIECE"))
                return NIECE;
		    return null;
        }
    }

	/**
	* specDomain: S19765 (C-0-T12206-A19563-S17926-S16346-S19764-S19765-cpt)
	*/
    public enum NaturalFather
    {
        
        NFTH(0),
        
        NFTHF(1);
        
        private int code;
        
        NaturalFather(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NaturalFather fromString(String str)
        {
            if (str.equals("NFTH"))
                return NFTH;
            if (str.equals("NFTHF"))
                return NFTHF;
		    return null;
        }
    }

	/**
	* specDomain: S19770 (C-0-T12206-A19563-S17926-S16346-S19770-cpt)
	*/
    public enum ParentInLaw
    {
        
        PRNINLAW(0),
        
        FTHINLAW(1),
        
        MTHINLAW(2);
        
        private int code;
        
        ParentInLaw(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParentInLaw fromString(String str)
        {
            if (str.equals("PRNINLAW"))
                return PRNINLAW;
            if (str.equals("FTHINLAW"))
                return FTHINLAW;
            if (str.equals("MTHINLAW"))
                return MTHINLAW;
		    return null;
        }
    }

	/**
	* specDomain: S19767 (C-0-T12206-A19563-S17926-S16346-S19767-cpt)
	*/
    public enum StepParent
    {
        
        STPPRN(0),
        
        STPFTH(1),
        
        STPMTH(2);
        
        private int code;
        
        StepParent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static StepParent fromString(String str)
        {
            if (str.equals("STPPRN"))
                return STPPRN;
            if (str.equals("STPFTH"))
                return STPFTH;
            if (str.equals("STPMTH"))
                return STPMTH;
		    return null;
        }
    }

	/**
	* specDomain: S19776 (C-0-T12206-A19563-S17926-S11567-S19776-cpt)
	*/
    public enum HalfSibling
    {
        
        HSIB(0),
        
        HBRO(1),
        
        HSIS(2);
        
        private int code;
        
        HalfSibling(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HalfSibling fromString(String str)
        {
            if (str.equals("HSIB"))
                return HSIB;
            if (str.equals("HBRO"))
                return HBRO;
            if (str.equals("HSIS"))
                return HSIS;
		    return null;
        }
    }

	/**
	* specDomain: S19773 (C-0-T12206-A19563-S17926-S11567-S19773-cpt)
	*/
    public enum NaturalSibling
    {
        
        NSIB(0),
        
        NBRO(1),
        
        NSIS(2);
        
        private int code;
        
        NaturalSibling(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NaturalSibling fromString(String str)
        {
            if (str.equals("NSIB"))
                return NSIB;
            if (str.equals("NBRO"))
                return NBRO;
            if (str.equals("NSIS"))
                return NSIS;
		    return null;
        }
    }

	/**
	* specDomain: S19782 (C-0-T12206-A19563-S17926-S11567-S19782-cpt)
	*/
    public enum SiblingInLaw
    {
        
        SIBINLAW(0),
        
        BROINLAW(1),
        
        SISINLAW(2);
        
        private int code;
        
        SiblingInLaw(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SiblingInLaw fromString(String str)
        {
            if (str.equals("SIBINLAW"))
                return SIBINLAW;
            if (str.equals("BROINLAW"))
                return BROINLAW;
            if (str.equals("SISINLAW"))
                return SISINLAW;
		    return null;
        }
    }

	/**
	* specDomain: S19779 (C-0-T12206-A19563-S17926-S11567-S19779-cpt)
	*/
    public enum StepSibling
    {
        
        STPSIB(0),
        
        STPBRO(1),
        
        STPSIS(2);
        
        private int code;
        
        StepSibling(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static StepSibling fromString(String str)
        {
            if (str.equals("STPSIB"))
                return STPSIB;
            if (str.equals("STPBRO"))
                return STPBRO;
            if (str.equals("STPSIS"))
                return STPSIS;
		    return null;
        }
    }

	/**
	* specDomain: S19742 (C-0-T12206-A19563-S17926-S19755-S19742-cpt)
	*/
    public enum Spouse
    {
        
        SPS(0),
        
        HUSB(1),
        
        WIFE(2);
        
        private int code;
        
        Spouse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Spouse fromString(String str)
        {
            if (str.equals("SPS"))
                return SPS;
            if (str.equals("HUSB"))
                return HUSB;
            if (str.equals("WIFE"))
                return WIFE;
		    return null;
        }
    }

	/**
	* abstDomain: A19810 (C-0-T12206-A19809-A19805-A19810-cpt)
	*/
    public enum ClaimantCoveredPartyRoleType
    {
        
        CRIMEVIC(0),
        
        INJ(1),
        
        INJWKR(2);
        
        private int code;
        
        ClaimantCoveredPartyRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ClaimantCoveredPartyRoleType fromString(String str)
        {
            if (str.equals("CRIMEVIC"))
                return CRIMEVIC;
            if (str.equals("INJ"))
                return INJ;
            if (str.equals("INJWKR"))
                return INJWKR;
		    return null;
        }
    }

	/**
	* specDomain: S21318 (C-0-T12206-A19809-A19805-A19813-S21318-cpt)
	*/
    public enum StudentRoleType
    {
        
        STUD(0),
        
        FSTUD(1),
        
        PSTUD(2);
        
        private int code;
        
        StudentRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static StudentRoleType fromString(String str)
        {
            if (str.equals("STUD"))
                return STUD;
            if (str.equals("FSTUD"))
                return FSTUD;
            if (str.equals("PSTUD"))
                return PSTUD;
		    return null;
        }
    }

	/**
	* specDomain: S21968 (C-0-T12206-A19809-A19805-A19814-S21968-cpt)
	*/
    public enum MilitaryRoleType
    {
        
        MIL(0),
        
        ACTMIL(1),
        
        RETMIL(2),
        
        VET(3);
        
        private int code;
        
        MilitaryRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MilitaryRoleType fromString(String str)
        {
            if (str.equals("MIL"))
                return MIL;
            if (str.equals("ACTMIL"))
                return ACTMIL;
            if (str.equals("RETMIL"))
                return RETMIL;
            if (str.equals("VET"))
                return VET;
		    return null;
        }
    }

	/**
	* abstDomain: A19417 (C-0-T12206-A19417-cpt)
	*/
    public enum ResearchSubjectRoleBasis
    {
        
        ERL(0),
        
        SCN(1);
        
        private int code;
        
        ResearchSubjectRoleBasis(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ResearchSubjectRoleBasis fromString(String str)
        {
            if (str.equals("ERL"))
                return ERL;
            if (str.equals("SCN"))
                return SCN;
		    return null;
        }
    }

	/**
	* specDomain: S10903 (C-0-T12206-A17660-A19450-A10588-S10902-S10903-cpt)
	*/
    public enum CVDiagTherPracticeSetting
    {
        
        CVDX(0),
        
        CATH(1),
        
        ECHO(2);
        
        private int code;
        
        CVDiagTherPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CVDiagTherPracticeSetting fromString(String str)
        {
            if (str.equals("CVDX"))
                return CVDX;
            if (str.equals("CATH"))
                return CATH;
            if (str.equals("ECHO"))
                return ECHO;
		    return null;
        }
    }

	/**
	* specDomain: S10906 (C-0-T12206-A17660-A19450-A10588-S10902-S10906-cpt)
	*/
    public enum GIDiagTherPracticeSetting
    {
        
        GIDX(0,"GIDX"),
        
        _261QE0800N(1,"261QE0800N"),
        
        ENDOS(2,"ENDOS");
        
        private int code;
        private java.lang.String xmlValue;
        
        GIDiagTherPracticeSetting(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static GIDiagTherPracticeSetting fromString(String str)
        {
            if (str.equals("GIDX"))
                return GIDX;
            if (str.equals("261QE0800N"))
                return _261QE0800N;
            if (str.equals("ENDOS"))
                return ENDOS;
		    return null;
        }
    }

	/**
	* specDomain: S10908 (C-0-T12206-A17660-A19450-A10588-S10902-S10908-cpt)
	*/
    public enum RadDiagTherPracticeSetting
    {
        
        RADDX(0,"RADDX"),
        
        RNEU(1,"RNEU"),
        
        _261QX0203N(2,"261QX0203N"),
        
        RADO(3,"RADO");
        
        private int code;
        private java.lang.String xmlValue;
        
        RadDiagTherPracticeSetting(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RadDiagTherPracticeSetting fromString(String str)
        {
            if (str.equals("RADDX"))
                return RADDX;
            if (str.equals("RNEU"))
                return RNEU;
            if (str.equals("261QX0203N"))
                return _261QX0203N;
            if (str.equals("RADO"))
                return RADO;
		    return null;
        }
    }

	/**
	* specDomain: S13792 (C-0-T12206-A17660-A19450-A10588-S10602-S13792-cpt)
	*/
    public enum ChronicCareFacility
    {
        
        CHR(0,"CHR"),
        
        _281PC2000N(1,"281PC2000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        ChronicCareFacility(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ChronicCareFacility fromString(String str)
        {
            if (str.equals("CHR"))
                return CHR;
            if (str.equals("281PC2000N"))
                return _281PC2000N;
		    return null;
        }
    }

	/**
	* specDomain: S13798 (C-0-T12206-A17660-A19450-A10588-S10602-S10603-S13798-cpt)
	*/
    public enum GeneralAcuteCareHospitalWomen
    {
        
        _282NW0100N(0,"282NW0100N"),
        
        _2865C1500N(1,"2865C1500N"),
        
        _2865M2000N(2,"2865M2000N"),
        
        _2865X1600N(3,"2865X1600N");
        
        private int code;
        private java.lang.String xmlValue;
        
        GeneralAcuteCareHospitalWomen(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static GeneralAcuteCareHospitalWomen fromString(String str)
        {
            if (str.equals("282NW0100N"))
                return _282NW0100N;
            if (str.equals("2865C1500N"))
                return _2865C1500N;
            if (str.equals("2865M2000N"))
                return _2865M2000N;
            if (str.equals("2865X1600N"))
                return _2865X1600N;
		    return null;
        }
    }

	/**
	* specDomain: S13799 (C-0-T12206-A17660-A19450-A10588-S10602-S13799-cpt)
	*/
    public enum MilitaryHospital
    {
        
        MHSP(0);
        
        private int code;
        
        MilitaryHospital(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MilitaryHospital fromString(String str)
        {
            if (str.equals("MHSP"))
                return MHSP;
		    return null;
        }
    }

	/**
	* specDomain: S10604 (C-0-T12206-A17660-A19450-A10588-S10602-S10604-cpt)
	*/
    public enum RehabilitationHospital
    {
        
        RH(0,"RH"),
        
        _283XC2000N(1,"283XC2000N");
        
        private int code;
        private java.lang.String xmlValue;
        
        RehabilitationHospital(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static RehabilitationHospital fromString(String str)
        {
            if (str.equals("RH"))
                return RH;
            if (str.equals("283XC2000N"))
                return _283XC2000N;
		    return null;
        }
    }

	/**
	* specDomain: S10598 (C-0-T12206-A17660-A19450-A10588-S10596-S10598-cpt)
	*/
    public enum ERPracticeSetting
    {
        
        ER(0),
        
        ETU(1);
        
        private int code;
        
        ERPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ERPracticeSetting fromString(String str)
        {
            if (str.equals("ER"))
                return ER;
            if (str.equals("ETU"))
                return ETU;
		    return null;
        }
    }

	/**
	* specDomain: S10916 (C-0-T12206-A17660-A19450-A10588-S10596-S10920-S10916-cpt)
	*/
    public enum PedsICUPracticeSetting
    {
        
        PEDICU(0),
        
        PEDNICU(1);
        
        private int code;
        
        PedsICUPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PedsICUPracticeSetting fromString(String str)
        {
            if (str.equals("PEDICU"))
                return PEDICU;
            if (str.equals("PEDNICU"))
                return PEDNICU;
		    return null;
        }
    }

	/**
	* specDomain: S10605 (C-0-T12206-A17660-A19450-A10588-S10605-cpt)
	*/
    public enum NursingOrCustodialCarePracticeSetting
    {
        
        NCCF(0,"NCCF"),
        
        _314000000N(1,"314000000N"),
        
        SNF(2,"SNF");
        
        private int code;
        private java.lang.String xmlValue;
        
        NursingOrCustodialCarePracticeSetting(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NursingOrCustodialCarePracticeSetting fromString(String str)
        {
            if (str.equals("NCCF"))
                return NCCF;
            if (str.equals("314000000N"))
                return _314000000N;
            if (str.equals("SNF"))
                return SNF;
		    return null;
        }
    }

	/**
	* specDomain: S10590 (C-0-T12206-A17660-A19450-A10588-S10589-S10590-cpt)
	*/
    public enum CardClinPracticeSetting
    {
        
        CARD(0),
        
        PEDCARD(1);
        
        private int code;
        
        CardClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CardClinPracticeSetting fromString(String str)
        {
            if (str.equals("CARD"))
                return CARD;
            if (str.equals("PEDCARD"))
                return PEDCARD;
		    return null;
        }
    }

	/**
	* specDomain: S10931 (C-0-T12206-A17660-A19450-A10588-S10589-S10931-cpt)
	*/
    public enum EndocrinologyClinic
    {
        
        ENDO(0),
        
        PEDE(1);
        
        private int code;
        
        EndocrinologyClinic(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EndocrinologyClinic fromString(String str)
        {
            if (str.equals("ENDO"))
                return ENDO;
            if (str.equals("PEDE"))
                return PEDE;
		    return null;
        }
    }

	/**
	* specDomain: S10934 (C-0-T12206-A17660-A19450-A10588-S10589-S10934-cpt)
	*/
    public enum GIClinicPracticeSetting
    {
        
        GI(0),
        
        PEDGI(1);
        
        private int code;
        
        GIClinicPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GIClinicPracticeSetting fromString(String str)
        {
            if (str.equals("GI"))
                return GI;
            if (str.equals("PEDGI"))
                return PEDGI;
		    return null;
        }
    }

	/**
	* specDomain: S10936 (C-0-T12206-A17660-A19450-A10588-S10589-S10936-cpt)
	*/
    public enum HemClinPracticeSetting
    {
        
        HEM(0),
        
        PEDHEM(1);
        
        private int code;
        
        HemClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HemClinPracticeSetting fromString(String str)
        {
            if (str.equals("HEM"))
                return HEM;
            if (str.equals("PEDHEM"))
                return PEDHEM;
		    return null;
        }
    }

	/**
	* specDomain: S10939 (C-0-T12206-A17660-A19450-A10588-S10589-S10939-cpt)
	*/
    public enum IDClinPracticeSetting
    {
        
        INFD(0),
        
        PEDID(1);
        
        private int code;
        
        IDClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IDClinPracticeSetting fromString(String str)
        {
            if (str.equals("INFD"))
                return INFD;
            if (str.equals("PEDID"))
                return PEDID;
		    return null;
        }
    }

	/**
	* specDomain: S10947 (C-0-T12206-A17660-A19450-A10588-S10589-S10947-cpt)
	*/
    public enum MedOncClinPracticeSetting
    {
        
        ONCL(0),
        
        PEDHO(1);
        
        private int code;
        
        MedOncClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MedOncClinPracticeSetting fromString(String str)
        {
            if (str.equals("ONCL"))
                return ONCL;
            if (str.equals("PEDHO"))
                return PEDHO;
		    return null;
        }
    }

	/**
	* specDomain: S10943 (C-0-T12206-A17660-A19450-A10588-S10589-S10943-cpt)
	*/
    public enum NephClinPracticeSetting
    {
        
        NEPH(0),
        
        PEDNEPH(1);
        
        private int code;
        
        NephClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NephClinPracticeSetting fromString(String str)
        {
            if (str.equals("NEPH"))
                return NEPH;
            if (str.equals("PEDNEPH"))
                return PEDNEPH;
		    return null;
        }
    }

	/**
	* specDomain: S10949 (C-0-T12206-A17660-A19450-A10588-S10589-S10949-cpt)
	*/
    public enum OrthoClinPracticeSetting
    {
        
        ORTHO(0),
        
        HAND(1);
        
        private int code;
        
        OrthoClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OrthoClinPracticeSetting fromString(String str)
        {
            if (str.equals("ORTHO"))
                return ORTHO;
            if (str.equals("HAND"))
                return HAND;
		    return null;
        }
    }

	/**
	* specDomain: S10953 (C-0-T12206-A17660-A19450-A10588-S10589-S10953-cpt)
	*/
    public enum PedsClinPracticeSetting
    {
        
        PEDC(0),
        
        PEDCARD(1),
        
        PEDE(2),
        
        PEDGI(3),
        
        PEDHEM(4),
        
        PEDID(5),
        
        PEDNEPH(6),
        
        PEDHO(7),
        
        PEDRHEUM(8);
        
        private int code;
        
        PedsClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PedsClinPracticeSetting fromString(String str)
        {
            if (str.equals("PEDC"))
                return PEDC;
            if (str.equals("PEDCARD"))
                return PEDCARD;
            if (str.equals("PEDE"))
                return PEDE;
            if (str.equals("PEDGI"))
                return PEDGI;
            if (str.equals("PEDHEM"))
                return PEDHEM;
            if (str.equals("PEDID"))
                return PEDID;
            if (str.equals("PEDNEPH"))
                return PEDNEPH;
            if (str.equals("PEDHO"))
                return PEDHO;
            if (str.equals("PEDRHEUM"))
                return PEDRHEUM;
		    return null;
        }
    }

	/**
	* specDomain: S10593 (C-0-T12206-A17660-A19450-A10588-S10589-S10593-cpt)
	*/
    public enum RheumClinPracticeSetting
    {
        
        RHEUM(0),
        
        PEDRHEUM(1);
        
        private int code;
        
        RheumClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RheumClinPracticeSetting fromString(String str)
        {
            if (str.equals("RHEUM"))
                return RHEUM;
            if (str.equals("PEDRHEUM"))
                return PEDRHEUM;
		    return null;
        }
    }

	/**
	* specDomain: S10968 (C-0-T12206-A17660-A19450-A10588-S10589-S10968-cpt)
	*/
    public enum SurgClinPracticeSetting
    {
        
        SU(0),
        
        PLS(1),
        
        URO(2);
        
        private int code;
        
        SurgClinPracticeSetting(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SurgClinPracticeSetting fromString(String str)
        {
            if (str.equals("SU"))
                return SU;
            if (str.equals("PLS"))
                return PLS;
            if (str.equals("URO"))
                return URO;
		    return null;
        }
    }

	/**
	* specDomain: S10607 (C-0-T12206-A17660-A19450-A10588-S10607-cpt)
	*/
    public enum ResidentialTreatmentPracticeSetting
    {
        
        RTF(0,"RTF"),
        
        PRC(1,"PRC"),
        
        _324500000N(2,"324500000N"),
        
        SURF(3,"SURF");
        
        private int code;
        private java.lang.String xmlValue;
        
        ResidentialTreatmentPracticeSetting(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static ResidentialTreatmentPracticeSetting fromString(String str)
        {
            if (str.equals("RTF"))
                return RTF;
            if (str.equals("PRC"))
                return PRC;
            if (str.equals("324500000N"))
                return _324500000N;
            if (str.equals("SURF"))
                return SURF;
		    return null;
        }
    }

	/**
	* specDomain: S18100 (C-0-T12206-A17660-A19450-A19452-S18100-cpt)
	*/
    public enum MobileUnit
    {
        
        MOBL(0),
        
        AMB(1);
        
        private int code;
        
        MobileUnit(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MobileUnit fromString(String str)
        {
            if (str.equals("MOBL"))
                return MOBL;
            if (str.equals("AMB"))
                return AMB;
		    return null;
        }
    }

	/**
	* abstDomain: A19451 (C-0-T12206-A17660-A19451-cpt)
	*/
    public enum IncidentalServiceDeliveryLocationRoleType
    {
        
        COMM(0),
        
        PTRES(1),
        
        ACC(2),
        
        SCHOOL(3),
        
        WORK(4);
        
        private int code;
        
        IncidentalServiceDeliveryLocationRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IncidentalServiceDeliveryLocationRoleType fromString(String str)
        {
            if (str.equals("COMM"))
                return COMM;
            if (str.equals("PTRES"))
                return PTRES;
            if (str.equals("ACC"))
                return ACC;
            if (str.equals("SCHOOL"))
                return SCHOOL;
            if (str.equals("WORK"))
                return WORK;
		    return null;
        }
    }

	/**
	* specDomain: S16521 (C-0-T12206-A16515-S16521-cpt)
	*/
    public enum QualitySpecimenRoleType
    {
        
        Q(0),
        
        B(1),
        
        E(2),
        
        F(3),
        
        O(4),
        
        V(5);
        
        private int code;
        
        QualitySpecimenRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static QualitySpecimenRoleType fromString(String str)
        {
            if (str.equals("Q"))
                return Q;
            if (str.equals("B"))
                return B;
            if (str.equals("E"))
                return E;
            if (str.equals("F"))
                return F;
            if (str.equals("O"))
                return O;
            if (str.equals("V"))
                return V;
		    return null;
        }
    }

	/**
	* abstDomain: A18105 (C-0-T12206-A18105-cpt)
	*/
    public enum x_PayeeRelationshipRoleType
    {
        
        FM(0),
        
        GT(1),
        
        PT(2),
        
        PH(3);
        
        private int code;
        
        x_PayeeRelationshipRoleType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_PayeeRelationshipRoleType fromString(String str)
        {
            if (str.equals("FM"))
                return FM;
            if (str.equals("GT"))
                return GT;
            if (str.equals("PT"))
                return PT;
            if (str.equals("PH"))
                return PH;
		    return null;
        }
    }

	/**
	* specDomain: S21429 (C-0-T11603-S21429-cpt)
	*/
    public enum RoleLinkRelated
    {
        
        REL(0),
        
        IDENT(1),
        
        DIRAUTH(2),
        
        INDAUTH(3),
        
        PART(4),
        
        BACKUP(5),
        
        REPL(6);
        
        private int code;
        
        RoleLinkRelated(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleLinkRelated fromString(String str)
        {
            if (str.equals("REL"))
                return REL;
            if (str.equals("IDENT"))
                return IDENT;
            if (str.equals("DIRAUTH"))
                return DIRAUTH;
            if (str.equals("INDAUTH"))
                return INDAUTH;
            if (str.equals("PART"))
                return PART;
            if (str.equals("BACKUP"))
                return BACKUP;
            if (str.equals("REPL"))
                return REPL;
		    return null;
        }
    }

	/**
	* specDomain: S16000 (C-0-T15999-S16000-cpt)
	*/
    public enum RoleStatusNormal
    {
        
        normal(0),
        
        active(1),
        
        cancelled(2),
        
        pending(3),
        
        suspended(4),
        
        terminated(5);
        
        private int code;
        
        RoleStatusNormal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RoleStatusNormal fromString(String str)
        {
            if (str.equals("normal"))
                return normal;
            if (str.equals("active"))
                return active;
            if (str.equals("cancelled"))
                return cancelled;
            if (str.equals("pending"))
                return pending;
            if (str.equals("suspended"))
                return suspended;
            if (str.equals("terminated"))
                return terminated;
		    return null;
        }
    }

	/**
	* abstDomain: A14582 (C-0-T14581-A16931-A14582-cpt)
	*/
    public enum Chew
    {
        
        CHEW(0);
        
        private int code;
        
        Chew(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Chew fromString(String str)
        {
            if (str.equals("CHEW"))
                return CHEW;
		    return null;
        }
    }

	/**
	* abstDomain: A14584 (C-0-T14581-A16931-A14584-cpt)
	*/
    public enum Diffusion
    {
        
        EXTCORPDIF(0),
        
        HEMODIFF(1),
        
        TRNSDERMD(2);
        
        private int code;
        
        Diffusion(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Diffusion fromString(String str)
        {
            if (str.equals("EXTCORPDIF"))
                return EXTCORPDIF;
            if (str.equals("HEMODIFF"))
                return HEMODIFF;
            if (str.equals("TRNSDERMD"))
                return TRNSDERMD;
		    return null;
        }
    }

	/**
	* abstDomain: A14586 (C-0-T14581-A16931-A14586-cpt)
	*/
    public enum Dissolve
    {
        
        DISSOLVE(0),
        
        SL(1);
        
        private int code;
        
        Dissolve(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Dissolve fromString(String str)
        {
            if (str.equals("DISSOLVE"))
                return DISSOLVE;
            if (str.equals("SL"))
                return SL;
		    return null;
        }
    }

	/**
	* abstDomain: A14589 (C-0-T14581-A16931-A14589-cpt)
	*/
    public enum Douche
    {
        
        DOUCHE(0);
        
        private int code;
        
        Douche(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Douche fromString(String str)
        {
            if (str.equals("DOUCHE"))
                return DOUCHE;
		    return null;
        }
    }

	/**
	* abstDomain: A17019 (C-0-T14581-A16931-A17019-cpt)
	*/
    public enum ElectroOsmosisRoute
    {
        
        ELECTOSMOS(0);
        
        private int code;
        
        ElectroOsmosisRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ElectroOsmosisRoute fromString(String str)
        {
            if (str.equals("ELECTOSMOS"))
                return ELECTOSMOS;
		    return null;
        }
    }

	/**
	* abstDomain: A14591 (C-0-T14581-A16931-A14591-cpt)
	*/
    public enum Enema
    {
        
        ENEMA(0),
        
        RETENEMA(1);
        
        private int code;
        
        Enema(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Enema fromString(String str)
        {
            if (str.equals("ENEMA"))
                return ENEMA;
            if (str.equals("RETENEMA"))
                return RETENEMA;
		    return null;
        }
    }

	/**
	* abstDomain: A14594 (C-0-T14581-A16931-A14594-cpt)
	*/
    public enum Flush
    {
        
        IVFLUSH(0);
        
        private int code;
        
        Flush(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Flush fromString(String str)
        {
            if (str.equals("IVFLUSH"))
                return IVFLUSH;
		    return null;
        }
    }

	/**
	* abstDomain: A14598 (C-0-T14581-A16931-A14598-cpt)
	*/
    public enum Implantation
    {
        
        IDIMPLNT(0),
        
        IVITIMPLNT(1),
        
        SQIMPLNT(2);
        
        private int code;
        
        Implantation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Implantation fromString(String str)
        {
            if (str.equals("IDIMPLNT"))
                return IDIMPLNT;
            if (str.equals("IVITIMPLNT"))
                return IVITIMPLNT;
            if (str.equals("SQIMPLNT"))
                return SQIMPLNT;
		    return null;
        }
    }

	/**
	* specDomain: S14609 (C-0-T14581-A16931-A14602-S14609-cpt)
	*/
    public enum IntravenousInfusion
    {
        
        IV(0),
        
        IVC(1),
        
        IVCC(2),
        
        IVCI(3),
        
        PCA(4);
        
        private int code;
        
        IntravenousInfusion(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntravenousInfusion fromString(String str)
        {
            if (str.equals("IV"))
                return IV;
            if (str.equals("IVC"))
                return IVC;
            if (str.equals("IVCC"))
                return IVCC;
            if (str.equals("IVCI"))
                return IVCI;
            if (str.equals("PCA"))
                return PCA;
		    return null;
        }
    }

	/**
	* specDomain: S14619 (C-0-T14581-A16931-A14615-S14619-cpt)
	*/
    public enum NebulizationInhalation
    {
        
        NEB(0),
        
        NASNEB(1),
        
        ORNEB(2);
        
        private int code;
        
        NebulizationInhalation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NebulizationInhalation fromString(String str)
        {
            if (str.equals("NEB"))
                return NEB;
            if (str.equals("NASNEB"))
                return NASNEB;
            if (str.equals("ORNEB"))
                return ORNEB;
		    return null;
        }
    }

	/**
	* abstDomain: A14687 (C-0-T14581-A16931-A14687-cpt)
	*/
    public enum Insertion
    {
        
        CERVINS(0),
        
        IOSURGINS(1),
        
        IU(2),
        
        LPINS(3),
        
        PR(4),
        
        SQSURGINS(5),
        
        URETHINS(6),
        
        VAGINSI(7);
        
        private int code;
        
        Insertion(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Insertion fromString(String str)
        {
            if (str.equals("CERVINS"))
                return CERVINS;
            if (str.equals("IOSURGINS"))
                return IOSURGINS;
            if (str.equals("IU"))
                return IU;
            if (str.equals("LPINS"))
                return LPINS;
            if (str.equals("PR"))
                return PR;
            if (str.equals("SQSURGINS"))
                return SQSURGINS;
            if (str.equals("URETHINS"))
                return URETHINS;
            if (str.equals("VAGINSI"))
                return VAGINSI;
		    return null;
        }
    }

	/**
	* abstDomain: A16990 (C-0-T14581-A16931-A16990-cpt)
	*/
    public enum IontophoresisRoute
    {
        
        IONTO(0);
        
        private int code;
        
        IontophoresisRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IontophoresisRoute fromString(String str)
        {
            if (str.equals("IONTO"))
                return IONTO;
		    return null;
        }
    }

	/**
	* abstDomain: A16995 (C-0-T14581-A16931-A16995-cpt)
	*/
    public enum LavageRoute
    {
        
        IGASTLAV(0);
        
        private int code;
        
        LavageRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LavageRoute fromString(String str)
        {
            if (str.equals("IGASTLAV"))
                return IGASTLAV;
		    return null;
        }
    }

	/**
	* abstDomain: A16997 (C-0-T14581-A16931-A16997-cpt)
	*/
    public enum MucosalAbsorptionRoute
    {
        
        IDOUDMAB(0),
        
        ITRACHMAB(1),
        
        SMUCMAB(2);
        
        private int code;
        
        MucosalAbsorptionRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MucosalAbsorptionRoute fromString(String str)
        {
            if (str.equals("IDOUDMAB"))
                return IDOUDMAB;
            if (str.equals("ITRACHMAB"))
                return ITRACHMAB;
            if (str.equals("SMUCMAB"))
                return SMUCMAB;
		    return null;
        }
    }

	/**
	* abstDomain: A14728 (C-0-T14581-A16931-A14728-cpt)
	*/
    public enum Nebulization
    {
        
        ETNEB(0);
        
        private int code;
        
        Nebulization(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Nebulization fromString(String str)
        {
            if (str.equals("ETNEB"))
                return ETNEB;
		    return null;
        }
    }

	/**
	* abstDomain: A14730 (C-0-T14581-A16931-A14730-cpt)
	*/
    public enum Rinse
    {
        
        DENRINSE(0),
        
        ORRINSE(1);
        
        private int code;
        
        Rinse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Rinse fromString(String str)
        {
            if (str.equals("DENRINSE"))
                return DENRINSE;
            if (str.equals("ORRINSE"))
                return ORRINSE;
		    return null;
        }
    }

	/**
	* abstDomain: A17003 (C-0-T14581-A16931-A17003-cpt)
	*/
    public enum SuppositoryRoute
    {
        
        URETHSUP(0);
        
        private int code;
        
        SuppositoryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SuppositoryRoute fromString(String str)
        {
            if (str.equals("URETHSUP"))
                return URETHSUP;
		    return null;
        }
    }

	/**
	* abstDomain: A14736 (C-0-T14581-A16931-A14736-cpt)
	*/
    public enum Swish
    {
        
        SWISHSPIT(0),
        
        SWISHSWAL(1);
        
        private int code;
        
        Swish(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Swish fromString(String str)
        {
            if (str.equals("SWISHSPIT"))
                return SWISHSPIT;
            if (str.equals("SWISHSWAL"))
                return SWISHSWAL;
		    return null;
        }
    }

	/**
	* abstDomain: A17006 (C-0-T14581-A16931-A17006-cpt)
	*/
    public enum TopicalAbsorptionRoute
    {
        
        TTYMPTABSORP(0);
        
        private int code;
        
        TopicalAbsorptionRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TopicalAbsorptionRoute fromString(String str)
        {
            if (str.equals("TTYMPTABSORP"))
                return TTYMPTABSORP;
		    return null;
        }
    }

	/**
	* abstDomain: A14739 (C-0-T14581-A16931-A14739-cpt)
	*/
    public enum TopicalApplication
    {
        
        OCDRESTA(0),
        
        SUBCONJTA(1),
        
        TOPICAL(2),
        
        BUC(3),
        
        CERV(4),
        
        DEN(5),
        
        GIN(6),
        
        HAIR(7),
        
        ICORNTA(8),
        
        ICORONTA(9),
        
        IESOPHTA(10),
        
        IILEALTA(11),
        
        ILTOP(12),
        
        ILUMTA(13),
        
        IOTOP(14),
        
        IONTO(15),
        
        LARYNGTA(16),
        
        MUC(17),
        
        NAIL(18),
        
        NASAL(19),
        
        OPTHALTA(20),
        
        ORALTA(21),
        
        ORMUC(22),
        
        OROPHARTA(23),
        
        PERIANAL(24),
        
        PERINEAL(25),
        
        PDONTTA(26),
        
        RECTAL(27),
        
        SCALP(28),
        
        SKIN(29),
        
        DRESS(30),
        
        SWAB(31),
        
        TMUCTA(32),
        
        VAGINS(33);
        
        private int code;
        
        TopicalApplication(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TopicalApplication fromString(String str)
        {
            if (str.equals("OCDRESTA"))
                return OCDRESTA;
            if (str.equals("SUBCONJTA"))
                return SUBCONJTA;
            if (str.equals("TOPICAL"))
                return TOPICAL;
            if (str.equals("BUC"))
                return BUC;
            if (str.equals("CERV"))
                return CERV;
            if (str.equals("DEN"))
                return DEN;
            if (str.equals("GIN"))
                return GIN;
            if (str.equals("HAIR"))
                return HAIR;
            if (str.equals("ICORNTA"))
                return ICORNTA;
            if (str.equals("ICORONTA"))
                return ICORONTA;
            if (str.equals("IESOPHTA"))
                return IESOPHTA;
            if (str.equals("IILEALTA"))
                return IILEALTA;
            if (str.equals("ILTOP"))
                return ILTOP;
            if (str.equals("ILUMTA"))
                return ILUMTA;
            if (str.equals("IOTOP"))
                return IOTOP;
            if (str.equals("IONTO"))
                return IONTO;
            if (str.equals("LARYNGTA"))
                return LARYNGTA;
            if (str.equals("MUC"))
                return MUC;
            if (str.equals("NAIL"))
                return NAIL;
            if (str.equals("NASAL"))
                return NASAL;
            if (str.equals("OPTHALTA"))
                return OPTHALTA;
            if (str.equals("ORALTA"))
                return ORALTA;
            if (str.equals("ORMUC"))
                return ORMUC;
            if (str.equals("OROPHARTA"))
                return OROPHARTA;
            if (str.equals("PERIANAL"))
                return PERIANAL;
            if (str.equals("PERINEAL"))
                return PERINEAL;
            if (str.equals("PDONTTA"))
                return PDONTTA;
            if (str.equals("RECTAL"))
                return RECTAL;
            if (str.equals("SCALP"))
                return SCALP;
            if (str.equals("SKIN"))
                return SKIN;
            if (str.equals("DRESS"))
                return DRESS;
            if (str.equals("SWAB"))
                return SWAB;
            if (str.equals("TMUCTA"))
                return TMUCTA;
            if (str.equals("VAGINS"))
                return VAGINS;
		    return null;
        }
    }

	/**
	* abstDomain: A17022 (C-0-T14581-A17021-A17022-cpt)
	*/
    public enum AmnioticFluidSacRoute
    {
        
        AMNINJ(0);
        
        private int code;
        
        AmnioticFluidSacRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AmnioticFluidSacRoute fromString(String str)
        {
            if (str.equals("AMNINJ"))
                return AMNINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17024 (C-0-T14581-A17021-A17024-cpt)
	*/
    public enum BiliaryRoute
    {
        
        BILINJ(0),
        
        CHOLINJ(1);
        
        private int code;
        
        BiliaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BiliaryRoute fromString(String str)
        {
            if (str.equals("BILINJ"))
                return BILINJ;
            if (str.equals("CHOLINJ"))
                return CHOLINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17027 (C-0-T14581-A17021-A17027-cpt)
	*/
    public enum BodySurfaceRoute
    {
        
        ELECTOSMOS(0),
        
        SOAK(1),
        
        TOPICAL(2),
        
        IONTO(3),
        
        DRESS(4),
        
        SWAB(5);
        
        private int code;
        
        BodySurfaceRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BodySurfaceRoute fromString(String str)
        {
            if (str.equals("ELECTOSMOS"))
                return ELECTOSMOS;
            if (str.equals("SOAK"))
                return SOAK;
            if (str.equals("TOPICAL"))
                return TOPICAL;
            if (str.equals("IONTO"))
                return IONTO;
            if (str.equals("DRESS"))
                return DRESS;
            if (str.equals("SWAB"))
                return SWAB;
		    return null;
        }
    }

	/**
	* abstDomain: A17034 (C-0-T14581-A17021-A17034-cpt)
	*/
    public enum BuccalMucosaRoute
    {
        
        BUC(0);
        
        private int code;
        
        BuccalMucosaRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BuccalMucosaRoute fromString(String str)
        {
            if (str.equals("BUC"))
                return BUC;
		    return null;
        }
    }

	/**
	* abstDomain: A17036 (C-0-T14581-A17021-A17036-cpt)
	*/
    public enum CecostomyRoute
    {
        
        CECINSTL(0);
        
        private int code;
        
        CecostomyRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CecostomyRoute fromString(String str)
        {
            if (str.equals("CECINSTL"))
                return CECINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17038 (C-0-T14581-A17021-A17038-cpt)
	*/
    public enum CervicalRoute
    {
        
        CERVINJ(0),
        
        CERVINS(1),
        
        DENRINSE(2),
        
        CERV(3),
        
        DEN(4);
        
        private int code;
        
        CervicalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static CervicalRoute fromString(String str)
        {
            if (str.equals("CERVINJ"))
                return CERVINJ;
            if (str.equals("CERVINS"))
                return CERVINS;
            if (str.equals("DENRINSE"))
                return DENRINSE;
            if (str.equals("CERV"))
                return CERV;
            if (str.equals("DEN"))
                return DEN;
		    return null;
        }
    }

	/**
	* abstDomain: A17045 (C-0-T14581-A17021-A17045-cpt)
	*/
    public enum EndocervicalRoute
    {
        
        AMNINJ(0),
        
        BILINJ(1);
        
        private int code;
        
        EndocervicalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EndocervicalRoute fromString(String str)
        {
            if (str.equals("AMNINJ"))
                return AMNINJ;
            if (str.equals("BILINJ"))
                return BILINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17048 (C-0-T14581-A17021-A17048-cpt)
	*/
    public enum EnteralRoute
    {
        
        ENTINSTL(0),
        
        EFT(1);
        
        private int code;
        
        EnteralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EnteralRoute fromString(String str)
        {
            if (str.equals("ENTINSTL"))
                return ENTINSTL;
            if (str.equals("EFT"))
                return EFT;
		    return null;
        }
    }

	/**
	* abstDomain: A17051 (C-0-T14581-A17021-A17051-cpt)
	*/
    public enum EpiduralRoute
    {
        
        EPI(0),
        
        EPIDURINJ(1),
        
        EPIINJ(2),
        
        EPINJSP(3);
        
        private int code;
        
        EpiduralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static EpiduralRoute fromString(String str)
        {
            if (str.equals("EPI"))
                return EPI;
            if (str.equals("EPIDURINJ"))
                return EPIDURINJ;
            if (str.equals("EPIINJ"))
                return EPIINJ;
            if (str.equals("EPINJSP"))
                return EPINJSP;
		    return null;
        }
    }

	/**
	* abstDomain: A17059 (C-0-T14581-A17021-A17059-cpt)
	*/
    public enum ExtraAmnioticRoute
    {
        
        EXTRAMNINJ(0);
        
        private int code;
        
        ExtraAmnioticRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExtraAmnioticRoute fromString(String str)
        {
            if (str.equals("EXTRAMNINJ"))
                return EXTRAMNINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17056 (C-0-T14581-A17021-A17056-cpt)
	*/
    public enum ExtracorporealCirculationRoute
    {
        
        EXTCORPDIF(0),
        
        EXTCORPINJ(1);
        
        private int code;
        
        ExtracorporealCirculationRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ExtracorporealCirculationRoute fromString(String str)
        {
            if (str.equals("EXTCORPDIF"))
                return EXTCORPDIF;
            if (str.equals("EXTCORPINJ"))
                return EXTCORPINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17061 (C-0-T14581-A17021-A17061-cpt)
	*/
    public enum GastricRoute
    {
        
        GBINJ(0),
        
        GT(1),
        
        NGT(2),
        
        OGT(3);
        
        private int code;
        
        GastricRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GastricRoute fromString(String str)
        {
            if (str.equals("GBINJ"))
                return GBINJ;
            if (str.equals("GT"))
                return GT;
            if (str.equals("NGT"))
                return NGT;
            if (str.equals("OGT"))
                return OGT;
		    return null;
        }
    }

	/**
	* abstDomain: A17066 (C-0-T14581-A17021-A17066-cpt)
	*/
    public enum GenitourinaryRoute
    {
        
        GUIRR(0);
        
        private int code;
        
        GenitourinaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GenitourinaryRoute fromString(String str)
        {
            if (str.equals("GUIRR"))
                return GUIRR;
		    return null;
        }
    }

	/**
	* abstDomain: A17068 (C-0-T14581-A17021-A17068-cpt)
	*/
    public enum GingivalRoute
    {
        
        GINGINJ(0),
        
        GIN(1);
        
        private int code;
        
        GingivalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static GingivalRoute fromString(String str)
        {
            if (str.equals("GINGINJ"))
                return GINGINJ;
            if (str.equals("GIN"))
                return GIN;
		    return null;
        }
    }

	/**
	* abstDomain: A17071 (C-0-T14581-A17021-A17071-cpt)
	*/
    public enum HairRoute
    {
        
        SHAMPOO(0),
        
        HAIR(1);
        
        private int code;
        
        HairRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HairRoute fromString(String str)
        {
            if (str.equals("SHAMPOO"))
                return SHAMPOO;
            if (str.equals("HAIR"))
                return HAIR;
		    return null;
        }
    }

	/**
	* abstDomain: A17074 (C-0-T14581-A17021-A17074-cpt)
	*/
    public enum InterameningealRoute
    {
        
        INTERMENINJ(0);
        
        private int code;
        
        InterameningealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InterameningealRoute fromString(String str)
        {
            if (str.equals("INTERMENINJ"))
                return INTERMENINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17076 (C-0-T14581-A17021-A17076-cpt)
	*/
    public enum InterstitialRoute
    {
        
        INTERSTITINJ(0);
        
        private int code;
        
        InterstitialRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static InterstitialRoute fromString(String str)
        {
            if (str.equals("INTERSTITINJ"))
                return INTERSTITINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17078 (C-0-T14581-A17021-A17078-cpt)
	*/
    public enum IntraabdominalRoute
    {
        
        IABDINJ(0);
        
        private int code;
        
        IntraabdominalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraabdominalRoute fromString(String str)
        {
            if (str.equals("IABDINJ"))
                return IABDINJ;
		    return null;
        }
    }

	/**
	* specDomain: S14639 (C-0-T14581-A17021-A17080-S14639-cpt)
	*/
    public enum IntraarterialInjection
    {
        
        IAINJ(0),
        
        IAINJP(1),
        
        IAINJSP(2);
        
        private int code;
        
        IntraarterialInjection(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraarterialInjection fromString(String str)
        {
            if (str.equals("IAINJ"))
                return IAINJ;
            if (str.equals("IAINJP"))
                return IAINJP;
            if (str.equals("IAINJSP"))
                return IAINJSP;
		    return null;
        }
    }

	/**
	* abstDomain: A17085 (C-0-T14581-A17021-A17085-cpt)
	*/
    public enum IntraarticularRoute
    {
        
        IARTINJ(0);
        
        private int code;
        
        IntraarticularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraarticularRoute fromString(String str)
        {
            if (str.equals("IARTINJ"))
                return IARTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17087 (C-0-T14581-A17021-A17087-cpt)
	*/
    public enum IntrabronchialRoute
    {
        
        IBRONCHINSTIL(0);
        
        private int code;
        
        IntrabronchialRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrabronchialRoute fromString(String str)
        {
            if (str.equals("IBRONCHINSTIL"))
                return IBRONCHINSTIL;
		    return null;
        }
    }

	/**
	* abstDomain: A17089 (C-0-T14581-A17021-A17089-cpt)
	*/
    public enum IntrabursalRoute
    {
        
        IBURSINJ(0);
        
        private int code;
        
        IntrabursalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrabursalRoute fromString(String str)
        {
            if (str.equals("IBURSINJ"))
                return IBURSINJ;
		    return null;
        }
    }

	/**
	* specDomain: S14644 (C-0-T14581-A17021-A17091-S14644-cpt)
	*/
    public enum IntracardiacInjection
    {
        
        ICARDINJ(0),
        
        ICARINJP(1),
        
        ICARDINJRP(2),
        
        ICARDINJSP(3);
        
        private int code;
        
        IntracardiacInjection(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracardiacInjection fromString(String str)
        {
            if (str.equals("ICARDINJ"))
                return ICARDINJ;
            if (str.equals("ICARINJP"))
                return ICARINJP;
            if (str.equals("ICARDINJRP"))
                return ICARDINJRP;
            if (str.equals("ICARDINJSP"))
                return ICARDINJSP;
		    return null;
        }
    }

	/**
	* abstDomain: A17097 (C-0-T14581-A17021-A17097-cpt)
	*/
    public enum IntracartilaginousRoute
    {
        
        ICARTINJ(0);
        
        private int code;
        
        IntracartilaginousRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracartilaginousRoute fromString(String str)
        {
            if (str.equals("ICARTINJ"))
                return ICARTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17099 (C-0-T14581-A17021-A17099-cpt)
	*/
    public enum IntracaudalRoute
    {
        
        ICAUDINJ(0);
        
        private int code;
        
        IntracaudalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracaudalRoute fromString(String str)
        {
            if (str.equals("ICAUDINJ"))
                return ICAUDINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17101 (C-0-T14581-A17021-A17101-cpt)
	*/
    public enum IntracavernosalRoute
    {
        
        ICAVINJ(0);
        
        private int code;
        
        IntracavernosalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracavernosalRoute fromString(String str)
        {
            if (str.equals("ICAVINJ"))
                return ICAVINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17103 (C-0-T14581-A17021-A17103-cpt)
	*/
    public enum IntracavitaryRoute
    {
        
        ICAVITINJ(0);
        
        private int code;
        
        IntracavitaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracavitaryRoute fromString(String str)
        {
            if (str.equals("ICAVITINJ"))
                return ICAVITINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17105 (C-0-T14581-A17021-A17105-cpt)
	*/
    public enum IntracerebralRoute
    {
        
        ICEREBINJ(0);
        
        private int code;
        
        IntracerebralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracerebralRoute fromString(String str)
        {
            if (str.equals("ICEREBINJ"))
                return ICEREBINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17107 (C-0-T14581-A17021-A17107-cpt)
	*/
    public enum IntracervicalRoute
    {
        
        IUINJC(0);
        
        private int code;
        
        IntracervicalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracervicalRoute fromString(String str)
        {
            if (str.equals("IUINJC"))
                return IUINJC;
		    return null;
        }
    }

	/**
	* abstDomain: A17109 (C-0-T14581-A17021-A17109-cpt)
	*/
    public enum IntracisternalRoute
    {
        
        ICISTERNINJ(0);
        
        private int code;
        
        IntracisternalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracisternalRoute fromString(String str)
        {
            if (str.equals("ICISTERNINJ"))
                return ICISTERNINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17111 (C-0-T14581-A17021-A17111-cpt)
	*/
    public enum IntracornealRoute
    {
        
        ICORNTA(0);
        
        private int code;
        
        IntracornealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracornealRoute fromString(String str)
        {
            if (str.equals("ICORNTA"))
                return ICORNTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17113 (C-0-T14581-A17021-A17113-cpt)
	*/
    public enum IntracoronalRoute
    {
        
        ICORONTA(0);
        
        private int code;
        
        IntracoronalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracoronalRoute fromString(String str)
        {
            if (str.equals("ICORONTA"))
                return ICORONTA;
		    return null;
        }
    }

	/**
	* specDomain: S14650 (C-0-T14581-A17021-A17115-S14650-cpt)
	*/
    public enum IntracoronaryInjection
    {
        
        ICORONINJ(0),
        
        ICORONINJP(1);
        
        private int code;
        
        IntracoronaryInjection(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracoronaryInjection fromString(String str)
        {
            if (str.equals("ICORONINJ"))
                return ICORONINJ;
            if (str.equals("ICORONINJP"))
                return ICORONINJP;
		    return null;
        }
    }

	/**
	* abstDomain: A17119 (C-0-T14581-A17021-A17119-cpt)
	*/
    public enum IntracorpusCavernosumRoute
    {
        
        ICORPCAVINJ(0);
        
        private int code;
        
        IntracorpusCavernosumRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntracorpusCavernosumRoute fromString(String str)
        {
            if (str.equals("ICORPCAVINJ"))
                return ICORPCAVINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17123 (C-0-T14581-A17021-A17123-cpt)
	*/
    public enum IntradermalRoute
    {
        
        IDIMPLNT(0),
        
        IDINJ(1);
        
        private int code;
        
        IntradermalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntradermalRoute fromString(String str)
        {
            if (str.equals("IDIMPLNT"))
                return IDIMPLNT;
            if (str.equals("IDINJ"))
                return IDINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17126 (C-0-T14581-A17021-A17126-cpt)
	*/
    public enum IntradiscalRoute
    {
        
        IDISCINJ(0);
        
        private int code;
        
        IntradiscalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntradiscalRoute fromString(String str)
        {
            if (str.equals("IDISCINJ"))
                return IDISCINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17128 (C-0-T14581-A17021-A17128-cpt)
	*/
    public enum IntraductalRoute
    {
        
        IDUCTINJ(0);
        
        private int code;
        
        IntraductalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraductalRoute fromString(String str)
        {
            if (str.equals("IDUCTINJ"))
                return IDUCTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17130 (C-0-T14581-A17021-A17130-cpt)
	*/
    public enum IntraduodenalRoute
    {
        
        IDUODINSTIL(0),
        
        IDOUDMAB(1);
        
        private int code;
        
        IntraduodenalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraduodenalRoute fromString(String str)
        {
            if (str.equals("IDUODINSTIL"))
                return IDUODINSTIL;
            if (str.equals("IDOUDMAB"))
                return IDOUDMAB;
		    return null;
        }
    }

	/**
	* abstDomain: A17133 (C-0-T14581-A17021-A17133-cpt)
	*/
    public enum IntraduralRoute
    {
        
        IDURINJ(0);
        
        private int code;
        
        IntraduralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraduralRoute fromString(String str)
        {
            if (str.equals("IDURINJ"))
                return IDURINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17135 (C-0-T14581-A17021-A17135-cpt)
	*/
    public enum IntraepidermalRoute
    {
        
        IEPIDINJ(0);
        
        private int code;
        
        IntraepidermalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraepidermalRoute fromString(String str)
        {
            if (str.equals("IEPIDINJ"))
                return IEPIDINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17137 (C-0-T14581-A17021-A17137-cpt)
	*/
    public enum IntraepithelialRoute
    {
        
        IEPITHINJ(0);
        
        private int code;
        
        IntraepithelialRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraepithelialRoute fromString(String str)
        {
            if (str.equals("IEPITHINJ"))
                return IEPITHINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17139 (C-0-T14581-A17021-A17139-cpt)
	*/
    public enum IntraesophagealRoute
    {
        
        IESOPHINSTIL(0),
        
        IESOPHTA(1);
        
        private int code;
        
        IntraesophagealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraesophagealRoute fromString(String str)
        {
            if (str.equals("IESOPHINSTIL"))
                return IESOPHINSTIL;
            if (str.equals("IESOPHTA"))
                return IESOPHTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17142 (C-0-T14581-A17021-A17142-cpt)
	*/
    public enum IntragastricRoute
    {
        
        IGASTINSTIL(0),
        
        IGASTIRR(1),
        
        IGASTLAV(2);
        
        private int code;
        
        IntragastricRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntragastricRoute fromString(String str)
        {
            if (str.equals("IGASTINSTIL"))
                return IGASTINSTIL;
            if (str.equals("IGASTIRR"))
                return IGASTIRR;
            if (str.equals("IGASTLAV"))
                return IGASTLAV;
		    return null;
        }
    }

	/**
	* abstDomain: A17146 (C-0-T14581-A17021-A17146-cpt)
	*/
    public enum IntrailealRoute
    {
        
        IILEALINJ(0),
        
        IILEALTA(1);
        
        private int code;
        
        IntrailealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrailealRoute fromString(String str)
        {
            if (str.equals("IILEALINJ"))
                return IILEALINJ;
            if (str.equals("IILEALTA"))
                return IILEALTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17149 (C-0-T14581-A17021-A17149-cpt)
	*/
    public enum IntralesionalRoute
    {
        
        ILESINJ(0),
        
        ILESIRR(1),
        
        ILTOP(2);
        
        private int code;
        
        IntralesionalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntralesionalRoute fromString(String str)
        {
            if (str.equals("ILESINJ"))
                return ILESINJ;
            if (str.equals("ILESIRR"))
                return ILESIRR;
            if (str.equals("ILTOP"))
                return ILTOP;
		    return null;
        }
    }

	/**
	* abstDomain: A17153 (C-0-T14581-A17021-A17153-cpt)
	*/
    public enum IntraluminalRoute
    {
        
        ILUMINJ(0),
        
        ILUMTA(1);
        
        private int code;
        
        IntraluminalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraluminalRoute fromString(String str)
        {
            if (str.equals("ILUMINJ"))
                return ILUMINJ;
            if (str.equals("ILUMTA"))
                return ILUMTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17156 (C-0-T14581-A17021-A17156-cpt)
	*/
    public enum IntralymphaticRoute
    {
        
        ILYMPJINJ(0);
        
        private int code;
        
        IntralymphaticRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntralymphaticRoute fromString(String str)
        {
            if (str.equals("ILYMPJINJ"))
                return ILYMPJINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17158 (C-0-T14581-A17021-A17158-cpt)
	*/
    public enum IntramedullaryRoute
    {
        
        IMEDULINJ(0);
        
        private int code;
        
        IntramedullaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntramedullaryRoute fromString(String str)
        {
            if (str.equals("IMEDULINJ"))
                return IMEDULINJ;
		    return null;
        }
    }

	/**
	* specDomain: S14657 (C-0-T14581-A17021-A17160-S14657-cpt)
	*/
    public enum IntramuscularInjection
    {
        
        IM(0),
        
        IMD(1),
        
        IMZ(2);
        
        private int code;
        
        IntramuscularInjection(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntramuscularInjection fromString(String str)
        {
            if (str.equals("IM"))
                return IM;
            if (str.equals("IMD"))
                return IMD;
            if (str.equals("IMZ"))
                return IMZ;
		    return null;
        }
    }

	/**
	* abstDomain: A17164 (C-0-T14581-A17021-A17164-cpt)
	*/
    public enum IntraocularRoute
    {
        
        IOINJ(0),
        
        IOSURGINS(1),
        
        IOINSTL(2),
        
        IOIRR(3),
        
        IOTOP(4);
        
        private int code;
        
        IntraocularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraocularRoute fromString(String str)
        {
            if (str.equals("IOINJ"))
                return IOINJ;
            if (str.equals("IOSURGINS"))
                return IOSURGINS;
            if (str.equals("IOINSTL"))
                return IOINSTL;
            if (str.equals("IOIRR"))
                return IOIRR;
            if (str.equals("IOTOP"))
                return IOTOP;
		    return null;
        }
    }

	/**
	* abstDomain: A17170 (C-0-T14581-A17021-A17170-cpt)
	*/
    public enum IntraosseousRoute
    {
        
        IOSSC(0),
        
        IOSSINJ(1);
        
        private int code;
        
        IntraosseousRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraosseousRoute fromString(String str)
        {
            if (str.equals("IOSSC"))
                return IOSSC;
            if (str.equals("IOSSINJ"))
                return IOSSINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17173 (C-0-T14581-A17021-A17173-cpt)
	*/
    public enum IntraovarianRoute
    {
        
        IOVARINJ(0);
        
        private int code;
        
        IntraovarianRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraovarianRoute fromString(String str)
        {
            if (str.equals("IOVARINJ"))
                return IOVARINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17175 (C-0-T14581-A17021-A17175-cpt)
	*/
    public enum IntrapericardialRoute
    {
        
        IPCARDINJ(0);
        
        private int code;
        
        IntrapericardialRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrapericardialRoute fromString(String str)
        {
            if (str.equals("IPCARDINJ"))
                return IPCARDINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17177 (C-0-T14581-A17021-A17177-cpt)
	*/
    public enum IntraperitonealRoute
    {
        
        IPERINJ(0),
        
        PDPINJ(1),
        
        CAPDINSTL(2),
        
        PDPINSTL(3);
        
        private int code;
        
        IntraperitonealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraperitonealRoute fromString(String str)
        {
            if (str.equals("IPERINJ"))
                return IPERINJ;
            if (str.equals("PDPINJ"))
                return PDPINJ;
            if (str.equals("CAPDINSTL"))
                return CAPDINSTL;
            if (str.equals("PDPINSTL"))
                return PDPINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17182 (C-0-T14581-A17021-A17182-cpt)
	*/
    public enum IntrapleuralRoute
    {
        
        IPLRINJ(0),
        
        CTINSTL(1);
        
        private int code;
        
        IntrapleuralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrapleuralRoute fromString(String str)
        {
            if (str.equals("IPLRINJ"))
                return IPLRINJ;
            if (str.equals("CTINSTL"))
                return CTINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17185 (C-0-T14581-A17021-A17185-cpt)
	*/
    public enum IntraprostaticRoute
    {
        
        IPROSTINJ(0);
        
        private int code;
        
        IntraprostaticRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraprostaticRoute fromString(String str)
        {
            if (str.equals("IPROSTINJ"))
                return IPROSTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17187 (C-0-T14581-A17021-A17187-cpt)
	*/
    public enum IntrapulmonaryRoute
    {
        
        EXTCORPINJ(0),
        
        IPINJ(1);
        
        private int code;
        
        IntrapulmonaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrapulmonaryRoute fromString(String str)
        {
            if (str.equals("EXTCORPINJ"))
                return EXTCORPINJ;
            if (str.equals("IPINJ"))
                return IPINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17190 (C-0-T14581-A17021-A17190-cpt)
	*/
    public enum IntrasinalRoute
    {
        
        ISININSTIL(0);
        
        private int code;
        
        IntrasinalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrasinalRoute fromString(String str)
        {
            if (str.equals("ISININSTIL"))
                return ISININSTIL;
		    return null;
        }
    }

	/**
	* abstDomain: A17192 (C-0-T14581-A17021-A17192-cpt)
	*/
    public enum IntraspinalRoute
    {
        
        ISINJ(0);
        
        private int code;
        
        IntraspinalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraspinalRoute fromString(String str)
        {
            if (str.equals("ISINJ"))
                return ISINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17194 (C-0-T14581-A17021-A17194-cpt)
	*/
    public enum IntrasternalRoute
    {
        
        ISTERINJ(0);
        
        private int code;
        
        IntrasternalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrasternalRoute fromString(String str)
        {
            if (str.equals("ISTERINJ"))
                return ISTERINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17196 (C-0-T14581-A17021-A17196-cpt)
	*/
    public enum IntrasynovialRoute
    {
        
        ISYNINJ(0);
        
        private int code;
        
        IntrasynovialRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrasynovialRoute fromString(String str)
        {
            if (str.equals("ISYNINJ"))
                return ISYNINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17121 (C-0-T14581-A17021-A17121-cpt)
	*/
    public enum IntratendinousRoute
    {
        
        ITENDINJ(0);
        
        private int code;
        
        IntratendinousRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratendinousRoute fromString(String str)
        {
            if (str.equals("ITENDINJ"))
                return ITENDINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17198 (C-0-T14581-A17021-A17198-cpt)
	*/
    public enum IntratesticularRoute
    {
        
        ITESTINJ(0);
        
        private int code;
        
        IntratesticularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratesticularRoute fromString(String str)
        {
            if (str.equals("ITESTINJ"))
                return ITESTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17200 (C-0-T14581-A17021-A17200-cpt)
	*/
    public enum IntrathecalRoute
    {
        
        IT(0),
        
        ITINJ(1);
        
        private int code;
        
        IntrathecalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrathecalRoute fromString(String str)
        {
            if (str.equals("IT"))
                return IT;
            if (str.equals("ITINJ"))
                return ITINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17203 (C-0-T14581-A17021-A17203-cpt)
	*/
    public enum IntrathoracicRoute
    {
        
        ITHORINJ(0);
        
        private int code;
        
        IntrathoracicRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrathoracicRoute fromString(String str)
        {
            if (str.equals("ITHORINJ"))
                return ITHORINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17205 (C-0-T14581-A17021-A17205-cpt)
	*/
    public enum IntratrachealRoute
    {
        
        ITRACHINSTIL(0),
        
        ITRACHMAB(1);
        
        private int code;
        
        IntratrachealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratrachealRoute fromString(String str)
        {
            if (str.equals("ITRACHINSTIL"))
                return ITRACHINSTIL;
            if (str.equals("ITRACHMAB"))
                return ITRACHMAB;
		    return null;
        }
    }

	/**
	* abstDomain: A17208 (C-0-T14581-A17021-A17208-cpt)
	*/
    public enum IntratubularRoute
    {
        
        ITUBINJ(0);
        
        private int code;
        
        IntratubularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratubularRoute fromString(String str)
        {
            if (str.equals("ITUBINJ"))
                return ITUBINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17210 (C-0-T14581-A17021-A17210-cpt)
	*/
    public enum IntratumorRoute
    {
        
        ITUMINJ(0);
        
        private int code;
        
        IntratumorRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratumorRoute fromString(String str)
        {
            if (str.equals("ITUMINJ"))
                return ITUMINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17212 (C-0-T14581-A17021-A17212-cpt)
	*/
    public enum IntratympanicRoute
    {
        
        ITYMPINJ(0);
        
        private int code;
        
        IntratympanicRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntratympanicRoute fromString(String str)
        {
            if (str.equals("ITYMPINJ"))
                return ITYMPINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17214 (C-0-T14581-A17021-A17214-cpt)
	*/
    public enum IntrauterineRoute
    {
        
        IURETINJ(0),
        
        IUINJ(1),
        
        IU(2),
        
        IUINSTL(3);
        
        private int code;
        
        IntrauterineRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntrauterineRoute fromString(String str)
        {
            if (str.equals("IURETINJ"))
                return IURETINJ;
            if (str.equals("IUINJ"))
                return IUINJ;
            if (str.equals("IU"))
                return IU;
            if (str.equals("IUINSTL"))
                return IUINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17219 (C-0-T14581-A17021-A17219-cpt)
	*/
    public enum IntravascularRoute
    {
        
        HEMODIFF(0),
        
        IVASCINFUS(1),
        
        HEMOPORT(2),
        
        IVASCINJ(3);
        
        private int code;
        
        IntravascularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntravascularRoute fromString(String str)
        {
            if (str.equals("HEMODIFF"))
                return HEMODIFF;
            if (str.equals("IVASCINFUS"))
                return IVASCINFUS;
            if (str.equals("HEMOPORT"))
                return HEMOPORT;
            if (str.equals("IVASCINJ"))
                return IVASCINJ;
		    return null;
        }
    }

	/**
	* specDomain: S14670 (C-0-T14581-A17021-A17224-S14670-cpt)
	*/
    public enum IntravenousInjection
    {
        
        IVINJ(0),
        
        IVINJBOL(1),
        
        IVPUSH(2),
        
        IVRPUSH(3),
        
        IVSPUSH(4);
        
        private int code;
        
        IntravenousInjection(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntravenousInjection fromString(String str)
        {
            if (str.equals("IVINJ"))
                return IVINJ;
            if (str.equals("IVINJBOL"))
                return IVINJBOL;
            if (str.equals("IVPUSH"))
                return IVPUSH;
            if (str.equals("IVRPUSH"))
                return IVRPUSH;
            if (str.equals("IVSPUSH"))
                return IVSPUSH;
		    return null;
        }
    }

	/**
	* abstDomain: A17235 (C-0-T14581-A17021-A17235-cpt)
	*/
    public enum IntraventricularRoute
    {
        
        IVENTINJ(0);
        
        private int code;
        
        IntraventricularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntraventricularRoute fromString(String str)
        {
            if (str.equals("IVENTINJ"))
                return IVENTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17237 (C-0-T14581-A17021-A17237-cpt)
	*/
    public enum IntravesicleRoute
    {
        
        IVESINJ(0);
        
        private int code;
        
        IntravesicleRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntravesicleRoute fromString(String str)
        {
            if (str.equals("IVESINJ"))
                return IVESINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17239 (C-0-T14581-A17021-A17239-cpt)
	*/
    public enum IntravitrealRoute
    {
        
        IVITINJ(0);
        
        private int code;
        
        IntravitrealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static IntravitrealRoute fromString(String str)
        {
            if (str.equals("IVITINJ"))
                return IVITINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17241 (C-0-T14581-A17021-A17241-cpt)
	*/
    public enum JejunumRoute
    {
        
        GJT(0),
        
        JJTINSTL(1),
        
        OJJ(2);
        
        private int code;
        
        JejunumRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static JejunumRoute fromString(String str)
        {
            if (str.equals("GJT"))
                return GJT;
            if (str.equals("JJTINSTL"))
                return JJTINSTL;
            if (str.equals("OJJ"))
                return OJJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17245 (C-0-T14581-A17021-A17245-cpt)
	*/
    public enum LacrimalPunctaRoute
    {
        
        LPINS(0);
        
        private int code;
        
        LacrimalPunctaRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LacrimalPunctaRoute fromString(String str)
        {
            if (str.equals("LPINS"))
                return LPINS;
		    return null;
        }
    }

	/**
	* abstDomain: A17247 (C-0-T14581-A17021-A17247-cpt)
	*/
    public enum LaryngealRoute
    {
        
        LARYNGINSTIL(0),
        
        LARYNGTA(1);
        
        private int code;
        
        LaryngealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LaryngealRoute fromString(String str)
        {
            if (str.equals("LARYNGINSTIL"))
                return LARYNGINSTIL;
            if (str.equals("LARYNGTA"))
                return LARYNGTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17250 (C-0-T14581-A17021-A17250-cpt)
	*/
    public enum LingualRoute
    {
        
        TRNSLING(0);
        
        private int code;
        
        LingualRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static LingualRoute fromString(String str)
        {
            if (str.equals("TRNSLING"))
                return TRNSLING;
		    return null;
        }
    }

	/**
	* abstDomain: A17252 (C-0-T14581-A17021-A17252-cpt)
	*/
    public enum MucousMembraneRoute
    {
        
        MUC(0);
        
        private int code;
        
        MucousMembraneRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static MucousMembraneRoute fromString(String str)
        {
            if (str.equals("MUC"))
                return MUC;
		    return null;
        }
    }

	/**
	* abstDomain: A17254 (C-0-T14581-A17021-A17254-cpt)
	*/
    public enum NailRoute
    {
        
        NAIL(0);
        
        private int code;
        
        NailRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NailRoute fromString(String str)
        {
            if (str.equals("NAIL"))
                return NAIL;
		    return null;
        }
    }

	/**
	* specDomain: S14617 (C-0-T14581-A17021-A17256-S14617-cpt)
	*/
    public enum NasalInhalation
    {
        
        NASINHL(0),
        
        NASINHLC(1),
        
        NP(2);
        
        private int code;
        
        NasalInhalation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static NasalInhalation fromString(String str)
        {
            if (str.equals("NASINHL"))
                return NASINHL;
            if (str.equals("NASINHLC"))
                return NASINHLC;
            if (str.equals("NP"))
                return NP;
		    return null;
        }
    }

	/**
	* abstDomain: A17264 (C-0-T14581-A17021-A17264-cpt)
	*/
    public enum OphthalmicRoute
    {
        
        OPTHALTA(0);
        
        private int code;
        
        OphthalmicRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OphthalmicRoute fromString(String str)
        {
            if (str.equals("OPTHALTA"))
                return OPTHALTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17276 (C-0-T14581-A17021-A17276-cpt)
	*/
    public enum OromucosalRoute
    {
        
        GARGLE(0),
        
        SUCK(1),
        
        SWISHSPIT(2),
        
        SWISHSWAL(3),
        
        ORMUC(4);
        
        private int code;
        
        OromucosalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OromucosalRoute fromString(String str)
        {
            if (str.equals("GARGLE"))
                return GARGLE;
            if (str.equals("SUCK"))
                return SUCK;
            if (str.equals("SWISHSPIT"))
                return SWISHSPIT;
            if (str.equals("SWISHSWAL"))
                return SWISHSWAL;
            if (str.equals("ORMUC"))
                return ORMUC;
		    return null;
        }
    }

	/**
	* abstDomain: A17282 (C-0-T14581-A17021-A17282-cpt)
	*/
    public enum OropharyngealRoute
    {
        
        OROPHARTA(0);
        
        private int code;
        
        OropharyngealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OropharyngealRoute fromString(String str)
        {
            if (str.equals("OROPHARTA"))
                return OROPHARTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17284 (C-0-T14581-A17021-A17284-cpt)
	*/
    public enum OticRoute
    {
        
        OT(0);
        
        private int code;
        
        OticRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OticRoute fromString(String str)
        {
            if (str.equals("OT"))
                return OT;
		    return null;
        }
    }

	/**
	* abstDomain: A17286 (C-0-T14581-A17021-A17286-cpt)
	*/
    public enum ParanasalSinusesRoute
    {
        
        PNSINJ(0),
        
        PNSINSTL(1);
        
        private int code;
        
        ParanasalSinusesRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParanasalSinusesRoute fromString(String str)
        {
            if (str.equals("PNSINJ"))
                return PNSINJ;
            if (str.equals("PNSINSTL"))
                return PNSINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17289 (C-0-T14581-A17021-A17289-cpt)
	*/
    public enum ParenteralRoute
    {
        
        PARENTINJ(0);
        
        private int code;
        
        ParenteralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ParenteralRoute fromString(String str)
        {
            if (str.equals("PARENTINJ"))
                return PARENTINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17291 (C-0-T14581-A17021-A17291-cpt)
	*/
    public enum PerianalRoute
    {
        
        PERIANAL(0);
        
        private int code;
        
        PerianalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PerianalRoute fromString(String str)
        {
            if (str.equals("PERIANAL"))
                return PERIANAL;
		    return null;
        }
    }

	/**
	* abstDomain: A17293 (C-0-T14581-A17021-A17293-cpt)
	*/
    public enum PeriarticularRoute
    {
        
        PAINJ(0);
        
        private int code;
        
        PeriarticularRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PeriarticularRoute fromString(String str)
        {
            if (str.equals("PAINJ"))
                return PAINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17298 (C-0-T14581-A17021-A17298-cpt)
	*/
    public enum PeriduralRoute
    {
        
        PDURINJ(0);
        
        private int code;
        
        PeriduralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PeriduralRoute fromString(String str)
        {
            if (str.equals("PDURINJ"))
                return PDURINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17300 (C-0-T14581-A17021-A17300-cpt)
	*/
    public enum PerinealRoute
    {
        
        PERINEAL(0);
        
        private int code;
        
        PerinealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PerinealRoute fromString(String str)
        {
            if (str.equals("PERINEAL"))
                return PERINEAL;
		    return null;
        }
    }

	/**
	* abstDomain: A17302 (C-0-T14581-A17021-A17302-cpt)
	*/
    public enum PerineuralRoute
    {
        
        PNINJ(0);
        
        private int code;
        
        PerineuralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PerineuralRoute fromString(String str)
        {
            if (str.equals("PNINJ"))
                return PNINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17295 (C-0-T14581-A17021-A17295-cpt)
	*/
    public enum PeriodontalRoute
    {
        
        PDONTINJ(0),
        
        PDONTTA(1);
        
        private int code;
        
        PeriodontalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PeriodontalRoute fromString(String str)
        {
            if (str.equals("PDONTINJ"))
                return PDONTINJ;
            if (str.equals("PDONTTA"))
                return PDONTTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17304 (C-0-T14581-A17021-A17304-cpt)
	*/
    public enum PulmonaryRoute
    {
        
        IPPB(0),
        
        VENT(1),
        
        VENTMASK(2),
        
        ETINSTL(3),
        
        NTT(4),
        
        ETNEB(5);
        
        private int code;
        
        PulmonaryRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static PulmonaryRoute fromString(String str)
        {
            if (str.equals("IPPB"))
                return IPPB;
            if (str.equals("VENT"))
                return VENT;
            if (str.equals("VENTMASK"))
                return VENTMASK;
            if (str.equals("ETINSTL"))
                return ETINSTL;
            if (str.equals("NTT"))
                return NTT;
            if (str.equals("ETNEB"))
                return ETNEB;
		    return null;
        }
    }

	/**
	* specDomain: S14715 (C-0-T14581-A17021-A17311-S14715-cpt)
	*/
    public enum RectalInstillation
    {
        
        RECINSTL(0),
        
        RECTINSTL(1);
        
        private int code;
        
        RectalInstillation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RectalInstillation fromString(String str)
        {
            if (str.equals("RECINSTL"))
                return RECINSTL;
            if (str.equals("RECTINSTL"))
                return RECTINSTL;
		    return null;
        }
    }

	/**
	* specDomain: S14622 (C-0-T14581-A17021-A17319-S14622-cpt)
	*/
    public enum OralInhalation
    {
        
        ORINHL(0),
        
        ORIFINHL(1),
        
        REBREATH(2);
        
        private int code;
        
        OralInhalation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OralInhalation fromString(String str)
        {
            if (str.equals("ORINHL"))
                return ORINHL;
            if (str.equals("ORIFINHL"))
                return ORIFINHL;
            if (str.equals("REBREATH"))
                return REBREATH;
		    return null;
        }
    }

	/**
	* abstDomain: A17321 (C-0-T14581-A17021-A17321-cpt)
	*/
    public enum RetrobulbarRoute
    {
        
        RBINJ(0);
        
        private int code;
        
        RetrobulbarRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RetrobulbarRoute fromString(String str)
        {
            if (str.equals("RBINJ"))
                return RBINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17323 (C-0-T14581-A17021-A17323-cpt)
	*/
    public enum ScalpRoute
    {
        
        SCALP(0);
        
        private int code;
        
        ScalpRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ScalpRoute fromString(String str)
        {
            if (str.equals("SCALP"))
                return SCALP;
		    return null;
        }
    }

	/**
	* abstDomain: A17325 (C-0-T14581-A17021-A17325-cpt)
	*/
    public enum SinusUnspecifiedRoute
    {
        
        ENDOSININJ(0),
        
        SININSTIL(1);
        
        private int code;
        
        SinusUnspecifiedRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SinusUnspecifiedRoute fromString(String str)
        {
            if (str.equals("ENDOSININJ"))
                return ENDOSININJ;
            if (str.equals("SININSTIL"))
                return SININSTIL;
		    return null;
        }
    }

	/**
	* abstDomain: A17328 (C-0-T14581-A17021-A17328-cpt)
	*/
    public enum SkinRoute
    {
        
        OCDRESTA(0),
        
        SKIN(1);
        
        private int code;
        
        SkinRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SkinRoute fromString(String str)
        {
            if (str.equals("OCDRESTA"))
                return OCDRESTA;
            if (str.equals("SKIN"))
                return SKIN;
		    return null;
        }
    }

	/**
	* abstDomain: A17331 (C-0-T14581-A17021-A17331-cpt)
	*/
    public enum SoftTissueRoute
    {
        
        SOFTISINJ(0),
        
        SOFTISINSTIL(1);
        
        private int code;
        
        SoftTissueRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SoftTissueRoute fromString(String str)
        {
            if (str.equals("SOFTISINJ"))
                return SOFTISINJ;
            if (str.equals("SOFTISINSTIL"))
                return SOFTISINSTIL;
		    return null;
        }
    }

	/**
	* abstDomain: A17334 (C-0-T14581-A17021-A17334-cpt)
	*/
    public enum SubarachnoidRoute
    {
        
        SUBARACHINJ(0);
        
        private int code;
        
        SubarachnoidRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubarachnoidRoute fromString(String str)
        {
            if (str.equals("SUBARACHINJ"))
                return SUBARACHINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17336 (C-0-T14581-A17021-A17336-cpt)
	*/
    public enum SubconjunctivalRoute
    {
        
        SCINJ(0),
        
        SUBCONJTA(1);
        
        private int code;
        
        SubconjunctivalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubconjunctivalRoute fromString(String str)
        {
            if (str.equals("SCINJ"))
                return SCINJ;
            if (str.equals("SUBCONJTA"))
                return SUBCONJTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17339 (C-0-T14581-A17021-A17339-cpt)
	*/
    public enum SubcutaneousRoute
    {
        
        SQIMPLNT(0),
        
        SQINFUS(1),
        
        IPUMPINJ(2),
        
        SQ(3),
        
        SQSURGINS(4);
        
        private int code;
        
        SubcutaneousRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubcutaneousRoute fromString(String str)
        {
            if (str.equals("SQIMPLNT"))
                return SQIMPLNT;
            if (str.equals("SQINFUS"))
                return SQINFUS;
            if (str.equals("IPUMPINJ"))
                return IPUMPINJ;
            if (str.equals("SQ"))
                return SQ;
            if (str.equals("SQSURGINS"))
                return SQSURGINS;
		    return null;
        }
    }

	/**
	* abstDomain: A17345 (C-0-T14581-A17021-A17345-cpt)
	*/
    public enum SublesionalRoute
    {
        
        SLESINJ(0);
        
        private int code;
        
        SublesionalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SublesionalRoute fromString(String str)
        {
            if (str.equals("SLESINJ"))
                return SLESINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17347 (C-0-T14581-A17021-A17347-cpt)
	*/
    public enum SublingualRoute
    {
        
        SL(0);
        
        private int code;
        
        SublingualRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SublingualRoute fromString(String str)
        {
            if (str.equals("SL"))
                return SL;
		    return null;
        }
    }

	/**
	* abstDomain: A17349 (C-0-T14581-A17021-A17349-cpt)
	*/
    public enum SubmucosalRoute
    {
        
        SUBMUCINJ(0),
        
        SMUCMAB(1);
        
        private int code;
        
        SubmucosalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SubmucosalRoute fromString(String str)
        {
            if (str.equals("SUBMUCINJ"))
                return SUBMUCINJ;
            if (str.equals("SMUCMAB"))
                return SMUCMAB;
		    return null;
        }
    }

	/**
	* abstDomain: A17352 (C-0-T14581-A17021-A17352-cpt)
	*/
    public enum TracheostomyRoute
    {
        
        TRACH(0),
        
        TRACHINSTL(1);
        
        private int code;
        
        TracheostomyRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TracheostomyRoute fromString(String str)
        {
            if (str.equals("TRACH"))
                return TRACH;
            if (str.equals("TRACHINSTL"))
                return TRACHINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17356 (C-0-T14581-A17021-A17356-cpt)
	*/
    public enum Transdermal
    {
        
        TRNSDERMD(0);
        
        private int code;
        
        Transdermal(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Transdermal fromString(String str)
        {
            if (str.equals("TRNSDERMD"))
                return TRNSDERMD;
		    return null;
        }
    }

	/**
	* abstDomain: A17357 (C-0-T14581-A17021-A17357-cpt)
	*/
    public enum TransmucosalRoute
    {
        
        TMUCTA(0);
        
        private int code;
        
        TransmucosalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TransmucosalRoute fromString(String str)
        {
            if (str.equals("TMUCTA"))
                return TMUCTA;
		    return null;
        }
    }

	/**
	* abstDomain: A17359 (C-0-T14581-A17021-A17359-cpt)
	*/
    public enum TransplacentalRoute
    {
        
        TRPLACINJ(0);
        
        private int code;
        
        TransplacentalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TransplacentalRoute fromString(String str)
        {
            if (str.equals("TRPLACINJ"))
                return TRPLACINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17361 (C-0-T14581-A17021-A17361-cpt)
	*/
    public enum TranstrachealRoute
    {
        
        TRTRACHINJ(0);
        
        private int code;
        
        TranstrachealRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TranstrachealRoute fromString(String str)
        {
            if (str.equals("TRTRACHINJ"))
                return TRTRACHINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17363 (C-0-T14581-A17021-A17363-cpt)
	*/
    public enum TranstympanicRoute
    {
        
        TRTYMPINSTIL(0),
        
        TTYMPTABSORP(1);
        
        private int code;
        
        TranstympanicRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TranstympanicRoute fromString(String str)
        {
            if (str.equals("TRTYMPINSTIL"))
                return TRTYMPINSTIL;
            if (str.equals("TTYMPTABSORP"))
                return TTYMPTABSORP;
		    return null;
        }
    }

	/**
	* abstDomain: A17366 (C-0-T14581-A17021-A17366-cpt)
	*/
    public enum UreteralRoute
    {
        
        URETINJ(0);
        
        private int code;
        
        UreteralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UreteralRoute fromString(String str)
        {
            if (str.equals("URETINJ"))
                return URETINJ;
		    return null;
        }
    }

	/**
	* abstDomain: A17368 (C-0-T14581-A17021-A17368-cpt)
	*/
    public enum UrethralRoute
    {
        
        URETHINJ(0),
        
        URETHINS(1),
        
        URETHSUP(2),
        
        URETHINSTL(3);
        
        private int code;
        
        UrethralRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UrethralRoute fromString(String str)
        {
            if (str.equals("URETHINJ"))
                return URETHINJ;
            if (str.equals("URETHINS"))
                return URETHINS;
            if (str.equals("URETHSUP"))
                return URETHSUP;
            if (str.equals("URETHINSTL"))
                return URETHINSTL;
		    return null;
        }
    }

	/**
	* specDomain: S14725 (C-0-T14581-A17021-A17373-S14725-cpt)
	*/
    public enum UrinaryBladderIrrigation
    {
        
        BLADIRR(0),
        
        BLADIRRC(1),
        
        BLADIRRT(2);
        
        private int code;
        
        UrinaryBladderIrrigation(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UrinaryBladderIrrigation fromString(String str)
        {
            if (str.equals("BLADIRR"))
                return BLADIRR;
            if (str.equals("BLADIRRC"))
                return BLADIRRC;
            if (str.equals("BLADIRRT"))
                return BLADIRRT;
		    return null;
        }
    }

	/**
	* abstDomain: A17378 (C-0-T14581-A17021-A17378-cpt)
	*/
    public enum UrinaryTractRoute
    {
        
        BLADINSTL(0);
        
        private int code;
        
        UrinaryTractRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UrinaryTractRoute fromString(String str)
        {
            if (str.equals("BLADINSTL"))
                return BLADINSTL;
		    return null;
        }
    }

	/**
	* abstDomain: A17380 (C-0-T14581-A17021-A17380-cpt)
	*/
    public enum VaginalRoute
    {
        
        DOUCHE(0),
        
        VAGINSI(1),
        
        VAGINS(2);
        
        private int code;
        
        VaginalRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaginalRoute fromString(String str)
        {
            if (str.equals("DOUCHE"))
                return DOUCHE;
            if (str.equals("VAGINSI"))
                return VAGINSI;
            if (str.equals("VAGINS"))
                return VAGINS;
		    return null;
        }
    }

	/**
	* abstDomain: A17384 (C-0-T14581-A17021-A17384-cpt)
	*/
    public enum VitreousHumourRoute
    {
        
        IVITIMPLNT(0);
        
        private int code;
        
        VitreousHumourRoute(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VitreousHumourRoute fromString(String str)
        {
            if (str.equals("IVITIMPLNT"))
                return IVITIMPLNT;
		    return null;
        }
    }

	/**
	* vocSet: T390 (C-0-T390-cpt)
	*/
    public enum Sequencing
    {
        
        A(0),
        
        D(1),
        
        N(2);
        
        private int code;
        
        Sequencing(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Sequencing fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("D"))
                return D;
            if (str.equals("N"))
                return N;
		    return null;
        }
    }

	/**
	* vocSet: T17416 (C-0-T17416-cpt)
	*/
    public enum SetOperator
    {
        
        _ValueSetOperator(0),
        
        H(1),
        
        E(2),
        
        I(3),
        
        A(4),
        
        P(5);
        
        private int code;
        
        SetOperator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static SetOperator fromString(String str)
        {
            if (str.equals("_ValueSetOperator"))
                return _ValueSetOperator;
            if (str.equals("H"))
                return H;
            if (str.equals("E"))
                return E;
            if (str.equals("I"))
                return I;
            if (str.equals("A"))
                return A;
            if (str.equals("P"))
                return P;
		    return null;
        }
    }

	/**
	* abstDomain: A19603 (C-0-T19602-A19603-cpt)
	*/
    public enum FontStyle
    {
        
        bold(0),
        
        emphasis(1),
        
        italics(2),
        
        underline(3);
        
        private int code;
        
        FontStyle(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static FontStyle fromString(String str)
        {
            if (str.equals("bold"))
                return bold;
            if (str.equals("emphasis"))
                return emphasis;
            if (str.equals("italics"))
                return italics;
            if (str.equals("underline"))
                return underline;
		    return null;
        }
    }

	/**
	* abstDomain: A19606 (C-0-T19602-A19605-A19606-cpt)
	*/
    public enum OrderedListStyle
    {
        
        Arabic(0),
        
        BigAlpha(1),
        
        BigRoman(2),
        
        LittleAlpha(3),
        
        LittleRoman(4);
        
        private int code;
        
        OrderedListStyle(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static OrderedListStyle fromString(String str)
        {
            if (str.equals("Arabic"))
                return Arabic;
            if (str.equals("BigAlpha"))
                return BigAlpha;
            if (str.equals("BigRoman"))
                return BigRoman;
            if (str.equals("LittleAlpha"))
                return LittleAlpha;
            if (str.equals("LittleRoman"))
                return LittleRoman;
		    return null;
        }
    }

	/**
	* abstDomain: A19607 (C-0-T19602-A19605-A19607-cpt)
	*/
    public enum UnorderedListStyle
    {
        
        Circle(0),
        
        Disc(1),
        
        Square(2);
        
        private int code;
        
        UnorderedListStyle(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UnorderedListStyle fromString(String str)
        {
            if (str.equals("Circle"))
                return Circle;
            if (str.equals("Disc"))
                return Disc;
            if (str.equals("Square"))
                return Square;
		    return null;
        }
    }

	/**
	* abstDomain: A19604 (C-0-T19602-A19604-cpt)
	*/
    public enum TableRuleStyle
    {
        
        Botrule(0),
        
        Lrule(1),
        
        Rrule(2),
        
        Toprule(3);
        
        private int code;
        
        TableRuleStyle(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TableRuleStyle fromString(String str)
        {
            if (str.equals("Botrule"))
                return Botrule;
            if (str.equals("Lrule"))
                return Lrule;
            if (str.equals("Rrule"))
                return Rrule;
            if (str.equals("Toprule"))
                return Toprule;
		    return null;
        }
    }

	/**
	* abstDomain: A17720 (C-0-T17719-A17720-cpt)
	*/
    public enum Conditional
    {
        
        CONFIRM(0),
        
        NOTIFY(1);
        
        private int code;
        
        Conditional(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Conditional fromString(String str)
        {
            if (str.equals("CONFIRM"))
                return CONFIRM;
            if (str.equals("NOTIFY"))
                return NOTIFY;
		    return null;
        }
    }

	/**
	* abstDomain: A19740 (C-0-T17719-A19740-cpt)
	*/
    public enum x_SubstitutionConditionNoneOrUnconditional
    {
        
        NOSUB(0),
        
        UNCOND(1);
        
        private int code;
        
        x_SubstitutionConditionNoneOrUnconditional(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_SubstitutionConditionNoneOrUnconditional fromString(String str)
        {
            if (str.equals("NOSUB"))
                return NOSUB;
            if (str.equals("UNCOND"))
                return UNCOND;
		    return null;
        }
    }

	/**
	* vocSet: T10981 (C-0-T10981-cpt)
	*/
    public enum TableCellHorizontalAlign
    {
        
        center(0,"center"),
        
        _char(1,"char"),
        
        justify(2,"justify"),
        
        left(3,"left"),
        
        right(4,"right");
        
        private int code;
        private java.lang.String xmlValue;
        
        TableCellHorizontalAlign(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TableCellHorizontalAlign fromString(String str)
        {
            if (str.equals("center"))
                return center;
            if (str.equals("char"))
                return _char;
            if (str.equals("justify"))
                return justify;
            if (str.equals("left"))
                return left;
            if (str.equals("right"))
                return right;
		    return null;
        }
    }

	/**
	* vocSet: T11012 (C-0-T11012-cpt)
	*/
    public enum TableCellScope
    {
        
        col(0),
        
        colgroup(1),
        
        row(2),
        
        rowgroup(3);
        
        private int code;
        
        TableCellScope(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TableCellScope fromString(String str)
        {
            if (str.equals("col"))
                return col;
            if (str.equals("colgroup"))
                return colgroup;
            if (str.equals("row"))
                return row;
            if (str.equals("rowgroup"))
                return rowgroup;
		    return null;
        }
    }

	/**
	* vocSet: T10987 (C-0-T10987-cpt)
	*/
    public enum TableCellVerticalAlign
    {
        
        baseline(0),
        
        bottom(1),
        
        middle(2),
        
        top(3);
        
        private int code;
        
        TableCellVerticalAlign(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TableCellVerticalAlign fromString(String str)
        {
            if (str.equals("baseline"))
                return baseline;
            if (str.equals("bottom"))
                return bottom;
            if (str.equals("middle"))
                return middle;
            if (str.equals("top"))
                return top;
		    return null;
        }
    }

	/**
	* vocSet: T10992 (C-0-T10992-cpt)
	*/
    public enum TableFrame
    {
        
        above(0,"above"),
        
        below(1,"below"),
        
        border(2,"border"),
        
        box(3,"box"),
        
        hsides(4,"hsides"),
        
        lhs(5,"lhs"),
        
        rhs(6,"rhs"),
        
        _void(7,"void"),
        
        vsides(8,"vsides");
        
        private int code;
        private java.lang.String xmlValue;
        
        TableFrame(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static TableFrame fromString(String str)
        {
            if (str.equals("above"))
                return above;
            if (str.equals("below"))
                return below;
            if (str.equals("border"))
                return border;
            if (str.equals("box"))
                return box;
            if (str.equals("hsides"))
                return hsides;
            if (str.equals("lhs"))
                return lhs;
            if (str.equals("rhs"))
                return rhs;
            if (str.equals("void"))
                return _void;
            if (str.equals("vsides"))
                return vsides;
		    return null;
        }
    }

	/**
	* vocSet: T11002 (C-0-T11002-cpt)
	*/
    public enum TableRules
    {
        
        all(0),
        
        cols(1),
        
        groups(2),
        
        none(3),
        
        rows(4);
        
        private int code;
        
        TableRules(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TableRules fromString(String str)
        {
            if (str.equals("all"))
                return all;
            if (str.equals("cols"))
                return cols;
            if (str.equals("groups"))
                return groups;
            if (str.equals("none"))
                return none;
            if (str.equals("rows"))
                return rows;
		    return null;
        }
    }

	/**
	* vocSet: T10310 (C-0-T10310-cpt)
	*/
    public enum TargetAwareness
    {
        
        D(0),
        
        F(1),
        
        I(2),
        
        M(3),
        
        P(4),
        
        U(5);
        
        private int code;
        
        TargetAwareness(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TargetAwareness fromString(String str)
        {
            if (str.equals("D"))
                return D;
            if (str.equals("F"))
                return F;
            if (str.equals("I"))
                return I;
            if (str.equals("M"))
                return M;
            if (str.equals("P"))
                return P;
            if (str.equals("U"))
                return U;
		    return null;
        }
    }

	/**
	* specDomain: S10628 (C-0-T201-A190-S10628-cpt)
	*/
    public enum HomeAddressUse
    {
        
        H(0),
        
        HP(1),
        
        HV(2);
        
        private int code;
        
        HomeAddressUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static HomeAddressUse fromString(String str)
        {
            if (str.equals("H"))
                return H;
            if (str.equals("HP"))
                return HP;
            if (str.equals("HV"))
                return HV;
		    return null;
        }
    }

	/**
	* specDomain: S10631 (C-0-T201-A190-S10631-cpt)
	*/
    public enum WorkPlaceAddressUse
    {
        
        WP(0),
        
        DIR(1),
        
        PUB(2);
        
        private int code;
        
        WorkPlaceAddressUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static WorkPlaceAddressUse fromString(String str)
        {
            if (str.equals("WP"))
                return WP;
            if (str.equals("DIR"))
                return DIR;
            if (str.equals("PUB"))
                return PUB;
		    return null;
        }
    }

	/**
	* vocSet: T10706 (C-0-T10706-cpt)
	*/
    public enum TimingEvent
    {
        
        AC(0),
        
        ACD(1),
        
        ACM(2),
        
        ACV(3),
        
        HS(4),
        
        IC(5),
        
        ICD(6),
        
        ICM(7),
        
        ICV(8),
        
        PC(9),
        
        PCD(10),
        
        PCM(11),
        
        PCV(12);
        
        private int code;
        
        TimingEvent(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TimingEvent fromString(String str)
        {
            if (str.equals("AC"))
                return AC;
            if (str.equals("ACD"))
                return ACD;
            if (str.equals("ACM"))
                return ACM;
            if (str.equals("ACV"))
                return ACV;
            if (str.equals("HS"))
                return HS;
            if (str.equals("IC"))
                return IC;
            if (str.equals("ICD"))
                return ICD;
            if (str.equals("ICM"))
                return ICM;
            if (str.equals("ICV"))
                return ICV;
            if (str.equals("PC"))
                return PC;
            if (str.equals("PCD"))
                return PCD;
            if (str.equals("PCM"))
                return PCM;
            if (str.equals("PCV"))
                return PCV;
		    return null;
        }
    }

	/**
	* vocSet: T19833 (C-0-T19833-cpt)
	*/
    public enum TransmissionRelationshipTypeCode
    {
        
        SEQL(0);
        
        private int code;
        
        TransmissionRelationshipTypeCode(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static TransmissionRelationshipTypeCode fromString(String str)
        {
            if (str.equals("SEQL"))
                return SEQL;
		    return null;
        }
    }

	/**
	* abstDomain: A11969 (C-0-T11631-A11969-cpt)
	*/
    public enum NativeEntityAlaska
    {
        
        _339(0,"339"),
        
        _341(1,"341"),
        
        _342(2,"342"),
        
        _345(3,"345"),
        
        _347(4,"347"),
        
        _348(5,"348"),
        
        _352(6,"352"),
        
        _354(7,"354"),
        
        _355(8,"355"),
        
        _356(9,"356"),
        
        _359(10,"359"),
        
        _361(11,"361"),
        
        _364(12,"364"),
        
        _549(13,"549"),
        
        _369(14,"369"),
        
        _371(15,"371"),
        
        _372(16,"372"),
        
        _375(17,"375"),
        
        _376(18,"376"),
        
        _377(19,"377"),
        
        _378(20,"378"),
        
        _382(21,"382"),
        
        _383(22,"383"),
        
        _386(23,"386"),
        
        _388(24,"388"),
        
        _392(25,"392"),
        
        _395(26,"395"),
        
        _396(27,"396"),
        
        _398(28,"398"),
        
        _400(29,"400"),
        
        _401(30,"401"),
        
        _406(31,"406"),
        
        _411(32,"411"),
        
        _413(33,"413"),
        
        _414(34,"414"),
        
        _415(35,"415"),
        
        _417(36,"417"),
        
        _418(37,"418"),
        
        _419(38,"419"),
        
        _420(39,"420"),
        
        _422(40,"422"),
        
        _423(41,"423"),
        
        _424(42,"424"),
        
        _425(43,"425"),
        
        _427(44,"427"),
        
        _434(45,"434"),
        
        _435(46,"435"),
        
        _437(47,"437"),
        
        _438(48,"438"),
        
        _441(49,"441"),
        
        _443(50,"443"),
        
        _445(51,"445"),
        
        _450(52,"450"),
        
        _456(53,"456"),
        
        _455(54,"455"),
        
        _457(55,"457"),
        
        _459(56,"459"),
        
        _460(57,"460"),
        
        _463(58,"463"),
        
        _465(59,"465"),
        
        _466(60,"466"),
        
        _468(61,"468"),
        
        _340(62,"340"),
        
        _343(63,"343"),
        
        _346(64,"346"),
        
        _349(65,"349"),
        
        _357(66,"357"),
        
        _360(67,"360"),
        
        _362(68,"362"),
        
        _365(69,"365"),
        
        _366(70,"366"),
        
        _367(71,"367"),
        
        _368(72,"368"),
        
        _373(73,"373"),
        
        _374(74,"374"),
        
        _379(75,"379"),
        
        _380(76,"380"),
        
        _381(77,"381"),
        
        _385(78,"385"),
        
        _389(79,"389"),
        
        _390(80,"390"),
        
        _393(81,"393"),
        
        _394(82,"394"),
        
        _397(83,"397"),
        
        _399(84,"399"),
        
        _402(85,"402"),
        
        _403(86,"403"),
        
        _404(87,"404"),
        
        _405(88,"405"),
        
        _407(89,"407"),
        
        _408(90,"408"),
        
        _409(91,"409"),
        
        _412(92,"412"),
        
        _416(93,"416"),
        
        _430(94,"430"),
        
        _431(95,"431"),
        
        _433(96,"433"),
        
        _436(97,"436"),
        
        _439(98,"439"),
        
        _440(99,"440"),
        
        _442(100,"442"),
        
        _444(101,"444"),
        
        _446(102,"446"),
        
        _448(103,"448"),
        
        _449(104,"449"),
        
        _452(105,"452"),
        
        _453(106,"453"),
        
        _454(107,"454"),
        
        _461(108,"461"),
        
        _462(109,"462"),
        
        _464(110,"464"),
        
        _467(111,"467"),
        
        _469(112,"469"),
        
        _470(113,"470"),
        
        _471(114,"471"),
        
        _472(115,"472"),
        
        _473(116,"473"),
        
        _479(117,"479"),
        
        _481(118,"481"),
        
        _483(119,"483"),
        
        _488(120,"488"),
        
        _491(121,"491"),
        
        _496(122,"496"),
        
        _497(123,"497"),
        
        _500(124,"500"),
        
        _502(125,"502"),
        
        _504(126,"504"),
        
        _506(127,"506"),
        
        _507(128,"507"),
        
        _508(129,"508"),
        
        _509(130,"509"),
        
        _510(131,"510"),
        
        _517(132,"517"),
        
        _519(133,"519"),
        
        _522(134,"522"),
        
        _524(135,"524"),
        
        _525(136,"525"),
        
        _528(137,"528"),
        
        _529(138,"529"),
        
        _530(139,"530"),
        
        _532(140,"532"),
        
        _539(141,"539"),
        
        _542(142,"542"),
        
        _543(143,"543"),
        
        _544(144,"544"),
        
        _545(145,"545"),
        
        _547(146,"547"),
        
        _548(147,"548"),
        
        _552(148,"552"),
        
        _553(149,"553"),
        
        _555(150,"555"),
        
        _558(151,"558"),
        
        _559(152,"559"),
        
        _561(153,"561"),
        
        _563(154,"563"),
        
        _564(155,"564"),
        
        _474(156,"474"),
        
        _475(157,"475"),
        
        _476(158,"476"),
        
        _477(159,"477"),
        
        _478(160,"478"),
        
        _480(161,"480"),
        
        _482(162,"482"),
        
        _484(163,"484"),
        
        _485(164,"485"),
        
        _486(165,"486"),
        
        _487(166,"487"),
        
        _489(167,"489"),
        
        _490(168,"490"),
        
        _410(169,"410"),
        
        _426(170,"426"),
        
        _432(171,"432"),
        
        _451(172,"451"),
        
        _523(173,"523"),
        
        _494(174,"494"),
        
        _495(175,"495"),
        
        _498(176,"498"),
        
        _499(177,"499"),
        
        _501(178,"501"),
        
        _503(179,"503"),
        
        _505(180,"505"),
        
        _511(181,"511"),
        
        _512(182,"512"),
        
        _513(183,"513"),
        
        _514(184,"514"),
        
        _515(185,"515"),
        
        _518(186,"518"),
        
        _520(187,"520"),
        
        _526(188,"526"),
        
        _527(189,"527"),
        
        _531(190,"531"),
        
        _533(191,"533"),
        
        _534(192,"534"),
        
        _537(193,"537"),
        
        _538(194,"538"),
        
        _541(195,"541"),
        
        _546(196,"546"),
        
        _550(197,"550"),
        
        _551(198,"551"),
        
        _554(199,"554"),
        
        _556(200,"556"),
        
        _557(201,"557"),
        
        _338(202,"338"),
        
        _344(203,"344"),
        
        _350(204,"350"),
        
        _353(205,"353"),
        
        _358(206,"358"),
        
        _363(207,"363"),
        
        _370(208,"370"),
        
        _384(209,"384"),
        
        _387(210,"387"),
        
        _391(211,"391"),
        
        _421(212,"421"),
        
        _428(213,"428"),
        
        _429(214,"429"),
        
        _447(215,"447"),
        
        _458(216,"458"),
        
        _492(217,"492"),
        
        _493(218,"493"),
        
        _516(219,"516"),
        
        _521(220,"521"),
        
        _535(221,"535"),
        
        _536(222,"536"),
        
        _540(223,"540"),
        
        _560(224,"560"),
        
        _562(225,"562"),
        
        _565(226,"565"),
        
        _566(227,"566"),
        
        _351(228,"351");
        
        private int code;
        private java.lang.String xmlValue;
        
        NativeEntityAlaska(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NativeEntityAlaska fromString(String str)
        {
            if (str.equals("339"))
                return _339;
            if (str.equals("341"))
                return _341;
            if (str.equals("342"))
                return _342;
            if (str.equals("345"))
                return _345;
            if (str.equals("347"))
                return _347;
            if (str.equals("348"))
                return _348;
            if (str.equals("352"))
                return _352;
            if (str.equals("354"))
                return _354;
            if (str.equals("355"))
                return _355;
            if (str.equals("356"))
                return _356;
            if (str.equals("359"))
                return _359;
            if (str.equals("361"))
                return _361;
            if (str.equals("364"))
                return _364;
            if (str.equals("549"))
                return _549;
            if (str.equals("369"))
                return _369;
            if (str.equals("371"))
                return _371;
            if (str.equals("372"))
                return _372;
            if (str.equals("375"))
                return _375;
            if (str.equals("376"))
                return _376;
            if (str.equals("377"))
                return _377;
            if (str.equals("378"))
                return _378;
            if (str.equals("382"))
                return _382;
            if (str.equals("383"))
                return _383;
            if (str.equals("386"))
                return _386;
            if (str.equals("388"))
                return _388;
            if (str.equals("392"))
                return _392;
            if (str.equals("395"))
                return _395;
            if (str.equals("396"))
                return _396;
            if (str.equals("398"))
                return _398;
            if (str.equals("400"))
                return _400;
            if (str.equals("401"))
                return _401;
            if (str.equals("406"))
                return _406;
            if (str.equals("411"))
                return _411;
            if (str.equals("413"))
                return _413;
            if (str.equals("414"))
                return _414;
            if (str.equals("415"))
                return _415;
            if (str.equals("417"))
                return _417;
            if (str.equals("418"))
                return _418;
            if (str.equals("419"))
                return _419;
            if (str.equals("420"))
                return _420;
            if (str.equals("422"))
                return _422;
            if (str.equals("423"))
                return _423;
            if (str.equals("424"))
                return _424;
            if (str.equals("425"))
                return _425;
            if (str.equals("427"))
                return _427;
            if (str.equals("434"))
                return _434;
            if (str.equals("435"))
                return _435;
            if (str.equals("437"))
                return _437;
            if (str.equals("438"))
                return _438;
            if (str.equals("441"))
                return _441;
            if (str.equals("443"))
                return _443;
            if (str.equals("445"))
                return _445;
            if (str.equals("450"))
                return _450;
            if (str.equals("456"))
                return _456;
            if (str.equals("455"))
                return _455;
            if (str.equals("457"))
                return _457;
            if (str.equals("459"))
                return _459;
            if (str.equals("460"))
                return _460;
            if (str.equals("463"))
                return _463;
            if (str.equals("465"))
                return _465;
            if (str.equals("466"))
                return _466;
            if (str.equals("468"))
                return _468;
            if (str.equals("340"))
                return _340;
            if (str.equals("343"))
                return _343;
            if (str.equals("346"))
                return _346;
            if (str.equals("349"))
                return _349;
            if (str.equals("357"))
                return _357;
            if (str.equals("360"))
                return _360;
            if (str.equals("362"))
                return _362;
            if (str.equals("365"))
                return _365;
            if (str.equals("366"))
                return _366;
            if (str.equals("367"))
                return _367;
            if (str.equals("368"))
                return _368;
            if (str.equals("373"))
                return _373;
            if (str.equals("374"))
                return _374;
            if (str.equals("379"))
                return _379;
            if (str.equals("380"))
                return _380;
            if (str.equals("381"))
                return _381;
            if (str.equals("385"))
                return _385;
            if (str.equals("389"))
                return _389;
            if (str.equals("390"))
                return _390;
            if (str.equals("393"))
                return _393;
            if (str.equals("394"))
                return _394;
            if (str.equals("397"))
                return _397;
            if (str.equals("399"))
                return _399;
            if (str.equals("402"))
                return _402;
            if (str.equals("403"))
                return _403;
            if (str.equals("404"))
                return _404;
            if (str.equals("405"))
                return _405;
            if (str.equals("407"))
                return _407;
            if (str.equals("408"))
                return _408;
            if (str.equals("409"))
                return _409;
            if (str.equals("412"))
                return _412;
            if (str.equals("416"))
                return _416;
            if (str.equals("430"))
                return _430;
            if (str.equals("431"))
                return _431;
            if (str.equals("433"))
                return _433;
            if (str.equals("436"))
                return _436;
            if (str.equals("439"))
                return _439;
            if (str.equals("440"))
                return _440;
            if (str.equals("442"))
                return _442;
            if (str.equals("444"))
                return _444;
            if (str.equals("446"))
                return _446;
            if (str.equals("448"))
                return _448;
            if (str.equals("449"))
                return _449;
            if (str.equals("452"))
                return _452;
            if (str.equals("453"))
                return _453;
            if (str.equals("454"))
                return _454;
            if (str.equals("461"))
                return _461;
            if (str.equals("462"))
                return _462;
            if (str.equals("464"))
                return _464;
            if (str.equals("467"))
                return _467;
            if (str.equals("469"))
                return _469;
            if (str.equals("470"))
                return _470;
            if (str.equals("471"))
                return _471;
            if (str.equals("472"))
                return _472;
            if (str.equals("473"))
                return _473;
            if (str.equals("479"))
                return _479;
            if (str.equals("481"))
                return _481;
            if (str.equals("483"))
                return _483;
            if (str.equals("488"))
                return _488;
            if (str.equals("491"))
                return _491;
            if (str.equals("496"))
                return _496;
            if (str.equals("497"))
                return _497;
            if (str.equals("500"))
                return _500;
            if (str.equals("502"))
                return _502;
            if (str.equals("504"))
                return _504;
            if (str.equals("506"))
                return _506;
            if (str.equals("507"))
                return _507;
            if (str.equals("508"))
                return _508;
            if (str.equals("509"))
                return _509;
            if (str.equals("510"))
                return _510;
            if (str.equals("517"))
                return _517;
            if (str.equals("519"))
                return _519;
            if (str.equals("522"))
                return _522;
            if (str.equals("524"))
                return _524;
            if (str.equals("525"))
                return _525;
            if (str.equals("528"))
                return _528;
            if (str.equals("529"))
                return _529;
            if (str.equals("530"))
                return _530;
            if (str.equals("532"))
                return _532;
            if (str.equals("539"))
                return _539;
            if (str.equals("542"))
                return _542;
            if (str.equals("543"))
                return _543;
            if (str.equals("544"))
                return _544;
            if (str.equals("545"))
                return _545;
            if (str.equals("547"))
                return _547;
            if (str.equals("548"))
                return _548;
            if (str.equals("552"))
                return _552;
            if (str.equals("553"))
                return _553;
            if (str.equals("555"))
                return _555;
            if (str.equals("558"))
                return _558;
            if (str.equals("559"))
                return _559;
            if (str.equals("561"))
                return _561;
            if (str.equals("563"))
                return _563;
            if (str.equals("564"))
                return _564;
            if (str.equals("474"))
                return _474;
            if (str.equals("475"))
                return _475;
            if (str.equals("476"))
                return _476;
            if (str.equals("477"))
                return _477;
            if (str.equals("478"))
                return _478;
            if (str.equals("480"))
                return _480;
            if (str.equals("482"))
                return _482;
            if (str.equals("484"))
                return _484;
            if (str.equals("485"))
                return _485;
            if (str.equals("486"))
                return _486;
            if (str.equals("487"))
                return _487;
            if (str.equals("489"))
                return _489;
            if (str.equals("490"))
                return _490;
            if (str.equals("410"))
                return _410;
            if (str.equals("426"))
                return _426;
            if (str.equals("432"))
                return _432;
            if (str.equals("451"))
                return _451;
            if (str.equals("523"))
                return _523;
            if (str.equals("494"))
                return _494;
            if (str.equals("495"))
                return _495;
            if (str.equals("498"))
                return _498;
            if (str.equals("499"))
                return _499;
            if (str.equals("501"))
                return _501;
            if (str.equals("503"))
                return _503;
            if (str.equals("505"))
                return _505;
            if (str.equals("511"))
                return _511;
            if (str.equals("512"))
                return _512;
            if (str.equals("513"))
                return _513;
            if (str.equals("514"))
                return _514;
            if (str.equals("515"))
                return _515;
            if (str.equals("518"))
                return _518;
            if (str.equals("520"))
                return _520;
            if (str.equals("526"))
                return _526;
            if (str.equals("527"))
                return _527;
            if (str.equals("531"))
                return _531;
            if (str.equals("533"))
                return _533;
            if (str.equals("534"))
                return _534;
            if (str.equals("537"))
                return _537;
            if (str.equals("538"))
                return _538;
            if (str.equals("541"))
                return _541;
            if (str.equals("546"))
                return _546;
            if (str.equals("550"))
                return _550;
            if (str.equals("551"))
                return _551;
            if (str.equals("554"))
                return _554;
            if (str.equals("556"))
                return _556;
            if (str.equals("557"))
                return _557;
            if (str.equals("338"))
                return _338;
            if (str.equals("344"))
                return _344;
            if (str.equals("350"))
                return _350;
            if (str.equals("353"))
                return _353;
            if (str.equals("358"))
                return _358;
            if (str.equals("363"))
                return _363;
            if (str.equals("370"))
                return _370;
            if (str.equals("384"))
                return _384;
            if (str.equals("387"))
                return _387;
            if (str.equals("391"))
                return _391;
            if (str.equals("421"))
                return _421;
            if (str.equals("428"))
                return _428;
            if (str.equals("429"))
                return _429;
            if (str.equals("447"))
                return _447;
            if (str.equals("458"))
                return _458;
            if (str.equals("492"))
                return _492;
            if (str.equals("493"))
                return _493;
            if (str.equals("516"))
                return _516;
            if (str.equals("521"))
                return _521;
            if (str.equals("535"))
                return _535;
            if (str.equals("536"))
                return _536;
            if (str.equals("540"))
                return _540;
            if (str.equals("560"))
                return _560;
            if (str.equals("562"))
                return _562;
            if (str.equals("565"))
                return _565;
            if (str.equals("566"))
                return _566;
            if (str.equals("351"))
                return _351;
		    return null;
        }
    }

	/**
	* abstDomain: A12548 (C-0-T11631-A12548-cpt)
	*/
    public enum NativeEntityContiguous
    {
        
        _1(0,"1"),
        
        _2(1,"2"),
        
        _3(2,"3"),
        
        _4(3,"4"),
        
        _5(4,"5"),
        
        _6(5,"6"),
        
        _7(6,"7"),
        
        _8(7,"8"),
        
        _9(8,"9"),
        
        _10(9,"10"),
        
        _11(10,"11"),
        
        _12(11,"12"),
        
        _33(12,"33"),
        
        _13(13,"13"),
        
        _14(14,"14"),
        
        _15(15,"15"),
        
        _16(16,"16"),
        
        _17(17,"17"),
        
        _18(18,"18"),
        
        _19(19,"19"),
        
        _20(20,"20"),
        
        _21(21,"21"),
        
        _160(22,"160"),
        
        _22(23,"22"),
        
        _23(24,"23"),
        
        _24(25,"24"),
        
        _25(26,"25"),
        
        _26(27,"26"),
        
        _27(28,"27"),
        
        _29(29,"29"),
        
        _28(30,"28"),
        
        _30(31,"30"),
        
        _31(32,"31"),
        
        _32(33,"32"),
        
        _35(34,"35"),
        
        _36(35,"36"),
        
        _37(36,"37"),
        
        _38(37,"38"),
        
        _39(38,"39"),
        
        _40(39,"40"),
        
        _42(40,"42"),
        
        _41(41,"41"),
        
        _43(42,"43"),
        
        _44(43,"44"),
        
        _45(44,"45"),
        
        _46(45,"46"),
        
        _47(46,"47"),
        
        _48(47,"48"),
        
        _49(48,"49"),
        
        _50(49,"50"),
        
        _51(50,"51"),
        
        _52(51,"52"),
        
        _53(52,"53"),
        
        _54(53,"54"),
        
        _55(54,"55"),
        
        _64(55,"64"),
        
        _56(56,"56"),
        
        _57(57,"57"),
        
        _58(58,"58"),
        
        _59(59,"59"),
        
        _60(60,"60"),
        
        _61(61,"61"),
        
        _62(62,"62"),
        
        _63(63,"63"),
        
        _65(64,"65"),
        
        _66(65,"66"),
        
        _67(66,"67"),
        
        _68(67,"68"),
        
        _69(68,"69"),
        
        _71(69,"71"),
        
        _70(70,"70"),
        
        _72(71,"72"),
        
        _73(72,"73"),
        
        _74(73,"74"),
        
        _75(74,"75"),
        
        _76(75,"76"),
        
        _77(76,"77"),
        
        _78(77,"78"),
        
        _79(78,"79"),
        
        _80(79,"80"),
        
        _81(80,"81"),
        
        _82(81,"82"),
        
        _83(82,"83"),
        
        _84(83,"84"),
        
        _85(84,"85"),
        
        _86(85,"86"),
        
        _87(86,"87"),
        
        _88(87,"88"),
        
        _89(88,"89"),
        
        _90(89,"90"),
        
        _91(90,"91"),
        
        _92(91,"92"),
        
        _93(92,"93"),
        
        _94(93,"94"),
        
        _95(94,"95"),
        
        _96(95,"96"),
        
        _97(96,"97"),
        
        _98(97,"98"),
        
        _99(98,"99"),
        
        _100(99,"100"),
        
        _101(100,"101"),
        
        _102(101,"102"),
        
        _103(102,"103"),
        
        _104(103,"104"),
        
        _105(104,"105"),
        
        _106(105,"106"),
        
        _107(106,"107"),
        
        _108(107,"108"),
        
        _109(108,"109"),
        
        _110(109,"110"),
        
        _111(110,"111"),
        
        _112(111,"112"),
        
        _113(112,"113"),
        
        _114(113,"114"),
        
        _115(114,"115"),
        
        _116(115,"116"),
        
        _117(116,"117"),
        
        _118(117,"118"),
        
        _119(118,"119"),
        
        _120(119,"120"),
        
        _121(120,"121"),
        
        _122(121,"122"),
        
        _123(122,"123"),
        
        _124(123,"124"),
        
        _127(124,"127"),
        
        _125(125,"125"),
        
        _126(126,"126"),
        
        _128(127,"128"),
        
        _129(128,"129"),
        
        _130(129,"130"),
        
        _131(130,"131"),
        
        _132(131,"132"),
        
        _133(132,"133"),
        
        _135(133,"135"),
        
        _134(134,"134"),
        
        _136(135,"136"),
        
        _137(136,"137"),
        
        _138(137,"138"),
        
        _140(138,"140"),
        
        _141(139,"141"),
        
        _142(140,"142"),
        
        _143(141,"143"),
        
        _139(142,"139"),
        
        _144(143,"144"),
        
        _145(144,"145"),
        
        _146(145,"146"),
        
        _147(146,"147"),
        
        _148(147,"148"),
        
        _149(148,"149"),
        
        _150(149,"150"),
        
        _151(150,"151"),
        
        _152(151,"152"),
        
        _153(152,"153"),
        
        _154(153,"154"),
        
        _155(154,"155"),
        
        _156(155,"156"),
        
        _157(156,"157"),
        
        _158(157,"158"),
        
        _159(158,"159"),
        
        _161(159,"161"),
        
        _162(160,"162"),
        
        _163(161,"163"),
        
        _164(162,"164"),
        
        _165(163,"165"),
        
        _166(164,"166"),
        
        _167(165,"167"),
        
        _168(166,"168"),
        
        _169(167,"169"),
        
        _170(168,"170"),
        
        _171(169,"171"),
        
        _172(170,"172"),
        
        _173(171,"173"),
        
        _174(172,"174"),
        
        _175(173,"175"),
        
        _176(174,"176"),
        
        _177(175,"177"),
        
        _178(176,"178"),
        
        _179(177,"179"),
        
        _180(178,"180"),
        
        _181(179,"181"),
        
        _182(180,"182"),
        
        _184(181,"184"),
        
        _183(182,"183"),
        
        _185(183,"185"),
        
        _186(184,"186"),
        
        _188(185,"188"),
        
        _187(186,"187"),
        
        _189(187,"189"),
        
        _190(188,"190"),
        
        _191(189,"191"),
        
        _192(190,"192"),
        
        _193(191,"193"),
        
        _194(192,"194"),
        
        _195(193,"195"),
        
        _196(194,"196"),
        
        _197(195,"197"),
        
        _198(196,"198"),
        
        _199(197,"199"),
        
        _200(198,"200"),
        
        _201(199,"201"),
        
        _202(200,"202"),
        
        _203(201,"203"),
        
        _204(202,"204"),
        
        _205(203,"205"),
        
        _206(204,"206"),
        
        _207(205,"207"),
        
        _208(206,"208"),
        
        _209(207,"209"),
        
        _210(208,"210"),
        
        _212(209,"212"),
        
        _211(210,"211"),
        
        _213(211,"213"),
        
        _214(212,"214"),
        
        _215(213,"215"),
        
        _216(214,"216"),
        
        _217(215,"217"),
        
        _219(216,"219"),
        
        _218(217,"218"),
        
        _220(218,"220"),
        
        _221(219,"221"),
        
        _222(220,"222"),
        
        _223(221,"223"),
        
        _224(222,"224"),
        
        _225(223,"225"),
        
        _226(224,"226"),
        
        _227(225,"227"),
        
        _228(226,"228"),
        
        _229(227,"229"),
        
        _230(228,"230"),
        
        _231(229,"231"),
        
        _232(230,"232"),
        
        _233(231,"233"),
        
        _234(232,"234"),
        
        _235(233,"235"),
        
        _236(234,"236"),
        
        _237(235,"237"),
        
        _238(236,"238"),
        
        _239(237,"239"),
        
        _240(238,"240"),
        
        _241(239,"241"),
        
        _242(240,"242"),
        
        _243(241,"243"),
        
        _244(242,"244"),
        
        _245(243,"245"),
        
        _247(244,"247"),
        
        _248(245,"248"),
        
        _246(246,"246"),
        
        _249(247,"249"),
        
        _250(248,"250"),
        
        _251(249,"251"),
        
        _252(250,"252"),
        
        _253(251,"253"),
        
        _254(252,"254"),
        
        _255(253,"255"),
        
        _257(254,"257"),
        
        _256(255,"256"),
        
        _258(256,"258"),
        
        _259(257,"259"),
        
        _260(258,"260"),
        
        _261(259,"261"),
        
        _262(260,"262"),
        
        _263(261,"263"),
        
        _264(262,"264"),
        
        _265(263,"265"),
        
        _266(264,"266"),
        
        _267(265,"267"),
        
        _268(266,"268"),
        
        _269(267,"269"),
        
        _270(268,"270"),
        
        _271(269,"271"),
        
        _272(270,"272"),
        
        _273(271,"273"),
        
        _274(272,"274"),
        
        _275(273,"275"),
        
        _276(274,"276"),
        
        _277(275,"277"),
        
        _278(276,"278"),
        
        _279(277,"279"),
        
        _280(278,"280"),
        
        _281(279,"281"),
        
        _282(280,"282"),
        
        _283(281,"283"),
        
        _284(282,"284"),
        
        _285(283,"285"),
        
        _286(284,"286"),
        
        _287(285,"287"),
        
        _288(286,"288"),
        
        _289(287,"289"),
        
        _291(288,"291"),
        
        _290(289,"290"),
        
        _292(290,"292"),
        
        _293(291,"293"),
        
        _294(292,"294"),
        
        _295(293,"295"),
        
        _296(294,"296"),
        
        _297(295,"297"),
        
        _298(296,"298"),
        
        _299(297,"299"),
        
        _300(298,"300"),
        
        _301(299,"301"),
        
        _302(300,"302"),
        
        _303(301,"303"),
        
        _304(302,"304"),
        
        _305(303,"305"),
        
        _306(304,"306"),
        
        _308(305,"308"),
        
        _307(306,"307"),
        
        _309(307,"309"),
        
        _310(308,"310"),
        
        _311(309,"311"),
        
        _312(310,"312"),
        
        _313(311,"313"),
        
        _314(312,"314"),
        
        _315(313,"315"),
        
        _316(314,"316"),
        
        _317(315,"317"),
        
        _318(316,"318"),
        
        _319(317,"319"),
        
        _320(318,"320"),
        
        _321(319,"321"),
        
        _34(320,"34"),
        
        _322(321,"322"),
        
        _323(322,"323"),
        
        _324(323,"324"),
        
        _325(324,"325"),
        
        _326(325,"326"),
        
        _327(326,"327"),
        
        _328(327,"328"),
        
        _329(328,"329"),
        
        _330(329,"330"),
        
        _331(330,"331"),
        
        _332(331,"332"),
        
        _333(332,"333"),
        
        _334(333,"334"),
        
        _335(334,"335"),
        
        _336(335,"336"),
        
        _337(336,"337");
        
        private int code;
        private java.lang.String xmlValue;
        
        NativeEntityContiguous(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static NativeEntityContiguous fromString(String str)
        {
            if (str.equals("1"))
                return _1;
            if (str.equals("2"))
                return _2;
            if (str.equals("3"))
                return _3;
            if (str.equals("4"))
                return _4;
            if (str.equals("5"))
                return _5;
            if (str.equals("6"))
                return _6;
            if (str.equals("7"))
                return _7;
            if (str.equals("8"))
                return _8;
            if (str.equals("9"))
                return _9;
            if (str.equals("10"))
                return _10;
            if (str.equals("11"))
                return _11;
            if (str.equals("12"))
                return _12;
            if (str.equals("33"))
                return _33;
            if (str.equals("13"))
                return _13;
            if (str.equals("14"))
                return _14;
            if (str.equals("15"))
                return _15;
            if (str.equals("16"))
                return _16;
            if (str.equals("17"))
                return _17;
            if (str.equals("18"))
                return _18;
            if (str.equals("19"))
                return _19;
            if (str.equals("20"))
                return _20;
            if (str.equals("21"))
                return _21;
            if (str.equals("160"))
                return _160;
            if (str.equals("22"))
                return _22;
            if (str.equals("23"))
                return _23;
            if (str.equals("24"))
                return _24;
            if (str.equals("25"))
                return _25;
            if (str.equals("26"))
                return _26;
            if (str.equals("27"))
                return _27;
            if (str.equals("29"))
                return _29;
            if (str.equals("28"))
                return _28;
            if (str.equals("30"))
                return _30;
            if (str.equals("31"))
                return _31;
            if (str.equals("32"))
                return _32;
            if (str.equals("35"))
                return _35;
            if (str.equals("36"))
                return _36;
            if (str.equals("37"))
                return _37;
            if (str.equals("38"))
                return _38;
            if (str.equals("39"))
                return _39;
            if (str.equals("40"))
                return _40;
            if (str.equals("42"))
                return _42;
            if (str.equals("41"))
                return _41;
            if (str.equals("43"))
                return _43;
            if (str.equals("44"))
                return _44;
            if (str.equals("45"))
                return _45;
            if (str.equals("46"))
                return _46;
            if (str.equals("47"))
                return _47;
            if (str.equals("48"))
                return _48;
            if (str.equals("49"))
                return _49;
            if (str.equals("50"))
                return _50;
            if (str.equals("51"))
                return _51;
            if (str.equals("52"))
                return _52;
            if (str.equals("53"))
                return _53;
            if (str.equals("54"))
                return _54;
            if (str.equals("55"))
                return _55;
            if (str.equals("64"))
                return _64;
            if (str.equals("56"))
                return _56;
            if (str.equals("57"))
                return _57;
            if (str.equals("58"))
                return _58;
            if (str.equals("59"))
                return _59;
            if (str.equals("60"))
                return _60;
            if (str.equals("61"))
                return _61;
            if (str.equals("62"))
                return _62;
            if (str.equals("63"))
                return _63;
            if (str.equals("65"))
                return _65;
            if (str.equals("66"))
                return _66;
            if (str.equals("67"))
                return _67;
            if (str.equals("68"))
                return _68;
            if (str.equals("69"))
                return _69;
            if (str.equals("71"))
                return _71;
            if (str.equals("70"))
                return _70;
            if (str.equals("72"))
                return _72;
            if (str.equals("73"))
                return _73;
            if (str.equals("74"))
                return _74;
            if (str.equals("75"))
                return _75;
            if (str.equals("76"))
                return _76;
            if (str.equals("77"))
                return _77;
            if (str.equals("78"))
                return _78;
            if (str.equals("79"))
                return _79;
            if (str.equals("80"))
                return _80;
            if (str.equals("81"))
                return _81;
            if (str.equals("82"))
                return _82;
            if (str.equals("83"))
                return _83;
            if (str.equals("84"))
                return _84;
            if (str.equals("85"))
                return _85;
            if (str.equals("86"))
                return _86;
            if (str.equals("87"))
                return _87;
            if (str.equals("88"))
                return _88;
            if (str.equals("89"))
                return _89;
            if (str.equals("90"))
                return _90;
            if (str.equals("91"))
                return _91;
            if (str.equals("92"))
                return _92;
            if (str.equals("93"))
                return _93;
            if (str.equals("94"))
                return _94;
            if (str.equals("95"))
                return _95;
            if (str.equals("96"))
                return _96;
            if (str.equals("97"))
                return _97;
            if (str.equals("98"))
                return _98;
            if (str.equals("99"))
                return _99;
            if (str.equals("100"))
                return _100;
            if (str.equals("101"))
                return _101;
            if (str.equals("102"))
                return _102;
            if (str.equals("103"))
                return _103;
            if (str.equals("104"))
                return _104;
            if (str.equals("105"))
                return _105;
            if (str.equals("106"))
                return _106;
            if (str.equals("107"))
                return _107;
            if (str.equals("108"))
                return _108;
            if (str.equals("109"))
                return _109;
            if (str.equals("110"))
                return _110;
            if (str.equals("111"))
                return _111;
            if (str.equals("112"))
                return _112;
            if (str.equals("113"))
                return _113;
            if (str.equals("114"))
                return _114;
            if (str.equals("115"))
                return _115;
            if (str.equals("116"))
                return _116;
            if (str.equals("117"))
                return _117;
            if (str.equals("118"))
                return _118;
            if (str.equals("119"))
                return _119;
            if (str.equals("120"))
                return _120;
            if (str.equals("121"))
                return _121;
            if (str.equals("122"))
                return _122;
            if (str.equals("123"))
                return _123;
            if (str.equals("124"))
                return _124;
            if (str.equals("127"))
                return _127;
            if (str.equals("125"))
                return _125;
            if (str.equals("126"))
                return _126;
            if (str.equals("128"))
                return _128;
            if (str.equals("129"))
                return _129;
            if (str.equals("130"))
                return _130;
            if (str.equals("131"))
                return _131;
            if (str.equals("132"))
                return _132;
            if (str.equals("133"))
                return _133;
            if (str.equals("135"))
                return _135;
            if (str.equals("134"))
                return _134;
            if (str.equals("136"))
                return _136;
            if (str.equals("137"))
                return _137;
            if (str.equals("138"))
                return _138;
            if (str.equals("140"))
                return _140;
            if (str.equals("141"))
                return _141;
            if (str.equals("142"))
                return _142;
            if (str.equals("143"))
                return _143;
            if (str.equals("139"))
                return _139;
            if (str.equals("144"))
                return _144;
            if (str.equals("145"))
                return _145;
            if (str.equals("146"))
                return _146;
            if (str.equals("147"))
                return _147;
            if (str.equals("148"))
                return _148;
            if (str.equals("149"))
                return _149;
            if (str.equals("150"))
                return _150;
            if (str.equals("151"))
                return _151;
            if (str.equals("152"))
                return _152;
            if (str.equals("153"))
                return _153;
            if (str.equals("154"))
                return _154;
            if (str.equals("155"))
                return _155;
            if (str.equals("156"))
                return _156;
            if (str.equals("157"))
                return _157;
            if (str.equals("158"))
                return _158;
            if (str.equals("159"))
                return _159;
            if (str.equals("161"))
                return _161;
            if (str.equals("162"))
                return _162;
            if (str.equals("163"))
                return _163;
            if (str.equals("164"))
                return _164;
            if (str.equals("165"))
                return _165;
            if (str.equals("166"))
                return _166;
            if (str.equals("167"))
                return _167;
            if (str.equals("168"))
                return _168;
            if (str.equals("169"))
                return _169;
            if (str.equals("170"))
                return _170;
            if (str.equals("171"))
                return _171;
            if (str.equals("172"))
                return _172;
            if (str.equals("173"))
                return _173;
            if (str.equals("174"))
                return _174;
            if (str.equals("175"))
                return _175;
            if (str.equals("176"))
                return _176;
            if (str.equals("177"))
                return _177;
            if (str.equals("178"))
                return _178;
            if (str.equals("179"))
                return _179;
            if (str.equals("180"))
                return _180;
            if (str.equals("181"))
                return _181;
            if (str.equals("182"))
                return _182;
            if (str.equals("184"))
                return _184;
            if (str.equals("183"))
                return _183;
            if (str.equals("185"))
                return _185;
            if (str.equals("186"))
                return _186;
            if (str.equals("188"))
                return _188;
            if (str.equals("187"))
                return _187;
            if (str.equals("189"))
                return _189;
            if (str.equals("190"))
                return _190;
            if (str.equals("191"))
                return _191;
            if (str.equals("192"))
                return _192;
            if (str.equals("193"))
                return _193;
            if (str.equals("194"))
                return _194;
            if (str.equals("195"))
                return _195;
            if (str.equals("196"))
                return _196;
            if (str.equals("197"))
                return _197;
            if (str.equals("198"))
                return _198;
            if (str.equals("199"))
                return _199;
            if (str.equals("200"))
                return _200;
            if (str.equals("201"))
                return _201;
            if (str.equals("202"))
                return _202;
            if (str.equals("203"))
                return _203;
            if (str.equals("204"))
                return _204;
            if (str.equals("205"))
                return _205;
            if (str.equals("206"))
                return _206;
            if (str.equals("207"))
                return _207;
            if (str.equals("208"))
                return _208;
            if (str.equals("209"))
                return _209;
            if (str.equals("210"))
                return _210;
            if (str.equals("212"))
                return _212;
            if (str.equals("211"))
                return _211;
            if (str.equals("213"))
                return _213;
            if (str.equals("214"))
                return _214;
            if (str.equals("215"))
                return _215;
            if (str.equals("216"))
                return _216;
            if (str.equals("217"))
                return _217;
            if (str.equals("219"))
                return _219;
            if (str.equals("218"))
                return _218;
            if (str.equals("220"))
                return _220;
            if (str.equals("221"))
                return _221;
            if (str.equals("222"))
                return _222;
            if (str.equals("223"))
                return _223;
            if (str.equals("224"))
                return _224;
            if (str.equals("225"))
                return _225;
            if (str.equals("226"))
                return _226;
            if (str.equals("227"))
                return _227;
            if (str.equals("228"))
                return _228;
            if (str.equals("229"))
                return _229;
            if (str.equals("230"))
                return _230;
            if (str.equals("231"))
                return _231;
            if (str.equals("232"))
                return _232;
            if (str.equals("233"))
                return _233;
            if (str.equals("234"))
                return _234;
            if (str.equals("235"))
                return _235;
            if (str.equals("236"))
                return _236;
            if (str.equals("237"))
                return _237;
            if (str.equals("238"))
                return _238;
            if (str.equals("239"))
                return _239;
            if (str.equals("240"))
                return _240;
            if (str.equals("241"))
                return _241;
            if (str.equals("242"))
                return _242;
            if (str.equals("243"))
                return _243;
            if (str.equals("244"))
                return _244;
            if (str.equals("245"))
                return _245;
            if (str.equals("247"))
                return _247;
            if (str.equals("248"))
                return _248;
            if (str.equals("246"))
                return _246;
            if (str.equals("249"))
                return _249;
            if (str.equals("250"))
                return _250;
            if (str.equals("251"))
                return _251;
            if (str.equals("252"))
                return _252;
            if (str.equals("253"))
                return _253;
            if (str.equals("254"))
                return _254;
            if (str.equals("255"))
                return _255;
            if (str.equals("257"))
                return _257;
            if (str.equals("256"))
                return _256;
            if (str.equals("258"))
                return _258;
            if (str.equals("259"))
                return _259;
            if (str.equals("260"))
                return _260;
            if (str.equals("261"))
                return _261;
            if (str.equals("262"))
                return _262;
            if (str.equals("263"))
                return _263;
            if (str.equals("264"))
                return _264;
            if (str.equals("265"))
                return _265;
            if (str.equals("266"))
                return _266;
            if (str.equals("267"))
                return _267;
            if (str.equals("268"))
                return _268;
            if (str.equals("269"))
                return _269;
            if (str.equals("270"))
                return _270;
            if (str.equals("271"))
                return _271;
            if (str.equals("272"))
                return _272;
            if (str.equals("273"))
                return _273;
            if (str.equals("274"))
                return _274;
            if (str.equals("275"))
                return _275;
            if (str.equals("276"))
                return _276;
            if (str.equals("277"))
                return _277;
            if (str.equals("278"))
                return _278;
            if (str.equals("279"))
                return _279;
            if (str.equals("280"))
                return _280;
            if (str.equals("281"))
                return _281;
            if (str.equals("282"))
                return _282;
            if (str.equals("283"))
                return _283;
            if (str.equals("284"))
                return _284;
            if (str.equals("285"))
                return _285;
            if (str.equals("286"))
                return _286;
            if (str.equals("287"))
                return _287;
            if (str.equals("288"))
                return _288;
            if (str.equals("289"))
                return _289;
            if (str.equals("291"))
                return _291;
            if (str.equals("290"))
                return _290;
            if (str.equals("292"))
                return _292;
            if (str.equals("293"))
                return _293;
            if (str.equals("294"))
                return _294;
            if (str.equals("295"))
                return _295;
            if (str.equals("296"))
                return _296;
            if (str.equals("297"))
                return _297;
            if (str.equals("298"))
                return _298;
            if (str.equals("299"))
                return _299;
            if (str.equals("300"))
                return _300;
            if (str.equals("301"))
                return _301;
            if (str.equals("302"))
                return _302;
            if (str.equals("303"))
                return _303;
            if (str.equals("304"))
                return _304;
            if (str.equals("305"))
                return _305;
            if (str.equals("306"))
                return _306;
            if (str.equals("308"))
                return _308;
            if (str.equals("307"))
                return _307;
            if (str.equals("309"))
                return _309;
            if (str.equals("310"))
                return _310;
            if (str.equals("311"))
                return _311;
            if (str.equals("312"))
                return _312;
            if (str.equals("313"))
                return _313;
            if (str.equals("314"))
                return _314;
            if (str.equals("315"))
                return _315;
            if (str.equals("316"))
                return _316;
            if (str.equals("317"))
                return _317;
            if (str.equals("318"))
                return _318;
            if (str.equals("319"))
                return _319;
            if (str.equals("320"))
                return _320;
            if (str.equals("321"))
                return _321;
            if (str.equals("34"))
                return _34;
            if (str.equals("322"))
                return _322;
            if (str.equals("323"))
                return _323;
            if (str.equals("324"))
                return _324;
            if (str.equals("325"))
                return _325;
            if (str.equals("326"))
                return _326;
            if (str.equals("327"))
                return _327;
            if (str.equals("328"))
                return _328;
            if (str.equals("329"))
                return _329;
            if (str.equals("330"))
                return _330;
            if (str.equals("331"))
                return _331;
            if (str.equals("332"))
                return _332;
            if (str.equals("333"))
                return _333;
            if (str.equals("334"))
                return _334;
            if (str.equals("335"))
                return _335;
            if (str.equals("336"))
                return _336;
            if (str.equals("337"))
                return _337;
		    return null;
        }
    }

	/**
	* abstDomain: A19741 (C-0-T14866-A19741-cpt)
	*/
    public enum x_PhoneOrEmailURLScheme
    {
        
        fax(0),
        
        mailto(1),
        
        tel(2);
        
        private int code;
        
        x_PhoneOrEmailURLScheme(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_PhoneOrEmailURLScheme fromString(String str)
        {
            if (str.equals("fax"))
                return fax;
            if (str.equals("mailto"))
                return mailto;
            if (str.equals("tel"))
                return tel;
		    return null;
        }
    }

	/**
	* abstDomain: A19742 (C-0-T14866-A19742-cpt)
	*/
    public enum x_PhoneURLScheme
    {
        
        fax(0),
        
        tel(1);
        
        private int code;
        
        x_PhoneURLScheme(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static x_PhoneURLScheme fromString(String str)
        {
            if (str.equals("fax"))
                return fax;
            if (str.equals("tel"))
                return tel;
		    return null;
        }
    }

	/**
	* abstDomain: A12550 (C-0-T12549-A12550-cpt)
	*/
    public enum UnitOfMeasureAtomBaseUnitInsens
    {
        
        C(0),
        
        K(1),
        
        CD(2),
        
        G(3),
        
        M(4),
        
        RAD(5),
        
        S(6);
        
        private int code;
        
        UnitOfMeasureAtomBaseUnitInsens(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UnitOfMeasureAtomBaseUnitInsens fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("K"))
                return K;
            if (str.equals("CD"))
                return CD;
            if (str.equals("G"))
                return G;
            if (str.equals("M"))
                return M;
            if (str.equals("RAD"))
                return RAD;
            if (str.equals("S"))
                return S;
		    return null;
        }
    }

	/**
	* abstDomain: A12558 (C-0-T12549-A12558-cpt)
	*/
    public enum UnitOfMeasureAtomInsens
    {
        
        _x005B_APL_x0027_U_x005D_(0,"[APL'U]"),
        
        A(1,"A"),
        
        AO(2,"AO"),
        
        BQ(3,"BQ"),
        
        _x005B_BETH_x0027_U_x005D_(4,"[BETH'U]"),
        
        BI(5,"BI"),
        
        _x005B_BDSK_x0027_U_x005D_(6,"[BDSK'U]"),
        
        _x005B_K_x005D_(7,"[K]"),
        
        _x005B_BTU_39_x005D_(8,"[BTU_39]"),
        
        _x005B_BTU_59_x005D_(9,"[BTU_59]"),
        
        _x005B_BTU_60_x005D_(10,"[BTU_60]"),
        
        _x005B_BTU_IT_x005D_(11,"[BTU_IT]"),
        
        _x005B_BTU_M_x005D_(12,"[BTU_M]"),
        
        _x005B_BTU_TH_x005D_(13,"[BTU_TH]"),
        
        _x005B_BTU_x005D_(14,"[BTU]"),
        
        _x005B_CAL_x005D_(15,"[CAL]"),
        
        _x005B_CH_x005D_(16,"[CH]"),
        
        CI(17,"CI"),
        
        _x005B_DYE_x0027_U_x005D_(18,"[DYE'U]"),
        
        F(19,"F"),
        
        _x005B_GPL_x0027_U_x005D_(20,"[GPL'U]"),
        
        GL(21,"GL"),
        
        GS(22,"GS"),
        
        GB(23,"GB"),
        
        GY(24,"GY"),
        
        H(25,"H"),
        
        HZ(26,"HZ"),
        
        _x005B_HNSF_x0027_U_x005D_(27,"[HNSF'U]"),
        
        J(28,"J"),
        
        KY(29,"KY"),
        
        _x005B_KA_x0027_U_x005D_(30,"[KA'U]"),
        
        _x005B_KNK_x0027_U_x005D_(31,"[KNK'U]"),
        
        LMB(32,"LMB"),
        
        _x005B_MPL_x0027_U_x005D_(33,"[MPL'U]"),
        
        _x005B_MCLG_x0027_U_x005D_(34,"[MCLG'U]"),
        
        MX(35,"MX"),
        
        N(36,"N"),
        
        _x005B_GC_x005D_(37,"[GC]"),
        
        OE(38,"OE"),
        
        OHM(39,"OHM"),
        
        PAL(40,"PAL"),
        
        _x005B_H_x005D_(41,"[H]"),
        
        P(42,"P"),
        
        _x005B_PCA_PR_x005D_(43,"[PCA_PR]"),
        
        _x005B_PNT_PR_x005D_(44,"[PNT_PR]"),
        
        ROE(45,"ROE"),
        
        SIE(46,"SIE"),
        
        SV(47,"SV"),
        
        _x005B_SMGY_x0027_U_x005D_(48,"[SMGY'U]"),
        
        ST(49,"ST"),
        
        _x005B_S_x005D_(50,"[S]"),
        
        T(51,"T"),
        
        _x005B_TODD_x0027_U_x005D_(52,"[TODD'U]"),
        
        U(53,"U"),
        
        _x005B_USP_x0027_U_x005D_(54,"[USP'U]"),
        
        V(55,"V"),
        
        W(56,"W"),
        
        WB(57,"WB"),
        
        _x005B_G_x005D_(58,"[G]"),
        
        _x005B_ACR_BR_x005D_(59,"[ACR_BR]"),
        
        _x005B_ACR_US_x005D_(60,"[ACR_US]"),
        
        _x005B_ARB_x0027_U_x005D_(61,"[ARB'U]"),
        
        AR(62,"AR"),
        
        ASU(63,"ASU"),
        
        ATM(64,"ATM"),
        
        ATT(65,"ATT"),
        
        BAR(66,"BAR"),
        
        BRN(67,"BRN"),
        
        _x005B_BBL_US_x005D_(68,"[BBL_US]"),
        
        BD(69,"BD"),
        
        B(70,"B"),
        
        B_x005B_KW_x005D_(71,"B[KW]"),
        
        B_x005B_UV_x005D_(72,"B[UV]"),
        
        B_x005B_MV_x005D_(73,"B[MV]"),
        
        B_x005B_SPL_x005D_(74,"B[SPL]"),
        
        B_x005B_V_x005D_(75,"B[V]"),
        
        B_x005B_W_x005D_(76,"B[W]"),
        
        BIT(77,"BIT"),
        
        BIT_S(78,"BIT_S"),
        
        _x005B_BF_I_x005D_(79,"[BF_I]"),
        
        _x005B_BU_US_x005D_(80,"[BU_US]"),
        
        _x005B_PK_BR_x005D_(81,"[PK_BR]"),
        
        BY(82,"BY"),
        
        CAL__x005B_15_x005D_(83,"CAL_[15]"),
        
        CAL__x005B_20_x005D_(84,"CAL_[20]"),
        
        CAL_IT(85,"CAL_IT"),
        
        CAL_M(86,"CAL_M"),
        
        CAL_TH(87,"CAL_TH"),
        
        CAL(88,"CAL"),
        
        _x005B_CAR_M_x005D_(89,"[CAR_M]"),
        
        _x005B_CAR_AU_x005D_(90,"[CAR_AU]"),
        
        _x005B_CH_BR_x005D_(91,"[CH_BR]"),
        
        _x005B_CH_US_x005D_(92,"[CH_US]"),
        
        _x005B_RCH_US_x005D_(93,"[RCH_US]"),
        
        _x005B_CICERO_x005D_(94,"[CICERO]"),
        
        CIRC(95,"CIRC"),
        
        _x005B_CML_I_x005D_(96,"[CML_I]"),
        
        _x005B_CR_I_x005D_(97,"[CR_I]"),
        
        _x005B_CRD_US_x005D_(98,"[CRD_US]"),
        
        _x005B_CFT_I_x005D_(99,"[CFT_I]"),
        
        _x005B_CIN_I_x005D_(100,"[CIN_I]"),
        
        _x005B_CYD_I_x005D_(101,"[CYD_I]"),
        
        _x005B_CUP_US_x005D_(102,"[CUP_US]"),
        
        D(103,"D"),
        
        DEG(104,"DEG"),
        
        CEL(105,"CEL"),
        
        _x005B_DEGF_x005D_(106,"[DEGF]"),
        
        _x005B_DIDOT_x005D_(107,"[DIDOT]"),
        
        _x005B_DIOP_x005D_(108,"[DIOP]"),
        
        _x005B_DR_AV_x005D_(109,"[DR_AV]"),
        
        _x005B_DR_AP_x005D_(110,"[DR_AP]"),
        
        _x005B_DRP_x005D_(111,"[DRP]"),
        
        _x005B_DPT_US_x005D_(112,"[DPT_US]"),
        
        _x005B_DQT_US_x005D_(113,"[DQT_US]"),
        
        DYN(114,"DYN"),
        
        _x005B_M_E_x005D_(115,"[M_E]"),
        
        EV(116,"EV"),
        
        _x005B_E_x005D_(117,"[E]"),
        
        EQ(118,"EQ"),
        
        ERG(119,"ERG"),
        
        _x005B_FTH_BR_x005D_(120,"[FTH_BR]"),
        
        _x005B_FTH_I_x005D_(121,"[FTH_I]"),
        
        _x005B_FTH_US_x005D_(122,"[FTH_US]"),
        
        _x005B_FDR_BR_x005D_(123,"[FDR_BR]"),
        
        _x005B_FDR_US_x005D_(124,"[FDR_US]"),
        
        _x005B_FOZ_BR_x005D_(125,"[FOZ_BR]"),
        
        _x005B_FOZ_US_x005D_(126,"[FOZ_US]"),
        
        _x005B_FT_BR_x005D_(127,"[FT_BR]"),
        
        _x005B_FT_I_x005D_(128,"[FT_I]"),
        
        _x005B_FT_US_x005D_(129,"[FT_US]"),
        
        _x005B_RD_BR_x005D_(130,"[RD_BR]"),
        
        _x005B_FUR_US_x005D_(131,"[FUR_US]"),
        
        _x005B_GAL_BR_x005D_(132,"[GAL_BR]"),
        
        _x005B_GAL_US_x005D_(133,"[GAL_US]"),
        
        _x005B_GIL_BR_x005D_(134,"[GIL_BR]"),
        
        _x005B_GIL_US_x005D_(135,"[GIL_US]"),
        
        GON(136,"GON"),
        
        _x005B_GR_x005D_(137,"[GR]"),
        
        G_x0025_(138,"G%"),
        
        GF(139,"GF"),
        
        _x005B_HD_I_x005D_(140,"[HD_I]"),
        
        _x005B_HPF_x005D_(141,"[HPF]"),
        
        HR(142,"HR"),
        
        _x005B_IN_BR_x005D_(143,"[IN_BR]"),
        
        _x005B_IN_I_x005D_(144,"[IN_I]"),
        
        _x005B_IN_US_x005D_(145,"[IN_US]"),
        
        _x005B_IN_I_x0027_HG_x005D_(146,"[IN_I'HG]"),
        
        _x005B_IN_I_x0027_H2O_x005D_(147,"[IN_I'H2O]"),
        
        _x005B_IU_x005D_(148,"[IU]"),
        
        KAT(149,"KAT"),
        
        _x005B_KN_BR_x005D_(150,"[KN_BR]"),
        
        _x005B_KN_I_x005D_(151,"[KN_I]"),
        
        _x005B_LY_x005D_(152,"[LY]"),
        
        _x005B_LIGNE_x005D_(153,"[LIGNE]"),
        
        _x005B_LNE_x005D_(154,"[LNE]"),
        
        _x005B_LK_BR_x005D_(155,"[LK_BR]"),
        
        _x005B_LK_US_x005D_(156,"[LK_US]"),
        
        _x005B_RLK_US_x005D_(157,"[RLK_US]"),
        
        L(158,"L"),
        
        _x005B_LCWT_AV_x005D_(159,"[LCWT_AV]"),
        
        _x005B_LTON_AV_x005D_(160,"[LTON_AV]"),
        
        _x005B_LPF_x005D_(161,"[LPF]"),
        
        LM(162,"LM"),
        
        LX(163,"LX"),
        
        _x005B_MESH_I_x005D_(164,"[MESH_I]"),
        
        _x005B_MET_x005D_(165,"[MET]"),
        
        M_x005B_HG_x005D_(166,"M[HG]"),
        
        M_x005B_H2O_x005D_(167,"M[H2O]"),
        
        _x005B_MIL_I_x005D_(168,"[MIL_I]"),
        
        _x005B_MIL_US_x005D_(169,"[MIL_US]"),
        
        _x005B_MI_BR_x005D_(170,"[MI_BR]"),
        
        _x005B_MI_US_x005D_(171,"[MI_US]"),
        
        _x005B_MIN_BR_x005D_(172,"[MIN_BR]"),
        
        _x005B_MIN_US_x005D_(173,"[MIN_US]"),
        
        _x0027_(174,"'"),
        
        MIN(175,"MIN"),
        
        MOL(176,"MOL"),
        
        MO(177,"MO"),
        
        MO_G(178,"MO_G"),
        
        MO_J(179,"MO_J"),
        
        MO_S(180,"MO_S"),
        
        _x005B_NMI_BR_x005D_(181,"[NMI_BR]"),
        
        _x005B_NMI_I_x005D_(182,"[NMI_I]"),
        
        NEP(183,"NEP"),
        
        OSM(184,"OSM"),
        
        _x005B_OZ_AP_x005D_(185,"[OZ_AP]"),
        
        _x005B_OZ_AV_x005D_(186,"[OZ_AV]"),
        
        _x005B_OZ_TR_x005D_(187,"[OZ_TR]"),
        
        _x005B_PH_x005D_(188,"[PH]"),
        
        _x005B_PC_BR_x005D_(189,"[PC_BR]"),
        
        PRS(190,"PRS"),
        
        _x005B_PPB_x005D_(191,"[PPB]"),
        
        _x005B_PPM_x005D_(192,"[PPM]"),
        
        _x005B_PPTH_x005D_(193,"[PPTH]"),
        
        _x005B_PPTR_x005D_(194,"[PPTR]"),
        
        _x005B_BU_BR_x005D_(195,"[BU_BR]"),
        
        _x005B_PK_US_x005D_(196,"[PK_US]"),
        
        _x005B_PWT_TR_x005D_(197,"[PWT_TR]"),
        
        _x0025_(198,"%"),
        
        _x005B_PRU_x005D_(199,"[PRU]"),
        
        _x005B_MU_0_x005D_(200,"[MU_0]"),
        
        _x005B_EPS_0_x005D_(201,"[EPS_0]"),
        
        PHT(202,"PHT"),
        
        _x005B_PCA_x005D_(203,"[PCA]"),
        
        _x005B_PIED_x005D_(204,"[PIED]"),
        
        _x005B_PT_BR_x005D_(205,"[PT_BR]"),
        
        _x005B_PT_US_x005D_(206,"[PT_US]"),
        
        _x005B_PNT_x005D_(207,"[PNT]"),
        
        _x005B_POUCE_x005D_(208,"[POUCE]"),
        
        _x005B_LB_AP_x005D_(209,"[LB_AP]"),
        
        _x005B_LB_AV_x005D_(210,"[LB_AV]"),
        
        _x005B_LB_TR_x005D_(211,"[LB_TR]"),
        
        _x005B_LBF_AV_x005D_(212,"[LBF_AV]"),
        
        _x005B_M_P_x005D_(213,"[M_P]"),
        
        _x005B_PSI_x005D_(214,"[PSI]"),
        
        _x005B_QT_BR_x005D_(215,"[QT_BR]"),
        
        _x005B_QT_US_x005D_(216,"[QT_US]"),
        
        _x005B_RAD_x005D_(217,"[RAD]"),
        
        _x005B_REM_x005D_(218,"[REM]"),
        
        _x005B_RD_US_x005D_(219,"[RD_US]"),
        
        _x005B_SC_AP_x005D_(220,"[SC_AP]"),
        
        _x0027__x0027_(221,"''"),
        
        _x005B_SCT_x005D_(222,"[SCT]"),
        
        _x005B_SCWT_AV_x005D_(223,"[SCWT_AV]"),
        
        _x005B_STON_AV_x005D_(224,"[STON_AV]"),
        
        SPH(225,"SPH"),
        
        _x005B_SFT_I_x005D_(226,"[SFT_I]"),
        
        _x005B_SIN_I_x005D_(227,"[SIN_I]"),
        
        _x005B_SMI_US_x005D_(228,"[SMI_US]"),
        
        _x005B_SRD_US_x005D_(229,"[SRD_US]"),
        
        _x005B_SYD_I_x005D_(230,"[SYD_I]"),
        
        _x005B_MI_I_x005D_(231,"[MI_I]"),
        
        STR(232,"STR"),
        
        SB(233,"SB"),
        
        _x005B_STONE_AV_x005D_(234,"[STONE_AV]"),
        
        SR(235,"SR"),
        
        _x005B_TBS_US_x005D_(236,"[TBS_US]"),
        
        _x005B_TSP_US_x005D_(237,"[TSP_US]"),
        
        _10_x002A_(238,"10*"),
        
        _x005B_PI_x005D_(239,"[PI]"),
        
        TNE(240,"TNE"),
        
        _x005B_TWP_x005D_(241,"[TWP]"),
        
        _x005B_TB_x0027_U_x005D_(242,"[TB'U]"),
        
        AMU(243,"AMU"),
        
        _x005B_C_x005D_(244,"[C]"),
        
        WK(245,"WK"),
        
        _x005B_GAL_WI_x005D_(246,"[GAL_WI]"),
        
        _x005B_YD_BR_x005D_(247,"[YD_BR]"),
        
        _x005B_YD_I_x005D_(248,"[YD_I]"),
        
        _x005B_YD_US_x005D_(249,"[YD_US]"),
        
        ANN(250,"ANN"),
        
        ANN_G(251,"ANN_G"),
        
        ANN_J(252,"ANN_J"),
        
        ANN_T(253,"ANN_T");
        
        private int code;
        private java.lang.String xmlValue;
        
        UnitOfMeasureAtomInsens(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static UnitOfMeasureAtomInsens fromString(String str)
        {
            if (str.equals("[APL'U]"))
                return _x005B_APL_x0027_U_x005D_;
            if (str.equals("A"))
                return A;
            if (str.equals("AO"))
                return AO;
            if (str.equals("BQ"))
                return BQ;
            if (str.equals("[BETH'U]"))
                return _x005B_BETH_x0027_U_x005D_;
            if (str.equals("BI"))
                return BI;
            if (str.equals("[BDSK'U]"))
                return _x005B_BDSK_x0027_U_x005D_;
            if (str.equals("[K]"))
                return _x005B_K_x005D_;
            if (str.equals("[BTU_39]"))
                return _x005B_BTU_39_x005D_;
            if (str.equals("[BTU_59]"))
                return _x005B_BTU_59_x005D_;
            if (str.equals("[BTU_60]"))
                return _x005B_BTU_60_x005D_;
            if (str.equals("[BTU_IT]"))
                return _x005B_BTU_IT_x005D_;
            if (str.equals("[BTU_M]"))
                return _x005B_BTU_M_x005D_;
            if (str.equals("[BTU_TH]"))
                return _x005B_BTU_TH_x005D_;
            if (str.equals("[BTU]"))
                return _x005B_BTU_x005D_;
            if (str.equals("[CAL]"))
                return _x005B_CAL_x005D_;
            if (str.equals("[CH]"))
                return _x005B_CH_x005D_;
            if (str.equals("CI"))
                return CI;
            if (str.equals("[DYE'U]"))
                return _x005B_DYE_x0027_U_x005D_;
            if (str.equals("F"))
                return F;
            if (str.equals("[GPL'U]"))
                return _x005B_GPL_x0027_U_x005D_;
            if (str.equals("GL"))
                return GL;
            if (str.equals("GS"))
                return GS;
            if (str.equals("GB"))
                return GB;
            if (str.equals("GY"))
                return GY;
            if (str.equals("H"))
                return H;
            if (str.equals("HZ"))
                return HZ;
            if (str.equals("[HNSF'U]"))
                return _x005B_HNSF_x0027_U_x005D_;
            if (str.equals("J"))
                return J;
            if (str.equals("KY"))
                return KY;
            if (str.equals("[KA'U]"))
                return _x005B_KA_x0027_U_x005D_;
            if (str.equals("[KNK'U]"))
                return _x005B_KNK_x0027_U_x005D_;
            if (str.equals("LMB"))
                return LMB;
            if (str.equals("[MPL'U]"))
                return _x005B_MPL_x0027_U_x005D_;
            if (str.equals("[MCLG'U]"))
                return _x005B_MCLG_x0027_U_x005D_;
            if (str.equals("MX"))
                return MX;
            if (str.equals("N"))
                return N;
            if (str.equals("[GC]"))
                return _x005B_GC_x005D_;
            if (str.equals("OE"))
                return OE;
            if (str.equals("OHM"))
                return OHM;
            if (str.equals("PAL"))
                return PAL;
            if (str.equals("[H]"))
                return _x005B_H_x005D_;
            if (str.equals("P"))
                return P;
            if (str.equals("[PCA_PR]"))
                return _x005B_PCA_PR_x005D_;
            if (str.equals("[PNT_PR]"))
                return _x005B_PNT_PR_x005D_;
            if (str.equals("ROE"))
                return ROE;
            if (str.equals("SIE"))
                return SIE;
            if (str.equals("SV"))
                return SV;
            if (str.equals("[SMGY'U]"))
                return _x005B_SMGY_x0027_U_x005D_;
            if (str.equals("ST"))
                return ST;
            if (str.equals("[S]"))
                return _x005B_S_x005D_;
            if (str.equals("T"))
                return T;
            if (str.equals("[TODD'U]"))
                return _x005B_TODD_x0027_U_x005D_;
            if (str.equals("U"))
                return U;
            if (str.equals("[USP'U]"))
                return _x005B_USP_x0027_U_x005D_;
            if (str.equals("V"))
                return V;
            if (str.equals("W"))
                return W;
            if (str.equals("WB"))
                return WB;
            if (str.equals("[G]"))
                return _x005B_G_x005D_;
            if (str.equals("[ACR_BR]"))
                return _x005B_ACR_BR_x005D_;
            if (str.equals("[ACR_US]"))
                return _x005B_ACR_US_x005D_;
            if (str.equals("[ARB'U]"))
                return _x005B_ARB_x0027_U_x005D_;
            if (str.equals("AR"))
                return AR;
            if (str.equals("ASU"))
                return ASU;
            if (str.equals("ATM"))
                return ATM;
            if (str.equals("ATT"))
                return ATT;
            if (str.equals("BAR"))
                return BAR;
            if (str.equals("BRN"))
                return BRN;
            if (str.equals("[BBL_US]"))
                return _x005B_BBL_US_x005D_;
            if (str.equals("BD"))
                return BD;
            if (str.equals("B"))
                return B;
            if (str.equals("B[KW]"))
                return B_x005B_KW_x005D_;
            if (str.equals("B[UV]"))
                return B_x005B_UV_x005D_;
            if (str.equals("B[MV]"))
                return B_x005B_MV_x005D_;
            if (str.equals("B[SPL]"))
                return B_x005B_SPL_x005D_;
            if (str.equals("B[V]"))
                return B_x005B_V_x005D_;
            if (str.equals("B[W]"))
                return B_x005B_W_x005D_;
            if (str.equals("BIT"))
                return BIT;
            if (str.equals("BIT_S"))
                return BIT_S;
            if (str.equals("[BF_I]"))
                return _x005B_BF_I_x005D_;
            if (str.equals("[BU_US]"))
                return _x005B_BU_US_x005D_;
            if (str.equals("[PK_BR]"))
                return _x005B_PK_BR_x005D_;
            if (str.equals("BY"))
                return BY;
            if (str.equals("CAL_[15]"))
                return CAL__x005B_15_x005D_;
            if (str.equals("CAL_[20]"))
                return CAL__x005B_20_x005D_;
            if (str.equals("CAL_IT"))
                return CAL_IT;
            if (str.equals("CAL_M"))
                return CAL_M;
            if (str.equals("CAL_TH"))
                return CAL_TH;
            if (str.equals("CAL"))
                return CAL;
            if (str.equals("[CAR_M]"))
                return _x005B_CAR_M_x005D_;
            if (str.equals("[CAR_AU]"))
                return _x005B_CAR_AU_x005D_;
            if (str.equals("[CH_BR]"))
                return _x005B_CH_BR_x005D_;
            if (str.equals("[CH_US]"))
                return _x005B_CH_US_x005D_;
            if (str.equals("[RCH_US]"))
                return _x005B_RCH_US_x005D_;
            if (str.equals("[CICERO]"))
                return _x005B_CICERO_x005D_;
            if (str.equals("CIRC"))
                return CIRC;
            if (str.equals("[CML_I]"))
                return _x005B_CML_I_x005D_;
            if (str.equals("[CR_I]"))
                return _x005B_CR_I_x005D_;
            if (str.equals("[CRD_US]"))
                return _x005B_CRD_US_x005D_;
            if (str.equals("[CFT_I]"))
                return _x005B_CFT_I_x005D_;
            if (str.equals("[CIN_I]"))
                return _x005B_CIN_I_x005D_;
            if (str.equals("[CYD_I]"))
                return _x005B_CYD_I_x005D_;
            if (str.equals("[CUP_US]"))
                return _x005B_CUP_US_x005D_;
            if (str.equals("D"))
                return D;
            if (str.equals("DEG"))
                return DEG;
            if (str.equals("CEL"))
                return CEL;
            if (str.equals("[DEGF]"))
                return _x005B_DEGF_x005D_;
            if (str.equals("[DIDOT]"))
                return _x005B_DIDOT_x005D_;
            if (str.equals("[DIOP]"))
                return _x005B_DIOP_x005D_;
            if (str.equals("[DR_AV]"))
                return _x005B_DR_AV_x005D_;
            if (str.equals("[DR_AP]"))
                return _x005B_DR_AP_x005D_;
            if (str.equals("[DRP]"))
                return _x005B_DRP_x005D_;
            if (str.equals("[DPT_US]"))
                return _x005B_DPT_US_x005D_;
            if (str.equals("[DQT_US]"))
                return _x005B_DQT_US_x005D_;
            if (str.equals("DYN"))
                return DYN;
            if (str.equals("[M_E]"))
                return _x005B_M_E_x005D_;
            if (str.equals("EV"))
                return EV;
            if (str.equals("[E]"))
                return _x005B_E_x005D_;
            if (str.equals("EQ"))
                return EQ;
            if (str.equals("ERG"))
                return ERG;
            if (str.equals("[FTH_BR]"))
                return _x005B_FTH_BR_x005D_;
            if (str.equals("[FTH_I]"))
                return _x005B_FTH_I_x005D_;
            if (str.equals("[FTH_US]"))
                return _x005B_FTH_US_x005D_;
            if (str.equals("[FDR_BR]"))
                return _x005B_FDR_BR_x005D_;
            if (str.equals("[FDR_US]"))
                return _x005B_FDR_US_x005D_;
            if (str.equals("[FOZ_BR]"))
                return _x005B_FOZ_BR_x005D_;
            if (str.equals("[FOZ_US]"))
                return _x005B_FOZ_US_x005D_;
            if (str.equals("[FT_BR]"))
                return _x005B_FT_BR_x005D_;
            if (str.equals("[FT_I]"))
                return _x005B_FT_I_x005D_;
            if (str.equals("[FT_US]"))
                return _x005B_FT_US_x005D_;
            if (str.equals("[RD_BR]"))
                return _x005B_RD_BR_x005D_;
            if (str.equals("[FUR_US]"))
                return _x005B_FUR_US_x005D_;
            if (str.equals("[GAL_BR]"))
                return _x005B_GAL_BR_x005D_;
            if (str.equals("[GAL_US]"))
                return _x005B_GAL_US_x005D_;
            if (str.equals("[GIL_BR]"))
                return _x005B_GIL_BR_x005D_;
            if (str.equals("[GIL_US]"))
                return _x005B_GIL_US_x005D_;
            if (str.equals("GON"))
                return GON;
            if (str.equals("[GR]"))
                return _x005B_GR_x005D_;
            if (str.equals("G%"))
                return G_x0025_;
            if (str.equals("GF"))
                return GF;
            if (str.equals("[HD_I]"))
                return _x005B_HD_I_x005D_;
            if (str.equals("[HPF]"))
                return _x005B_HPF_x005D_;
            if (str.equals("HR"))
                return HR;
            if (str.equals("[IN_BR]"))
                return _x005B_IN_BR_x005D_;
            if (str.equals("[IN_I]"))
                return _x005B_IN_I_x005D_;
            if (str.equals("[IN_US]"))
                return _x005B_IN_US_x005D_;
            if (str.equals("[IN_I'HG]"))
                return _x005B_IN_I_x0027_HG_x005D_;
            if (str.equals("[IN_I'H2O]"))
                return _x005B_IN_I_x0027_H2O_x005D_;
            if (str.equals("[IU]"))
                return _x005B_IU_x005D_;
            if (str.equals("KAT"))
                return KAT;
            if (str.equals("[KN_BR]"))
                return _x005B_KN_BR_x005D_;
            if (str.equals("[KN_I]"))
                return _x005B_KN_I_x005D_;
            if (str.equals("[LY]"))
                return _x005B_LY_x005D_;
            if (str.equals("[LIGNE]"))
                return _x005B_LIGNE_x005D_;
            if (str.equals("[LNE]"))
                return _x005B_LNE_x005D_;
            if (str.equals("[LK_BR]"))
                return _x005B_LK_BR_x005D_;
            if (str.equals("[LK_US]"))
                return _x005B_LK_US_x005D_;
            if (str.equals("[RLK_US]"))
                return _x005B_RLK_US_x005D_;
            if (str.equals("L"))
                return L;
            if (str.equals("[LCWT_AV]"))
                return _x005B_LCWT_AV_x005D_;
            if (str.equals("[LTON_AV]"))
                return _x005B_LTON_AV_x005D_;
            if (str.equals("[LPF]"))
                return _x005B_LPF_x005D_;
            if (str.equals("LM"))
                return LM;
            if (str.equals("LX"))
                return LX;
            if (str.equals("[MESH_I]"))
                return _x005B_MESH_I_x005D_;
            if (str.equals("[MET]"))
                return _x005B_MET_x005D_;
            if (str.equals("M[HG]"))
                return M_x005B_HG_x005D_;
            if (str.equals("M[H2O]"))
                return M_x005B_H2O_x005D_;
            if (str.equals("[MIL_I]"))
                return _x005B_MIL_I_x005D_;
            if (str.equals("[MIL_US]"))
                return _x005B_MIL_US_x005D_;
            if (str.equals("[MI_BR]"))
                return _x005B_MI_BR_x005D_;
            if (str.equals("[MI_US]"))
                return _x005B_MI_US_x005D_;
            if (str.equals("[MIN_BR]"))
                return _x005B_MIN_BR_x005D_;
            if (str.equals("[MIN_US]"))
                return _x005B_MIN_US_x005D_;
            if (str.equals("'"))
                return _x0027_;
            if (str.equals("MIN"))
                return MIN;
            if (str.equals("MOL"))
                return MOL;
            if (str.equals("MO"))
                return MO;
            if (str.equals("MO_G"))
                return MO_G;
            if (str.equals("MO_J"))
                return MO_J;
            if (str.equals("MO_S"))
                return MO_S;
            if (str.equals("[NMI_BR]"))
                return _x005B_NMI_BR_x005D_;
            if (str.equals("[NMI_I]"))
                return _x005B_NMI_I_x005D_;
            if (str.equals("NEP"))
                return NEP;
            if (str.equals("OSM"))
                return OSM;
            if (str.equals("[OZ_AP]"))
                return _x005B_OZ_AP_x005D_;
            if (str.equals("[OZ_AV]"))
                return _x005B_OZ_AV_x005D_;
            if (str.equals("[OZ_TR]"))
                return _x005B_OZ_TR_x005D_;
            if (str.equals("[PH]"))
                return _x005B_PH_x005D_;
            if (str.equals("[PC_BR]"))
                return _x005B_PC_BR_x005D_;
            if (str.equals("PRS"))
                return PRS;
            if (str.equals("[PPB]"))
                return _x005B_PPB_x005D_;
            if (str.equals("[PPM]"))
                return _x005B_PPM_x005D_;
            if (str.equals("[PPTH]"))
                return _x005B_PPTH_x005D_;
            if (str.equals("[PPTR]"))
                return _x005B_PPTR_x005D_;
            if (str.equals("[BU_BR]"))
                return _x005B_BU_BR_x005D_;
            if (str.equals("[PK_US]"))
                return _x005B_PK_US_x005D_;
            if (str.equals("[PWT_TR]"))
                return _x005B_PWT_TR_x005D_;
            if (str.equals("%"))
                return _x0025_;
            if (str.equals("[PRU]"))
                return _x005B_PRU_x005D_;
            if (str.equals("[MU_0]"))
                return _x005B_MU_0_x005D_;
            if (str.equals("[EPS_0]"))
                return _x005B_EPS_0_x005D_;
            if (str.equals("PHT"))
                return PHT;
            if (str.equals("[PCA]"))
                return _x005B_PCA_x005D_;
            if (str.equals("[PIED]"))
                return _x005B_PIED_x005D_;
            if (str.equals("[PT_BR]"))
                return _x005B_PT_BR_x005D_;
            if (str.equals("[PT_US]"))
                return _x005B_PT_US_x005D_;
            if (str.equals("[PNT]"))
                return _x005B_PNT_x005D_;
            if (str.equals("[POUCE]"))
                return _x005B_POUCE_x005D_;
            if (str.equals("[LB_AP]"))
                return _x005B_LB_AP_x005D_;
            if (str.equals("[LB_AV]"))
                return _x005B_LB_AV_x005D_;
            if (str.equals("[LB_TR]"))
                return _x005B_LB_TR_x005D_;
            if (str.equals("[LBF_AV]"))
                return _x005B_LBF_AV_x005D_;
            if (str.equals("[M_P]"))
                return _x005B_M_P_x005D_;
            if (str.equals("[PSI]"))
                return _x005B_PSI_x005D_;
            if (str.equals("[QT_BR]"))
                return _x005B_QT_BR_x005D_;
            if (str.equals("[QT_US]"))
                return _x005B_QT_US_x005D_;
            if (str.equals("[RAD]"))
                return _x005B_RAD_x005D_;
            if (str.equals("[REM]"))
                return _x005B_REM_x005D_;
            if (str.equals("[RD_US]"))
                return _x005B_RD_US_x005D_;
            if (str.equals("[SC_AP]"))
                return _x005B_SC_AP_x005D_;
            if (str.equals("''"))
                return _x0027__x0027_;
            if (str.equals("[SCT]"))
                return _x005B_SCT_x005D_;
            if (str.equals("[SCWT_AV]"))
                return _x005B_SCWT_AV_x005D_;
            if (str.equals("[STON_AV]"))
                return _x005B_STON_AV_x005D_;
            if (str.equals("SPH"))
                return SPH;
            if (str.equals("[SFT_I]"))
                return _x005B_SFT_I_x005D_;
            if (str.equals("[SIN_I]"))
                return _x005B_SIN_I_x005D_;
            if (str.equals("[SMI_US]"))
                return _x005B_SMI_US_x005D_;
            if (str.equals("[SRD_US]"))
                return _x005B_SRD_US_x005D_;
            if (str.equals("[SYD_I]"))
                return _x005B_SYD_I_x005D_;
            if (str.equals("[MI_I]"))
                return _x005B_MI_I_x005D_;
            if (str.equals("STR"))
                return STR;
            if (str.equals("SB"))
                return SB;
            if (str.equals("[STONE_AV]"))
                return _x005B_STONE_AV_x005D_;
            if (str.equals("SR"))
                return SR;
            if (str.equals("[TBS_US]"))
                return _x005B_TBS_US_x005D_;
            if (str.equals("[TSP_US]"))
                return _x005B_TSP_US_x005D_;
            if (str.equals("10*"))
                return _10_x002A_;
            if (str.equals("[PI]"))
                return _x005B_PI_x005D_;
            if (str.equals("TNE"))
                return TNE;
            if (str.equals("[TWP]"))
                return _x005B_TWP_x005D_;
            if (str.equals("[TB'U]"))
                return _x005B_TB_x0027_U_x005D_;
            if (str.equals("AMU"))
                return AMU;
            if (str.equals("[C]"))
                return _x005B_C_x005D_;
            if (str.equals("WK"))
                return WK;
            if (str.equals("[GAL_WI]"))
                return _x005B_GAL_WI_x005D_;
            if (str.equals("[YD_BR]"))
                return _x005B_YD_BR_x005D_;
            if (str.equals("[YD_I]"))
                return _x005B_YD_I_x005D_;
            if (str.equals("[YD_US]"))
                return _x005B_YD_US_x005D_;
            if (str.equals("ANN"))
                return ANN;
            if (str.equals("ANN_G"))
                return ANN_G;
            if (str.equals("ANN_J"))
                return ANN_J;
            if (str.equals("ANN_T"))
                return ANN_T;
		    return null;
        }
    }

	/**
	* abstDomain: A12814 (C-0-T12549-A12814-cpt)
	*/
    public enum UnitOfMeasurePrefixInsens
    {
        
        A(0),
        
        C(1),
        
        D(2),
        
        DA(3),
        
        EX(4),
        
        F(5),
        
        GIB(6),
        
        GA(7),
        
        H(8),
        
        KIB(9),
        
        K(10),
        
        MIB(11),
        
        MA(12),
        
        U(13),
        
        M(14),
        
        N(15),
        
        PT(16),
        
        P(17),
        
        TIB(18),
        
        TR(19),
        
        YO(20),
        
        YA(21),
        
        ZO(22),
        
        ZA(23);
        
        private int code;
        
        UnitOfMeasurePrefixInsens(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UnitOfMeasurePrefixInsens fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("C"))
                return C;
            if (str.equals("D"))
                return D;
            if (str.equals("DA"))
                return DA;
            if (str.equals("EX"))
                return EX;
            if (str.equals("F"))
                return F;
            if (str.equals("GIB"))
                return GIB;
            if (str.equals("GA"))
                return GA;
            if (str.equals("H"))
                return H;
            if (str.equals("KIB"))
                return KIB;
            if (str.equals("K"))
                return K;
            if (str.equals("MIB"))
                return MIB;
            if (str.equals("MA"))
                return MA;
            if (str.equals("U"))
                return U;
            if (str.equals("M"))
                return M;
            if (str.equals("N"))
                return N;
            if (str.equals("PT"))
                return PT;
            if (str.equals("P"))
                return P;
            if (str.equals("TIB"))
                return TIB;
            if (str.equals("TR"))
                return TR;
            if (str.equals("YO"))
                return YO;
            if (str.equals("YA"))
                return YA;
            if (str.equals("ZO"))
                return ZO;
            if (str.equals("ZA"))
                return ZA;
		    return null;
        }
    }

	/**
	* abstDomain: A12840 (C-0-T12839-A12840-cpt)
	*/
    public enum UnitOfMeasureAtomBaseUnitSens
    {
        
        C(0),
        
        K(1),
        
        cd(2),
        
        g(3),
        
        m(4),
        
        rad(5),
        
        s(6);
        
        private int code;
        
        UnitOfMeasureAtomBaseUnitSens(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static UnitOfMeasureAtomBaseUnitSens fromString(String str)
        {
            if (str.equals("C"))
                return C;
            if (str.equals("K"))
                return K;
            if (str.equals("cd"))
                return cd;
            if (str.equals("g"))
                return g;
            if (str.equals("m"))
                return m;
            if (str.equals("rad"))
                return rad;
            if (str.equals("s"))
                return s;
		    return null;
        }
    }

	/**
	* abstDomain: A12848 (C-0-T12839-A12848-cpt)
	*/
    public enum UnitOfMeasureAtomSens
    {
        
        _x005B_APL_x0027_U_x005D_(0,"[APL'U]"),
        
        A(1,"A"),
        
        Ao(2,"Ao"),
        
        Bq(3,"Bq"),
        
        _x005B_beth_x0027_U_x005D_(4,"[beth'U]"),
        
        Bi(5,"Bi"),
        
        _x005B_bdsk_x0027_U_x005D_(6,"[bdsk'U]"),
        
        _x005B_k_x005D_(7,"[k]"),
        
        _x005B_Btu_39_x005D_(8,"[Btu_39]"),
        
        _x005B_Btu_59_x005D_(9,"[Btu_59]"),
        
        _x005B_Btu_60_x005D_(10,"[Btu_60]"),
        
        _x005B_Btu_IT_x005D_(11,"[Btu_IT]"),
        
        _x005B_Btu_m_x005D_(12,"[Btu_m]"),
        
        _x005B_Btu_th_x005D_(13,"[Btu_th]"),
        
        _x005B_Btu_x005D_(14,"[Btu]"),
        
        _x005B_Cal_x005D_(15,"[Cal]"),
        
        _x005B_Ch_x005D_(16,"[Ch]"),
        
        Ci(17,"Ci"),
        
        _x005B_dye_x0027_U_x005D_(18,"[dye'U]"),
        
        F(19,"F"),
        
        _x005B_GPL_x0027_U_x005D_(20,"[GPL'U]"),
        
        Gal(21,"Gal"),
        
        G(22,"G"),
        
        Gb(23,"Gb"),
        
        Gy(24,"Gy"),
        
        H(25,"H"),
        
        Hz(26,"Hz"),
        
        _x005B_hnsf_x0027_U_x005D_(27,"[hnsf'U]"),
        
        J(28,"J"),
        
        Ky(29,"Ky"),
        
        _x005B_ka_x0027_U_x005D_(30,"[ka'U]"),
        
        _x005B_knk_x0027_U_x005D_(31,"[knk'U]"),
        
        Lmb(32,"Lmb"),
        
        _x005B_MPL_x0027_U_x005D_(33,"[MPL'U]"),
        
        _x005B_mclg_x0027_U_x005D_(34,"[mclg'U]"),
        
        Mx(35,"Mx"),
        
        N(36,"N"),
        
        _x005B_G_x005D_(37,"[G]"),
        
        Oe(38,"Oe"),
        
        Ohm(39,"Ohm"),
        
        Pa(40,"Pa"),
        
        _x005B_h_x005D_(41,"[h]"),
        
        P(42,"P"),
        
        _x005B_pca_pr_x005D_(43,"[pca_pr]"),
        
        _x005B_pnt_pr_x005D_(44,"[pnt_pr]"),
        
        R(45,"R"),
        
        S(46,"S"),
        
        Sv(47,"Sv"),
        
        _x005B_smgy_x0027_U_x005D_(48,"[smgy'U]"),
        
        St(49,"St"),
        
        _x005B_S_x005D_(50,"[S]"),
        
        T(51,"T"),
        
        _x005B_todd_x0027_U_x005D_(52,"[todd'U]"),
        
        U(53,"U"),
        
        _x005B_USP_x0027_U_x005D_(54,"[USP'U]"),
        
        V(55,"V"),
        
        W(56,"W"),
        
        Wb(57,"Wb"),
        
        _x005B_g_x005D__1(58,"[g]"),
        
        _x005B_acr_br_x005D_(59,"[acr_br]"),
        
        _x005B_acr_us_x005D_(60,"[acr_us]"),
        
        _x005B_arb_x0027_U_x005D_(61,"[arb'U]"),
        
        ar(62,"ar"),
        
        AU(63,"AU"),
        
        atm(64,"atm"),
        
        att(65,"att"),
        
        bar(66,"bar"),
        
        b(67,"b"),
        
        _x005B_bbl_us_x005D_(68,"[bbl_us]"),
        
        Bd(69,"Bd"),
        
        B_1(70,"B"),
        
        B_x005B_kW_x005D_(71,"B[kW]"),
        
        B_x005B_uV_x005D_(72,"B[uV]"),
        
        B_x005B_mV_x005D_(73,"B[mV]"),
        
        B_x005B_SPL_x005D_(74,"B[SPL]"),
        
        B_x005B_V_x005D_(75,"B[V]"),
        
        B_x005B_W_x005D_(76,"B[W]"),
        
        bit(77,"bit"),
        
        bit_s(78,"bit_s"),
        
        _x005B_bf_i_x005D_(79,"[bf_i]"),
        
        _x005B_bu_us_x005D_(80,"[bu_us]"),
        
        _x005B_pk_br_x005D_(81,"[pk_br]"),
        
        By(82,"By"),
        
        cal__x005B_15_x005D_(83,"cal_[15]"),
        
        cal__x005B_20_x005D_(84,"cal_[20]"),
        
        cal_IT(85,"cal_IT"),
        
        cal_m(86,"cal_m"),
        
        cal_th(87,"cal_th"),
        
        cal(88,"cal"),
        
        _x005B_car_m_x005D_(89,"[car_m]"),
        
        _x005B_car_Au_x005D_(90,"[car_Au]"),
        
        _x005B_ch_br_x005D_(91,"[ch_br]"),
        
        _x005B_ch_us_x005D_(92,"[ch_us]"),
        
        _x005B_rch_us_x005D_(93,"[rch_us]"),
        
        _x005B_cicero_x005D_(94,"[cicero]"),
        
        circ(95,"circ"),
        
        _x005B_cml_i_x005D_(96,"[cml_i]"),
        
        _x005B_cr_i_x005D_(97,"[cr_i]"),
        
        _x005B_crd_us_x005D_(98,"[crd_us]"),
        
        _x005B_cft_i_x005D_(99,"[cft_i]"),
        
        _x005B_cin_i_x005D_(100,"[cin_i]"),
        
        _x005B_cyd_i_x005D_(101,"[cyd_i]"),
        
        _x005B_cup_us_x005D_(102,"[cup_us]"),
        
        d(103,"d"),
        
        deg(104,"deg"),
        
        Cel(105,"Cel"),
        
        _x005B_degF_x005D_(106,"[degF]"),
        
        _x005B_didot_x005D_(107,"[didot]"),
        
        _x005B_diop_x005D_(108,"[diop]"),
        
        _x005B_dr_av_x005D_(109,"[dr_av]"),
        
        _x005B_dr_ap_x005D_(110,"[dr_ap]"),
        
        _x005B_drp_x005D_(111,"[drp]"),
        
        _x005B_dpt_us_x005D_(112,"[dpt_us]"),
        
        _x005B_dqt_us_x005D_(113,"[dqt_us]"),
        
        dyn(114,"dyn"),
        
        _x005B_m_e_x005D_(115,"[m_e]"),
        
        eV(116,"eV"),
        
        _x005B_e_x005D_(117,"[e]"),
        
        eq(118,"eq"),
        
        erg(119,"erg"),
        
        _x005B_fth_br_x005D_(120,"[fth_br]"),
        
        _x005B_fth_i_x005D_(121,"[fth_i]"),
        
        _x005B_fth_us_x005D_(122,"[fth_us]"),
        
        _x005B_fdr_br_x005D_(123,"[fdr_br]"),
        
        _x005B_fdr_us_x005D_(124,"[fdr_us]"),
        
        _x005B_foz_br_x005D_(125,"[foz_br]"),
        
        _x005B_foz_us_x005D_(126,"[foz_us]"),
        
        _x005B_ft_br_x005D_(127,"[ft_br]"),
        
        _x005B_ft_i_x005D_(128,"[ft_i]"),
        
        _x005B_ft_us_x005D_(129,"[ft_us]"),
        
        _x005B_rd_br_x005D_(130,"[rd_br]"),
        
        _x005B_fur_us_x005D_(131,"[fur_us]"),
        
        _x005B_gal_br_x005D_(132,"[gal_br]"),
        
        _x005B_gal_us_x005D_(133,"[gal_us]"),
        
        _x005B_gil_br_x005D_(134,"[gil_br]"),
        
        _x005B_gil_us_x005D_(135,"[gil_us]"),
        
        gon(136,"gon"),
        
        _x005B_gr_x005D_(137,"[gr]"),
        
        g_x0025_(138,"g%"),
        
        gf(139,"gf"),
        
        _x005B_hd_i_x005D_(140,"[hd_i]"),
        
        _x005B_HPF_x005D_(141,"[HPF]"),
        
        h_1(142,"h"),
        
        _x005B_in_br_x005D_(143,"[in_br]"),
        
        _x005B_in_i_x005D_(144,"[in_i]"),
        
        _x005B_in_us_x005D_(145,"[in_us]"),
        
        _x005B_in_i_x0027_Hg_x005D_(146,"[in_i'Hg]"),
        
        _x005B_in_i_x0027_H2O_x005D_(147,"[in_i'H2O]"),
        
        _x005B_iU_x005D_(148,"[iU]"),
        
        kat(149,"kat"),
        
        _x005B_kn_br_x005D_(150,"[kn_br]"),
        
        _x005B_kn_i_x005D_(151,"[kn_i]"),
        
        _x005B_ly_x005D_(152,"[ly]"),
        
        _x005B_ligne_x005D_(153,"[ligne]"),
        
        _x005B_lne_x005D_(154,"[lne]"),
        
        _x005B_lk_br_x005D_(155,"[lk_br]"),
        
        _x005B_lk_us_x005D_(156,"[lk_us]"),
        
        _x005B_rlk_us_x005D_(157,"[rlk_us]"),
        
        l(158,"l"),
        
        _x005B_lcwt_av_x005D_(159,"[lcwt_av]"),
        
        _x005B_lton_av_x005D_(160,"[lton_av]"),
        
        _x005B_LPF_x005D_(161,"[LPF]"),
        
        lm(162,"lm"),
        
        lx(163,"lx"),
        
        _x005B_mesh_i_x005D_(164,"[mesh_i]"),
        
        _x005B_MET_x005D_(165,"[MET]"),
        
        m_x005B_Hg_x005D_(166,"m[Hg]"),
        
        m_x005B_H2O_x005D_(167,"m[H2O]"),
        
        _x005B_mil_i_x005D_(168,"[mil_i]"),
        
        _x005B_mil_us_x005D_(169,"[mil_us]"),
        
        _x005B_mi_br_x005D_(170,"[mi_br]"),
        
        _x005B_mi_us_x005D_(171,"[mi_us]"),
        
        _x005B_min_br_x005D_(172,"[min_br]"),
        
        _x005B_min_us_x005D_(173,"[min_us]"),
        
        _x0027_(174,"'"),
        
        min(175,"min"),
        
        mol(176,"mol"),
        
        mo(177,"mo"),
        
        mo_g(178,"mo_g"),
        
        mo_j(179,"mo_j"),
        
        mo_s(180,"mo_s"),
        
        _x005B_nmi_br_x005D_(181,"[nmi_br]"),
        
        _x005B_nmi_i_x005D_(182,"[nmi_i]"),
        
        Np(183,"Np"),
        
        osm(184,"osm"),
        
        _x005B_oz_ap_x005D_(185,"[oz_ap]"),
        
        _x005B_oz_av_x005D_(186,"[oz_av]"),
        
        _x005B_oz_tr_x005D_(187,"[oz_tr]"),
        
        _x005B_pH_x005D_(188,"[pH]"),
        
        _x005B_pc_br_x005D_(189,"[pc_br]"),
        
        pc(190,"pc"),
        
        _x005B_ppb_x005D_(191,"[ppb]"),
        
        _x005B_ppm_x005D_(192,"[ppm]"),
        
        _x005B_ppth_x005D_(193,"[ppth]"),
        
        _x005B_pptr_x005D_(194,"[pptr]"),
        
        _x005B_bu_br_x005D_(195,"[bu_br]"),
        
        _x005B_pk_us_x005D_(196,"[pk_us]"),
        
        _x005B_pwt_tr_x005D_(197,"[pwt_tr]"),
        
        _x0025_(198,"%"),
        
        _x005B_PRU_x005D_(199,"[PRU]"),
        
        _x005B_mu_0_x005D_(200,"[mu_0]"),
        
        _x005B_eps_0_x005D_(201,"[eps_0]"),
        
        ph(202,"ph"),
        
        _x005B_pca_x005D_(203,"[pca]"),
        
        _x005B_pied_x005D_(204,"[pied]"),
        
        _x005B_pt_br_x005D_(205,"[pt_br]"),
        
        _x005B_pt_us_x005D_(206,"[pt_us]"),
        
        _x005B_pnt_x005D_(207,"[pnt]"),
        
        _x005B_pouce_x005D_(208,"[pouce]"),
        
        _x005B_lb_ap_x005D_(209,"[lb_ap]"),
        
        _x005B_lb_av_x005D_(210,"[lb_av]"),
        
        _x005B_lb_tr_x005D_(211,"[lb_tr]"),
        
        _x005B_lbf_av_x005D_(212,"[lbf_av]"),
        
        _x005B_m_p_x005D_(213,"[m_p]"),
        
        _x005B_psi_x005D_(214,"[psi]"),
        
        _x005B_qt_br_x005D_(215,"[qt_br]"),
        
        _x005B_qt_us_x005D_(216,"[qt_us]"),
        
        RAD(217,"RAD"),
        
        REM(218,"REM"),
        
        _x005B_rd_us_x005D_(219,"[rd_us]"),
        
        _x005B_sc_ap_x005D_(220,"[sc_ap]"),
        
        _x0027__x0027_(221,"''"),
        
        _x005B_sct_x005D_(222,"[sct]"),
        
        _x005B_scwt_av_x005D_(223,"[scwt_av]"),
        
        _x005B_ston_av_x005D_(224,"[ston_av]"),
        
        sph(225,"sph"),
        
        _x005B_sft_i_x005D_(226,"[sft_i]"),
        
        _x005B_sin_i_x005D_(227,"[sin_i]"),
        
        _x005B_smi_us_x005D_(228,"[smi_us]"),
        
        _x005B_srd_us_x005D_(229,"[srd_us]"),
        
        _x005B_syd_i_x005D_(230,"[syd_i]"),
        
        _x005B_mi_i_x005D_(231,"[mi_i]"),
        
        st_1(232,"st"),
        
        sb(233,"sb"),
        
        _x005B_stone_av_x005D_(234,"[stone_av]"),
        
        sr(235,"sr"),
        
        _x005B_tbs_us_x005D_(236,"[tbs_us]"),
        
        _x005B_tsp_us_x005D_(237,"[tsp_us]"),
        
        _10_x002A_(238,"10*"),
        
        _x005B_pi_x005D_(239,"[pi]"),
        
        t_1(240,"t"),
        
        _x005B_twp_x005D_(241,"[twp]"),
        
        _x005B_tb_x0027_U_x005D_(242,"[tb'U]"),
        
        u_1(243,"u"),
        
        _x005B_c_x005D_(244,"[c]"),
        
        wk(245,"wk"),
        
        _x005B_gal_wi_x005D_(246,"[gal_wi]"),
        
        _x005B_yd_br_x005D_(247,"[yd_br]"),
        
        _x005B_yd_i_x005D_(248,"[yd_i]"),
        
        _x005B_yd_us_x005D_(249,"[yd_us]"),
        
        a_1(250,"a"),
        
        a_g(251,"a_g"),
        
        a_j(252,"a_j"),
        
        a_t(253,"a_t");
        
        private int code;
        private java.lang.String xmlValue;
        
        UnitOfMeasureAtomSens(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static UnitOfMeasureAtomSens fromString(String str)
        {
            if (str.equals("[APL'U]"))
                return _x005B_APL_x0027_U_x005D_;
            if (str.equals("A"))
                return A;
            if (str.equals("Ao"))
                return Ao;
            if (str.equals("Bq"))
                return Bq;
            if (str.equals("[beth'U]"))
                return _x005B_beth_x0027_U_x005D_;
            if (str.equals("Bi"))
                return Bi;
            if (str.equals("[bdsk'U]"))
                return _x005B_bdsk_x0027_U_x005D_;
            if (str.equals("[k]"))
                return _x005B_k_x005D_;
            if (str.equals("[Btu_39]"))
                return _x005B_Btu_39_x005D_;
            if (str.equals("[Btu_59]"))
                return _x005B_Btu_59_x005D_;
            if (str.equals("[Btu_60]"))
                return _x005B_Btu_60_x005D_;
            if (str.equals("[Btu_IT]"))
                return _x005B_Btu_IT_x005D_;
            if (str.equals("[Btu_m]"))
                return _x005B_Btu_m_x005D_;
            if (str.equals("[Btu_th]"))
                return _x005B_Btu_th_x005D_;
            if (str.equals("[Btu]"))
                return _x005B_Btu_x005D_;
            if (str.equals("[Cal]"))
                return _x005B_Cal_x005D_;
            if (str.equals("[Ch]"))
                return _x005B_Ch_x005D_;
            if (str.equals("Ci"))
                return Ci;
            if (str.equals("[dye'U]"))
                return _x005B_dye_x0027_U_x005D_;
            if (str.equals("F"))
                return F;
            if (str.equals("[GPL'U]"))
                return _x005B_GPL_x0027_U_x005D_;
            if (str.equals("Gal"))
                return Gal;
            if (str.equals("G"))
                return G;
            if (str.equals("Gb"))
                return Gb;
            if (str.equals("Gy"))
                return Gy;
            if (str.equals("H"))
                return H;
            if (str.equals("Hz"))
                return Hz;
            if (str.equals("[hnsf'U]"))
                return _x005B_hnsf_x0027_U_x005D_;
            if (str.equals("J"))
                return J;
            if (str.equals("Ky"))
                return Ky;
            if (str.equals("[ka'U]"))
                return _x005B_ka_x0027_U_x005D_;
            if (str.equals("[knk'U]"))
                return _x005B_knk_x0027_U_x005D_;
            if (str.equals("Lmb"))
                return Lmb;
            if (str.equals("[MPL'U]"))
                return _x005B_MPL_x0027_U_x005D_;
            if (str.equals("[mclg'U]"))
                return _x005B_mclg_x0027_U_x005D_;
            if (str.equals("Mx"))
                return Mx;
            if (str.equals("N"))
                return N;
            if (str.equals("[G]"))
                return _x005B_G_x005D_;
            if (str.equals("Oe"))
                return Oe;
            if (str.equals("Ohm"))
                return Ohm;
            if (str.equals("Pa"))
                return Pa;
            if (str.equals("[h]"))
                return _x005B_h_x005D_;
            if (str.equals("P"))
                return P;
            if (str.equals("[pca_pr]"))
                return _x005B_pca_pr_x005D_;
            if (str.equals("[pnt_pr]"))
                return _x005B_pnt_pr_x005D_;
            if (str.equals("R"))
                return R;
            if (str.equals("S"))
                return S;
            if (str.equals("Sv"))
                return Sv;
            if (str.equals("[smgy'U]"))
                return _x005B_smgy_x0027_U_x005D_;
            if (str.equals("St"))
                return St;
            if (str.equals("[S]"))
                return _x005B_S_x005D_;
            if (str.equals("T"))
                return T;
            if (str.equals("[todd'U]"))
                return _x005B_todd_x0027_U_x005D_;
            if (str.equals("U"))
                return U;
            if (str.equals("[USP'U]"))
                return _x005B_USP_x0027_U_x005D_;
            if (str.equals("V"))
                return V;
            if (str.equals("W"))
                return W;
            if (str.equals("Wb"))
                return Wb;
            if (str.equals("[g]"))
                return _x005B_g_x005D__1;
            if (str.equals("[acr_br]"))
                return _x005B_acr_br_x005D_;
            if (str.equals("[acr_us]"))
                return _x005B_acr_us_x005D_;
            if (str.equals("[arb'U]"))
                return _x005B_arb_x0027_U_x005D_;
            if (str.equals("ar"))
                return ar;
            if (str.equals("AU"))
                return AU;
            if (str.equals("atm"))
                return atm;
            if (str.equals("att"))
                return att;
            if (str.equals("bar"))
                return bar;
            if (str.equals("b"))
                return b;
            if (str.equals("[bbl_us]"))
                return _x005B_bbl_us_x005D_;
            if (str.equals("Bd"))
                return Bd;
            if (str.equals("B"))
                return B_1;
            if (str.equals("B[kW]"))
                return B_x005B_kW_x005D_;
            if (str.equals("B[uV]"))
                return B_x005B_uV_x005D_;
            if (str.equals("B[mV]"))
                return B_x005B_mV_x005D_;
            if (str.equals("B[SPL]"))
                return B_x005B_SPL_x005D_;
            if (str.equals("B[V]"))
                return B_x005B_V_x005D_;
            if (str.equals("B[W]"))
                return B_x005B_W_x005D_;
            if (str.equals("bit"))
                return bit;
            if (str.equals("bit_s"))
                return bit_s;
            if (str.equals("[bf_i]"))
                return _x005B_bf_i_x005D_;
            if (str.equals("[bu_us]"))
                return _x005B_bu_us_x005D_;
            if (str.equals("[pk_br]"))
                return _x005B_pk_br_x005D_;
            if (str.equals("By"))
                return By;
            if (str.equals("cal_[15]"))
                return cal__x005B_15_x005D_;
            if (str.equals("cal_[20]"))
                return cal__x005B_20_x005D_;
            if (str.equals("cal_IT"))
                return cal_IT;
            if (str.equals("cal_m"))
                return cal_m;
            if (str.equals("cal_th"))
                return cal_th;
            if (str.equals("cal"))
                return cal;
            if (str.equals("[car_m]"))
                return _x005B_car_m_x005D_;
            if (str.equals("[car_Au]"))
                return _x005B_car_Au_x005D_;
            if (str.equals("[ch_br]"))
                return _x005B_ch_br_x005D_;
            if (str.equals("[ch_us]"))
                return _x005B_ch_us_x005D_;
            if (str.equals("[rch_us]"))
                return _x005B_rch_us_x005D_;
            if (str.equals("[cicero]"))
                return _x005B_cicero_x005D_;
            if (str.equals("circ"))
                return circ;
            if (str.equals("[cml_i]"))
                return _x005B_cml_i_x005D_;
            if (str.equals("[cr_i]"))
                return _x005B_cr_i_x005D_;
            if (str.equals("[crd_us]"))
                return _x005B_crd_us_x005D_;
            if (str.equals("[cft_i]"))
                return _x005B_cft_i_x005D_;
            if (str.equals("[cin_i]"))
                return _x005B_cin_i_x005D_;
            if (str.equals("[cyd_i]"))
                return _x005B_cyd_i_x005D_;
            if (str.equals("[cup_us]"))
                return _x005B_cup_us_x005D_;
            if (str.equals("d"))
                return d;
            if (str.equals("deg"))
                return deg;
            if (str.equals("Cel"))
                return Cel;
            if (str.equals("[degF]"))
                return _x005B_degF_x005D_;
            if (str.equals("[didot]"))
                return _x005B_didot_x005D_;
            if (str.equals("[diop]"))
                return _x005B_diop_x005D_;
            if (str.equals("[dr_av]"))
                return _x005B_dr_av_x005D_;
            if (str.equals("[dr_ap]"))
                return _x005B_dr_ap_x005D_;
            if (str.equals("[drp]"))
                return _x005B_drp_x005D_;
            if (str.equals("[dpt_us]"))
                return _x005B_dpt_us_x005D_;
            if (str.equals("[dqt_us]"))
                return _x005B_dqt_us_x005D_;
            if (str.equals("dyn"))
                return dyn;
            if (str.equals("[m_e]"))
                return _x005B_m_e_x005D_;
            if (str.equals("eV"))
                return eV;
            if (str.equals("[e]"))
                return _x005B_e_x005D_;
            if (str.equals("eq"))
                return eq;
            if (str.equals("erg"))
                return erg;
            if (str.equals("[fth_br]"))
                return _x005B_fth_br_x005D_;
            if (str.equals("[fth_i]"))
                return _x005B_fth_i_x005D_;
            if (str.equals("[fth_us]"))
                return _x005B_fth_us_x005D_;
            if (str.equals("[fdr_br]"))
                return _x005B_fdr_br_x005D_;
            if (str.equals("[fdr_us]"))
                return _x005B_fdr_us_x005D_;
            if (str.equals("[foz_br]"))
                return _x005B_foz_br_x005D_;
            if (str.equals("[foz_us]"))
                return _x005B_foz_us_x005D_;
            if (str.equals("[ft_br]"))
                return _x005B_ft_br_x005D_;
            if (str.equals("[ft_i]"))
                return _x005B_ft_i_x005D_;
            if (str.equals("[ft_us]"))
                return _x005B_ft_us_x005D_;
            if (str.equals("[rd_br]"))
                return _x005B_rd_br_x005D_;
            if (str.equals("[fur_us]"))
                return _x005B_fur_us_x005D_;
            if (str.equals("[gal_br]"))
                return _x005B_gal_br_x005D_;
            if (str.equals("[gal_us]"))
                return _x005B_gal_us_x005D_;
            if (str.equals("[gil_br]"))
                return _x005B_gil_br_x005D_;
            if (str.equals("[gil_us]"))
                return _x005B_gil_us_x005D_;
            if (str.equals("gon"))
                return gon;
            if (str.equals("[gr]"))
                return _x005B_gr_x005D_;
            if (str.equals("g%"))
                return g_x0025_;
            if (str.equals("gf"))
                return gf;
            if (str.equals("[hd_i]"))
                return _x005B_hd_i_x005D_;
            if (str.equals("[HPF]"))
                return _x005B_HPF_x005D_;
            if (str.equals("h"))
                return h_1;
            if (str.equals("[in_br]"))
                return _x005B_in_br_x005D_;
            if (str.equals("[in_i]"))
                return _x005B_in_i_x005D_;
            if (str.equals("[in_us]"))
                return _x005B_in_us_x005D_;
            if (str.equals("[in_i'Hg]"))
                return _x005B_in_i_x0027_Hg_x005D_;
            if (str.equals("[in_i'H2O]"))
                return _x005B_in_i_x0027_H2O_x005D_;
            if (str.equals("[iU]"))
                return _x005B_iU_x005D_;
            if (str.equals("kat"))
                return kat;
            if (str.equals("[kn_br]"))
                return _x005B_kn_br_x005D_;
            if (str.equals("[kn_i]"))
                return _x005B_kn_i_x005D_;
            if (str.equals("[ly]"))
                return _x005B_ly_x005D_;
            if (str.equals("[ligne]"))
                return _x005B_ligne_x005D_;
            if (str.equals("[lne]"))
                return _x005B_lne_x005D_;
            if (str.equals("[lk_br]"))
                return _x005B_lk_br_x005D_;
            if (str.equals("[lk_us]"))
                return _x005B_lk_us_x005D_;
            if (str.equals("[rlk_us]"))
                return _x005B_rlk_us_x005D_;
            if (str.equals("l"))
                return l;
            if (str.equals("[lcwt_av]"))
                return _x005B_lcwt_av_x005D_;
            if (str.equals("[lton_av]"))
                return _x005B_lton_av_x005D_;
            if (str.equals("[LPF]"))
                return _x005B_LPF_x005D_;
            if (str.equals("lm"))
                return lm;
            if (str.equals("lx"))
                return lx;
            if (str.equals("[mesh_i]"))
                return _x005B_mesh_i_x005D_;
            if (str.equals("[MET]"))
                return _x005B_MET_x005D_;
            if (str.equals("m[Hg]"))
                return m_x005B_Hg_x005D_;
            if (str.equals("m[H2O]"))
                return m_x005B_H2O_x005D_;
            if (str.equals("[mil_i]"))
                return _x005B_mil_i_x005D_;
            if (str.equals("[mil_us]"))
                return _x005B_mil_us_x005D_;
            if (str.equals("[mi_br]"))
                return _x005B_mi_br_x005D_;
            if (str.equals("[mi_us]"))
                return _x005B_mi_us_x005D_;
            if (str.equals("[min_br]"))
                return _x005B_min_br_x005D_;
            if (str.equals("[min_us]"))
                return _x005B_min_us_x005D_;
            if (str.equals("'"))
                return _x0027_;
            if (str.equals("min"))
                return min;
            if (str.equals("mol"))
                return mol;
            if (str.equals("mo"))
                return mo;
            if (str.equals("mo_g"))
                return mo_g;
            if (str.equals("mo_j"))
                return mo_j;
            if (str.equals("mo_s"))
                return mo_s;
            if (str.equals("[nmi_br]"))
                return _x005B_nmi_br_x005D_;
            if (str.equals("[nmi_i]"))
                return _x005B_nmi_i_x005D_;
            if (str.equals("Np"))
                return Np;
            if (str.equals("osm"))
                return osm;
            if (str.equals("[oz_ap]"))
                return _x005B_oz_ap_x005D_;
            if (str.equals("[oz_av]"))
                return _x005B_oz_av_x005D_;
            if (str.equals("[oz_tr]"))
                return _x005B_oz_tr_x005D_;
            if (str.equals("[pH]"))
                return _x005B_pH_x005D_;
            if (str.equals("[pc_br]"))
                return _x005B_pc_br_x005D_;
            if (str.equals("pc"))
                return pc;
            if (str.equals("[ppb]"))
                return _x005B_ppb_x005D_;
            if (str.equals("[ppm]"))
                return _x005B_ppm_x005D_;
            if (str.equals("[ppth]"))
                return _x005B_ppth_x005D_;
            if (str.equals("[pptr]"))
                return _x005B_pptr_x005D_;
            if (str.equals("[bu_br]"))
                return _x005B_bu_br_x005D_;
            if (str.equals("[pk_us]"))
                return _x005B_pk_us_x005D_;
            if (str.equals("[pwt_tr]"))
                return _x005B_pwt_tr_x005D_;
            if (str.equals("%"))
                return _x0025_;
            if (str.equals("[PRU]"))
                return _x005B_PRU_x005D_;
            if (str.equals("[mu_0]"))
                return _x005B_mu_0_x005D_;
            if (str.equals("[eps_0]"))
                return _x005B_eps_0_x005D_;
            if (str.equals("ph"))
                return ph;
            if (str.equals("[pca]"))
                return _x005B_pca_x005D_;
            if (str.equals("[pied]"))
                return _x005B_pied_x005D_;
            if (str.equals("[pt_br]"))
                return _x005B_pt_br_x005D_;
            if (str.equals("[pt_us]"))
                return _x005B_pt_us_x005D_;
            if (str.equals("[pnt]"))
                return _x005B_pnt_x005D_;
            if (str.equals("[pouce]"))
                return _x005B_pouce_x005D_;
            if (str.equals("[lb_ap]"))
                return _x005B_lb_ap_x005D_;
            if (str.equals("[lb_av]"))
                return _x005B_lb_av_x005D_;
            if (str.equals("[lb_tr]"))
                return _x005B_lb_tr_x005D_;
            if (str.equals("[lbf_av]"))
                return _x005B_lbf_av_x005D_;
            if (str.equals("[m_p]"))
                return _x005B_m_p_x005D_;
            if (str.equals("[psi]"))
                return _x005B_psi_x005D_;
            if (str.equals("[qt_br]"))
                return _x005B_qt_br_x005D_;
            if (str.equals("[qt_us]"))
                return _x005B_qt_us_x005D_;
            if (str.equals("RAD"))
                return RAD;
            if (str.equals("REM"))
                return REM;
            if (str.equals("[rd_us]"))
                return _x005B_rd_us_x005D_;
            if (str.equals("[sc_ap]"))
                return _x005B_sc_ap_x005D_;
            if (str.equals("''"))
                return _x0027__x0027_;
            if (str.equals("[sct]"))
                return _x005B_sct_x005D_;
            if (str.equals("[scwt_av]"))
                return _x005B_scwt_av_x005D_;
            if (str.equals("[ston_av]"))
                return _x005B_ston_av_x005D_;
            if (str.equals("sph"))
                return sph;
            if (str.equals("[sft_i]"))
                return _x005B_sft_i_x005D_;
            if (str.equals("[sin_i]"))
                return _x005B_sin_i_x005D_;
            if (str.equals("[smi_us]"))
                return _x005B_smi_us_x005D_;
            if (str.equals("[srd_us]"))
                return _x005B_srd_us_x005D_;
            if (str.equals("[syd_i]"))
                return _x005B_syd_i_x005D_;
            if (str.equals("[mi_i]"))
                return _x005B_mi_i_x005D_;
            if (str.equals("st"))
                return st_1;
            if (str.equals("sb"))
                return sb;
            if (str.equals("[stone_av]"))
                return _x005B_stone_av_x005D_;
            if (str.equals("sr"))
                return sr;
            if (str.equals("[tbs_us]"))
                return _x005B_tbs_us_x005D_;
            if (str.equals("[tsp_us]"))
                return _x005B_tsp_us_x005D_;
            if (str.equals("10*"))
                return _10_x002A_;
            if (str.equals("[pi]"))
                return _x005B_pi_x005D_;
            if (str.equals("t"))
                return t_1;
            if (str.equals("[twp]"))
                return _x005B_twp_x005D_;
            if (str.equals("[tb'U]"))
                return _x005B_tb_x0027_U_x005D_;
            if (str.equals("u"))
                return u_1;
            if (str.equals("[c]"))
                return _x005B_c_x005D_;
            if (str.equals("wk"))
                return wk;
            if (str.equals("[gal_wi]"))
                return _x005B_gal_wi_x005D_;
            if (str.equals("[yd_br]"))
                return _x005B_yd_br_x005D_;
            if (str.equals("[yd_i]"))
                return _x005B_yd_i_x005D_;
            if (str.equals("[yd_us]"))
                return _x005B_yd_us_x005D_;
            if (str.equals("a"))
                return a_1;
            if (str.equals("a_g"))
                return a_g;
            if (str.equals("a_j"))
                return a_j;
            if (str.equals("a_t"))
                return a_t;
		    return null;
        }
    }

	/**
	* abstDomain: A13104 (C-0-T12839-A13104-cpt)
	*/
    public enum UnitOfMeasurePrefixSens
    {
        
        a(0,"a"),
        
        c(1,"c"),
        
        d(2,"d"),
        
        da(3,"da"),
        
        E(4,"E"),
        
        f(5,"f"),
        
        Gi(6,"Gi"),
        
        G(7,"G"),
        
        h(8,"h"),
        
        Ki(9,"Ki"),
        
        k(10,"k"),
        
        Mi(11,"Mi"),
        
        M(12,"M"),
        
        u(13,"u"),
        
        m_1(14,"m"),
        
        n(15,"n"),
        
        P(16,"P"),
        
        p_1(17,"p"),
        
        Ti(18,"Ti"),
        
        T(19,"T"),
        
        y(20,"y"),
        
        Y_1(21,"Y"),
        
        z(22,"z"),
        
        Z_1(23,"Z");
        
        private int code;
        private java.lang.String xmlValue;
        
        UnitOfMeasurePrefixSens(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static UnitOfMeasurePrefixSens fromString(String str)
        {
            if (str.equals("a"))
                return a;
            if (str.equals("c"))
                return c;
            if (str.equals("d"))
                return d;
            if (str.equals("da"))
                return da;
            if (str.equals("E"))
                return E;
            if (str.equals("f"))
                return f;
            if (str.equals("Gi"))
                return Gi;
            if (str.equals("G"))
                return G;
            if (str.equals("h"))
                return h;
            if (str.equals("Ki"))
                return Ki;
            if (str.equals("k"))
                return k;
            if (str.equals("Mi"))
                return Mi;
            if (str.equals("M"))
                return M;
            if (str.equals("u"))
                return u;
            if (str.equals("m"))
                return m_1;
            if (str.equals("n"))
                return n;
            if (str.equals("P"))
                return P;
            if (str.equals("p"))
                return p_1;
            if (str.equals("Ti"))
                return Ti;
            if (str.equals("T"))
                return T;
            if (str.equals("y"))
                return y;
            if (str.equals("Y"))
                return Y_1;
            if (str.equals("z"))
                return z;
            if (str.equals("Z"))
                return Z_1;
		    return null;
        }
    }

	/**
	* vocSet: T227 (C-0-T227-cpt)
	*/
    public enum VaccineManufacturer
    {
        
        AB(0),
        
        AD(1),
        
        ALP(2),
        
        AR(3),
        
        PMC(4),
        
        AVI(5),
        
        BA(6),
        
        BAY(7),
        
        BPC(8),
        
        BP(9),
        
        MIP(10),
        
        CEN(11),
        
        CHI(12),
        
        CON(13),
        
        EVN(14),
        
        GRE(15),
        
        IAG(16),
        
        IUS(17),
        
        KGC(18),
        
        LED(19),
        
        MA(20),
        
        MED(21),
        
        MSD(22),
        
        IM(23),
        
        MIL(24),
        
        NAB(25),
        
        NYB(26),
        
        NAV(27),
        
        NOV(28),
        
        OTC(29),
        
        ORT(30),
        
        PD(31),
        
        PRX(32),
        
        SCL(33),
        
        SKB(34),
        
        SI(35),
        
        JPN(36),
        
        USA(37),
        
        WAL(38),
        
        WA(39);
        
        private int code;
        
        VaccineManufacturer(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static VaccineManufacturer fromString(String str)
        {
            if (str.equals("AB"))
                return AB;
            if (str.equals("AD"))
                return AD;
            if (str.equals("ALP"))
                return ALP;
            if (str.equals("AR"))
                return AR;
            if (str.equals("PMC"))
                return PMC;
            if (str.equals("AVI"))
                return AVI;
            if (str.equals("BA"))
                return BA;
            if (str.equals("BAY"))
                return BAY;
            if (str.equals("BPC"))
                return BPC;
            if (str.equals("BP"))
                return BP;
            if (str.equals("MIP"))
                return MIP;
            if (str.equals("CEN"))
                return CEN;
            if (str.equals("CHI"))
                return CHI;
            if (str.equals("CON"))
                return CON;
            if (str.equals("EVN"))
                return EVN;
            if (str.equals("GRE"))
                return GRE;
            if (str.equals("IAG"))
                return IAG;
            if (str.equals("IUS"))
                return IUS;
            if (str.equals("KGC"))
                return KGC;
            if (str.equals("LED"))
                return LED;
            if (str.equals("MA"))
                return MA;
            if (str.equals("MED"))
                return MED;
            if (str.equals("MSD"))
                return MSD;
            if (str.equals("IM"))
                return IM;
            if (str.equals("MIL"))
                return MIL;
            if (str.equals("NAB"))
                return NAB;
            if (str.equals("NYB"))
                return NYB;
            if (str.equals("NAV"))
                return NAV;
            if (str.equals("NOV"))
                return NOV;
            if (str.equals("OTC"))
                return OTC;
            if (str.equals("ORT"))
                return ORT;
            if (str.equals("PD"))
                return PD;
            if (str.equals("PRX"))
                return PRX;
            if (str.equals("SCL"))
                return SCL;
            if (str.equals("SKB"))
                return SKB;
            if (str.equals("SI"))
                return SI;
            if (str.equals("JPN"))
                return JPN;
            if (str.equals("USA"))
                return USA;
            if (str.equals("WAL"))
                return WAL;
            if (str.equals("WA"))
                return WA;
		    return null;
        }
    }

	/**
	* vocSet: T228 (C-0-T228-cpt)
	*/
    public enum VaccineType
    {
        
        _24(0,"24"),
        
        _19(1,"19"),
        
        _29(2,"29"),
        
        _26(3,"26"),
        
        _28(4,"28"),
        
        _1(5,"1"),
        
        _22(6,"22"),
        
        _20(7,"20"),
        
        _50(8,"50"),
        
        _30(9,"30"),
        
        _61(10,"61"),
        
        _62(11,"62"),
        
        _57(12,"57"),
        
        _85(13,"85"),
        
        _52(14,"52"),
        
        _83(15,"83"),
        
        _84(16,"84"),
        
        _31(17,"31"),
        
        _45(18,"45"),
        
        _8(19,"8"),
        
        _42(20,"42"),
        
        _43(21,"43"),
        
        _44(22,"44"),
        
        _58(23,"58"),
        
        _59(24,"59"),
        
        _47(25,"47"),
        
        _46(26,"46"),
        
        _49(27,"49"),
        
        _48(28,"48"),
        
        _17(29,"17"),
        
        _51(30,"51"),
        
        _86(31,"86"),
        
        _14(32,"14"),
        
        _87(33,"87"),
        
        _10(34,"10"),
        
        _39(35,"39"),
        
        _63(36,"63"),
        
        _66(37,"66"),
        
        _4(38,"4"),
        
        _3(39,"3"),
        
        _94(40,"94"),
        
        _2(41,"2"),
        
        _70(42,"70"),
        
        _34(43,"34"),
        
        _71(44,"71"),
        
        _93(45,"93"),
        
        _73(46,"73"),
        
        _76(47,"76"),
        
        _13(48,"13"),
        
        _98(49,"98"),
        
        _95(50,"95"),
        
        _96(51,"96"),
        
        _97(52,"97"),
        
        _9(53,"9"),
        
        _92(54,"92"),
        
        _81(55,"81"),
        
        _80(56,"80"),
        
        _36(57,"36"),
        
        _82(58,"82"),
        
        _54(59,"54"),
        
        _55(60,"55"),
        
        _27(61,"27"),
        
        _56(62,"56"),
        
        _12(63,"12"),
        
        _60(64,"60"),
        
        _88(65,"88"),
        
        _15(66,"15"),
        
        _16(67,"16"),
        
        _64(68,"64"),
        
        _65(69,"65"),
        
        _67(70,"67"),
        
        _5(71,"5"),
        
        _68(72,"68"),
        
        _32(73,"32"),
        
        _7(74,"7"),
        
        _69(75,"69"),
        
        _11(76,"11"),
        
        _23(77,"23"),
        
        _33(78,"33"),
        
        _100(79,"100"),
        
        _89(80,"89"),
        
        _90(81,"90"),
        
        _40(82,"40"),
        
        _18(83,"18"),
        
        _72(84,"72"),
        
        _74(85,"74"),
        
        _6(86,"6"),
        
        _38(87,"38"),
        
        _75(88,"75"),
        
        _35(89,"35"),
        
        _77(90,"77"),
        
        _78(91,"78"),
        
        _91(92,"91"),
        
        _101(93,"101"),
        
        _25(94,"25"),
        
        _41(95,"41"),
        
        _53(96,"53"),
        
        _79(97,"79"),
        
        _21(98,"21"),
        
        _37(99,"37");
        
        private int code;
        private java.lang.String xmlValue;
        
        VaccineType(int code ,java.lang.String xmlValue){
            this.code = code;
            this.xmlValue=xmlValue;
        }

        public int getCode(){
		    return code;
	    }
    @Override
        public String toString() {
            return xmlValue;
        }
        public static VaccineType fromString(String str)
        {
            if (str.equals("24"))
                return _24;
            if (str.equals("19"))
                return _19;
            if (str.equals("29"))
                return _29;
            if (str.equals("26"))
                return _26;
            if (str.equals("28"))
                return _28;
            if (str.equals("1"))
                return _1;
            if (str.equals("22"))
                return _22;
            if (str.equals("20"))
                return _20;
            if (str.equals("50"))
                return _50;
            if (str.equals("30"))
                return _30;
            if (str.equals("61"))
                return _61;
            if (str.equals("62"))
                return _62;
            if (str.equals("57"))
                return _57;
            if (str.equals("85"))
                return _85;
            if (str.equals("52"))
                return _52;
            if (str.equals("83"))
                return _83;
            if (str.equals("84"))
                return _84;
            if (str.equals("31"))
                return _31;
            if (str.equals("45"))
                return _45;
            if (str.equals("8"))
                return _8;
            if (str.equals("42"))
                return _42;
            if (str.equals("43"))
                return _43;
            if (str.equals("44"))
                return _44;
            if (str.equals("58"))
                return _58;
            if (str.equals("59"))
                return _59;
            if (str.equals("47"))
                return _47;
            if (str.equals("46"))
                return _46;
            if (str.equals("49"))
                return _49;
            if (str.equals("48"))
                return _48;
            if (str.equals("17"))
                return _17;
            if (str.equals("51"))
                return _51;
            if (str.equals("86"))
                return _86;
            if (str.equals("14"))
                return _14;
            if (str.equals("87"))
                return _87;
            if (str.equals("10"))
                return _10;
            if (str.equals("39"))
                return _39;
            if (str.equals("63"))
                return _63;
            if (str.equals("66"))
                return _66;
            if (str.equals("4"))
                return _4;
            if (str.equals("3"))
                return _3;
            if (str.equals("94"))
                return _94;
            if (str.equals("2"))
                return _2;
            if (str.equals("70"))
                return _70;
            if (str.equals("34"))
                return _34;
            if (str.equals("71"))
                return _71;
            if (str.equals("93"))
                return _93;
            if (str.equals("73"))
                return _73;
            if (str.equals("76"))
                return _76;
            if (str.equals("13"))
                return _13;
            if (str.equals("98"))
                return _98;
            if (str.equals("95"))
                return _95;
            if (str.equals("96"))
                return _96;
            if (str.equals("97"))
                return _97;
            if (str.equals("9"))
                return _9;
            if (str.equals("92"))
                return _92;
            if (str.equals("81"))
                return _81;
            if (str.equals("80"))
                return _80;
            if (str.equals("36"))
                return _36;
            if (str.equals("82"))
                return _82;
            if (str.equals("54"))
                return _54;
            if (str.equals("55"))
                return _55;
            if (str.equals("27"))
                return _27;
            if (str.equals("56"))
                return _56;
            if (str.equals("12"))
                return _12;
            if (str.equals("60"))
                return _60;
            if (str.equals("88"))
                return _88;
            if (str.equals("15"))
                return _15;
            if (str.equals("16"))
                return _16;
            if (str.equals("64"))
                return _64;
            if (str.equals("65"))
                return _65;
            if (str.equals("67"))
                return _67;
            if (str.equals("5"))
                return _5;
            if (str.equals("68"))
                return _68;
            if (str.equals("32"))
                return _32;
            if (str.equals("7"))
                return _7;
            if (str.equals("69"))
                return _69;
            if (str.equals("11"))
                return _11;
            if (str.equals("23"))
                return _23;
            if (str.equals("33"))
                return _33;
            if (str.equals("100"))
                return _100;
            if (str.equals("89"))
                return _89;
            if (str.equals("90"))
                return _90;
            if (str.equals("40"))
                return _40;
            if (str.equals("18"))
                return _18;
            if (str.equals("72"))
                return _72;
            if (str.equals("74"))
                return _74;
            if (str.equals("6"))
                return _6;
            if (str.equals("38"))
                return _38;
            if (str.equals("75"))
                return _75;
            if (str.equals("35"))
                return _35;
            if (str.equals("77"))
                return _77;
            if (str.equals("78"))
                return _78;
            if (str.equals("91"))
                return _91;
            if (str.equals("101"))
                return _101;
            if (str.equals("25"))
                return _25;
            if (str.equals("41"))
                return _41;
            if (str.equals("53"))
                return _53;
            if (str.equals("79"))
                return _79;
            if (str.equals("21"))
                return _21;
            if (str.equals("37"))
                return _37;
		    return null;
        }
    }

	/**
	* vocSet: T11037 (C-0-T11037-cpt)
	*/
    public enum ValueSetOperator
    {
        
        E(0),
        
        I(1);
        
        private int code;
        
        ValueSetOperator(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ValueSetOperator fromString(String str)
        {
            if (str.equals("E"))
                return E;
            if (str.equals("I"))
                return I;
		    return null;
        }
    }

	/**
	* vocSet: T19362 (C-0-T19362-cpt)
	*/
    public enum ValueSetPropertyId
    {
        
        appliesTo(0),
        
        howApplies(1),
        
        openIssue(2);
        
        private int code;
        
        ValueSetPropertyId(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ValueSetPropertyId fromString(String str)
        {
            if (str.equals("appliesTo"))
                return appliesTo;
            if (str.equals("howApplies"))
                return howApplies;
            if (str.equals("openIssue"))
                return openIssue;
		    return null;
        }
    }

	/**
	* vocSet: T19360-1 (C-0-T19360-1-cpt)
	*/
    public enum ValueSetStatus
    {
        
        A(0),
        
        D(1),
        
        P(2),
        
        R(3);
        
        private int code;
        
        ValueSetStatus(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static ValueSetStatus fromString(String str)
        {
            if (str.equals("A"))
                return A;
            if (str.equals("D"))
                return D;
            if (str.equals("P"))
                return P;
            if (str.equals("R"))
                return R;
		    return null;
        }
    }

	/**
	* abstDomain: A11047 (C-0-T11046-A11047-cpt)
	*/
    public enum Extensibility
    {
        
        CNE(0),
        
        CWE(1);
        
        private int code;
        
        Extensibility(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static Extensibility fromString(String str)
        {
            if (str.equals("CNE"))
                return CNE;
            if (str.equals("CWE"))
                return CWE;
		    return null;
        }
    }

	/**
	* abstDomain: A11050 (C-0-T11046-A11050-cpt)
	*/
    public enum RealmOfUse
    {
        
        Canada(0),
        
        NorthAmerica(1),
        
        USA(2),
        
        UV(3);
        
        private int code;
        
        RealmOfUse(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static RealmOfUse fromString(String str)
        {
            if (str.equals("Canada"))
                return Canada;
            if (str.equals("NorthAmerica"))
                return NorthAmerica;
            if (str.equals("USA"))
                return USA;
            if (str.equals("UV"))
                return UV;
		    return null;
        }
    }

    public enum BinaryDataEncoding
    {
        
        B64(0),
        
        TXT(1);
        
        private int code;
        
        BinaryDataEncoding(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static BinaryDataEncoding fromString(String str)
        {
            if (str.equals("B64"))
                return B64;
            if (str.equals("TXT"))
                return TXT;
		    return null;
        }
    }

    public enum AuthorizationTypeType
    {
        
		/**
		* Autorisierung mit Dokumentenzugriff (Standardfall Zugriff auf medizinische Daten und Dokumente)
		*/
        DOCUMENT_AUTHORIZATION(0),
        
		/**
		* Autorisierung zur Umschlüsselung ohne Zugriff auf medizinische Daten eines Kontos
		*/
        RECOVERY_AUTHORIZATION(1),
        
		/**
		* Autorisierung im Zusammenhang mit Kontoaktivierung, Aktenumzug bzw. Anbieterwechsel oder anderen Anwendungsfällen, in denen für den Versicherten kein gültiges Schlüsselmaterial vorhanden ist
		*/
        ACCOUNT_AUTHORIZATION(2);
        
        private int code;
        
        AuthorizationTypeType(int code ){
            this.code = code;
        }

        public int getCode(){
		    return code;
	    }
    
        public static AuthorizationTypeType fromString(String str)
        {
            if (str.equals("DOCUMENT_AUTHORIZATION"))
                return DOCUMENT_AUTHORIZATION;
            if (str.equals("RECOVERY_AUTHORIZATION"))
                return RECOVERY_AUTHORIZATION;
            if (str.equals("ACCOUNT_AUTHORIZATION"))
                return ACCOUNT_AUTHORIZATION;
		    return null;
        }
    }

}