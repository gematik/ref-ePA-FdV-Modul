package de.gematik.ti.epa.fdv.gen.authorization;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.*;
import org.kxml2.io.KXmlParser;
import org.kxml2.kdom.Element;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Vector;
import java.io.StringReader;
import java.io.StringWriter;

//If you have a compilation error here then you have to add a reference to ExKsoap2.jar to your project (you can find it in Libs folder in the generated zip file)
public class ExtendedSoapSerializationEnvelope extends com.easywsdl.exksoap2.serialization.ExSoapSerializationEnvelope {
    static HashMap< java.lang.String,java.lang.Class> classNames = new HashMap< java.lang.String, java.lang.Class>();
    static HashMap< java.lang.String,java.lang.String> elementNames = new HashMap< java.lang.String, java.lang.String>();
    
    static {
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureType",SignatureType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SignedInfoType",SignedInfoType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^CanonicalizationMethodType",CanonicalizationMethodType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureMethodType",SignatureMethodType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^ReferenceType",ReferenceType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^TransformType",TransformType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^DigestMethodType",DigestMethodType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^KeyInfoType",KeyInfoType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^KeyValueType",KeyValueType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^RetrievalMethodType",RetrievalMethodType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^X509DataType",X509DataType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^X509IssuerSerialType",X509IssuerSerialType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^PGPDataType",PGPDataType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SPKIDataType",SPKIDataType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^ObjectType",ObjectType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^ManifestType",ManifestType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SignaturePropertiesType",SignaturePropertiesType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^SignaturePropertyType",SignaturePropertyType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^DSAKeyValueType",DSAKeyValueType.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^RSAKeyValueType",RSAKeyValueType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptedType",EncryptedType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptionMethodType",EncryptionMethodType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^CipherDataType",CipherDataType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^CipherReferenceType",CipherReferenceType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptedDataType",EncryptedDataType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptedKeyType",EncryptedKeyType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^AgreementMethodType",AgreementMethodType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^ReferenceType",ReferenceType_1.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptionPropertiesType",EncryptionPropertiesType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptionPropertyType",EncryptionPropertyType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^DHKeyValueType",DHKeyValueType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^ReferenceList",ReferenceList.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^BaseIDAbstractType",BaseIDAbstractType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedElementType",EncryptedElementType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AssertionType",AssertionType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectType",SubjectType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmationType",SubjectConfirmationType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmationDataType",SubjectConfirmationDataType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^KeyInfoConfirmationDataType",KeyInfoConfirmationDataType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^ConditionsType",ConditionsType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^ConditionAbstractType",ConditionAbstractType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AudienceRestrictionType",AudienceRestrictionType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^OneTimeUseType",OneTimeUseType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^ProxyRestrictionType",ProxyRestrictionType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AdviceType",AdviceType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^StatementAbstractType",StatementAbstractType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthnStatementType",AuthnStatementType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectLocalityType",SubjectLocalityType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthnContextType",AuthnContextType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthzDecisionStatementType",AuthzDecisionStatementType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^EvidenceType",EvidenceType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AttributeStatementType",AttributeStatementType.class);
        classNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AttributeType",AttributeType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^EventIdentificationType",EventIdentificationType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^AuditSourceIdentificationType",AuditSourceIdentificationType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^ActiveParticipantType",ActiveParticipantType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^ParticipantObjectIdentificationType",ParticipantObjectIdentificationType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^CodedValueType",CodedValueType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^TypeValuePairType",TypeValuePairType.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^AuditMessage_ActiveParticipant",AuditMessage_ActiveParticipant.class);
        classNames.put("http://ws.gematik.de/fa/phrext/v1.0^^AuditMessage",AuditMessage.class);
        classNames.put("http://ws.gematik.de/tel/error/v2.0^^Error_Trace",Error_Trace.class);
        classNames.put("http://ws.gematik.de/tel/error/v2.0^^Error", Error.class);
        classNames.put("urn:hl7-org:v3^^ANY",ANY.class);
        classNames.put("urn:hl7-org:v3^^BL",BL.class);
        classNames.put("urn:hl7-org:v3^^ANYNonNull",ANYNonNull.class);
        classNames.put("urn:hl7-org:v3^^BN",BN.class);
        classNames.put("urn:hl7-org:v3^^BIN",BIN.class);
        classNames.put("urn:hl7-org:v3^^ED",ED.class);
        classNames.put("urn:hl7-org:v3^^thumbnail",thumbnail.class);
        classNames.put("urn:hl7-org:v3^^ST",ST.class);
        classNames.put("urn:hl7-org:v3^^CD",CD.class);
        classNames.put("urn:hl7-org:v3^^CE",CE.class);
        classNames.put("urn:hl7-org:v3^^CV",CV.class);
        classNames.put("urn:hl7-org:v3^^CS",CS.class);
        classNames.put("urn:hl7-org:v3^^CO",CO.class);
        classNames.put("urn:hl7-org:v3^^CR",CR.class);
        classNames.put("urn:hl7-org:v3^^SC",SC.class);
        classNames.put("urn:hl7-org:v3^^II",II.class);
        classNames.put("urn:hl7-org:v3^^URL",URL.class);
        classNames.put("urn:hl7-org:v3^^TS",TS.class);
        classNames.put("urn:hl7-org:v3^^TEL",TEL.class);
        classNames.put("urn:hl7-org:v3^^ADXP",ADXP.class);
        classNames.put("urn:hl7-org:v3^^adxp.delimiter",adxp_x002E_delimiter.class);
        classNames.put("urn:hl7-org:v3^^adxp.country",adxp_x002E_country.class);
        classNames.put("urn:hl7-org:v3^^adxp.state",adxp_x002E_state.class);
        classNames.put("urn:hl7-org:v3^^adxp.county",adxp_x002E_county.class);
        classNames.put("urn:hl7-org:v3^^adxp.city",adxp_x002E_city.class);
        classNames.put("urn:hl7-org:v3^^adxp.postalCode",adxp_x002E_postalCode.class);
        classNames.put("urn:hl7-org:v3^^adxp.streetAddressLine",adxp_x002E_streetAddressLine.class);
        classNames.put("urn:hl7-org:v3^^adxp.houseNumber",adxp_x002E_houseNumber.class);
        classNames.put("urn:hl7-org:v3^^adxp.houseNumberNumeric",adxp_x002E_houseNumberNumeric.class);
        classNames.put("urn:hl7-org:v3^^adxp.direction",adxp_x002E_direction.class);
        classNames.put("urn:hl7-org:v3^^adxp.streetName",adxp_x002E_streetName.class);
        classNames.put("urn:hl7-org:v3^^adxp.streetNameBase",adxp_x002E_streetNameBase.class);
        classNames.put("urn:hl7-org:v3^^adxp.streetNameType",adxp_x002E_streetNameType.class);
        classNames.put("urn:hl7-org:v3^^adxp.additionalLocator",adxp_x002E_additionalLocator.class);
        classNames.put("urn:hl7-org:v3^^adxp.unitID",adxp_x002E_unitID.class);
        classNames.put("urn:hl7-org:v3^^adxp.unitType",adxp_x002E_unitType.class);
        classNames.put("urn:hl7-org:v3^^adxp.careOf",adxp_x002E_careOf.class);
        classNames.put("urn:hl7-org:v3^^adxp.censusTract",adxp_x002E_censusTract.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryAddressLine",adxp_x002E_deliveryAddressLine.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryInstallationType",adxp_x002E_deliveryInstallationType.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryInstallationArea",adxp_x002E_deliveryInstallationArea.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryInstallationQualifier",adxp_x002E_deliveryInstallationQualifier.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryMode",adxp_x002E_deliveryMode.class);
        classNames.put("urn:hl7-org:v3^^adxp.deliveryModeIdentifier",adxp_x002E_deliveryModeIdentifier.class);
        classNames.put("urn:hl7-org:v3^^adxp.buildingNumberSuffix",adxp_x002E_buildingNumberSuffix.class);
        classNames.put("urn:hl7-org:v3^^adxp.postBox",adxp_x002E_postBox.class);
        classNames.put("urn:hl7-org:v3^^adxp.precinct",adxp_x002E_precinct.class);
        classNames.put("urn:hl7-org:v3^^AD",AD.class);
        classNames.put("urn:hl7-org:v3^^ENXP",ENXP.class);
        classNames.put("urn:hl7-org:v3^^en.delimiter",en_x002E_delimiter.class);
        classNames.put("urn:hl7-org:v3^^en.family",en_x002E_family.class);
        classNames.put("urn:hl7-org:v3^^en.given",en_x002E_given.class);
        classNames.put("urn:hl7-org:v3^^en.prefix",en_x002E_prefix.class);
        classNames.put("urn:hl7-org:v3^^en.suffix",en_x002E_suffix.class);
        classNames.put("urn:hl7-org:v3^^EN",EN.class);
        classNames.put("urn:hl7-org:v3^^PN",PN.class);
        classNames.put("urn:hl7-org:v3^^ON",ON.class);
        classNames.put("urn:hl7-org:v3^^TN",TN.class);
        classNames.put("urn:hl7-org:v3^^QTY",QTY.class);
        classNames.put("urn:hl7-org:v3^^INT",INT.class);
        classNames.put("urn:hl7-org:v3^^REAL",REAL.class);
        classNames.put("urn:hl7-org:v3^^PQR",PQR.class);
        classNames.put("urn:hl7-org:v3^^PQ",PQ.class);
        classNames.put("urn:hl7-org:v3^^MO",MO.class);
        classNames.put("urn:hl7-org:v3^^RTO",RTO.class);
        classNames.put("urn:hl7-org:v3^^EIVL.event",EIVL_x002E_event.class);
        classNames.put("urn:hl7-org:v3^^SXCM_TS",SXCM_TS.class);
        classNames.put("urn:hl7-org:v3^^IVL_TS",IVL_TS.class);
        classNames.put("urn:hl7-org:v3^^IVXB_TS",IVXB_TS.class);
        classNames.put("urn:hl7-org:v3^^RTO_QTY_QTY",RTO_QTY_QTY.class);
        classNames.put("urn:hl7-org:v3^^PIVL_TS",PIVL_TS.class);
        classNames.put("urn:hl7-org:v3^^EIVL_TS",EIVL_TS.class);
        classNames.put("urn:hl7-org:v3^^IVL_PQ",IVL_PQ.class);
        classNames.put("urn:hl7-org:v3^^SXCM_PQ",SXCM_PQ.class);
        classNames.put("urn:hl7-org:v3^^IVXB_PQ",IVXB_PQ.class);
        classNames.put("urn:hl7-org:v3^^PPD_TS",PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^PPD_PQ",PPD_PQ.class);
        classNames.put("urn:hl7-org:v3^^PIVL_PPD_TS",PIVL_PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^SXCM_PPD_TS",SXCM_PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^IVL_PPD_TS",IVL_PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^IVXB_PPD_TS",IVXB_PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^EIVL_PPD_TS",EIVL_PPD_TS.class);
        classNames.put("urn:hl7-org:v3^^IVL_PPD_PQ",IVL_PPD_PQ.class);
        classNames.put("urn:hl7-org:v3^^SXCM_PPD_PQ",SXCM_PPD_PQ.class);
        classNames.put("urn:hl7-org:v3^^IVXB_PPD_PQ",IVXB_PPD_PQ.class);
        classNames.put("urn:hl7-org:v3^^SXPR_TS",SXPR_TS.class);
        classNames.put("urn:hl7-org:v3^^SXCM_CD",SXCM_CD.class);
        classNames.put("urn:hl7-org:v3^^SXCM_MO",SXCM_MO.class);
        classNames.put("urn:hl7-org:v3^^SXCM_INT",SXCM_INT.class);
        classNames.put("urn:hl7-org:v3^^SXCM_REAL",SXCM_REAL.class);
        classNames.put("urn:hl7-org:v3^^IVL_INT",IVL_INT.class);
        classNames.put("urn:hl7-org:v3^^IVXB_INT",IVXB_INT.class);
        classNames.put("urn:hl7-org:v3^^IVL_REAL",IVL_REAL.class);
        classNames.put("urn:hl7-org:v3^^IVXB_REAL",IVXB_REAL.class);
        classNames.put("urn:hl7-org:v3^^IVL_MO",IVL_MO.class);
        classNames.put("urn:hl7-org:v3^^IVXB_MO",IVXB_MO.class);
        classNames.put("urn:hl7-org:v3^^HXIT_PQ",HXIT_PQ.class);
        classNames.put("urn:hl7-org:v3^^HXIT_CE",HXIT_CE.class);
        classNames.put("urn:hl7-org:v3^^BXIT_CD",BXIT_CD.class);
        classNames.put("urn:hl7-org:v3^^BXIT_IVL_PQ",BXIT_IVL_PQ.class);
        classNames.put("urn:hl7-org:v3^^SLIST_PQ",SLIST_PQ.class);
        classNames.put("urn:hl7-org:v3^^SLIST_TS",SLIST_TS.class);
        classNames.put("urn:hl7-org:v3^^GLIST_TS",GLIST_TS.class);
        classNames.put("urn:hl7-org:v3^^GLIST_PQ",GLIST_PQ.class);
        classNames.put("urn:hl7-org:v3^^RTO_PQ_PQ",RTO_PQ_PQ.class);
        classNames.put("urn:hl7-org:v3^^RTO_MO_PQ",RTO_MO_PQ.class);
        classNames.put("urn:hl7-org:v3^^UVP_TS",UVP_TS.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^Kostentraeger",Kostentraeger.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^LandType",LandType.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Versicherungsschutz_Kostentraeger",UC_AllgemeineVersicherungsdatenXML_Versicherter_Versicherungsschutz_Kostentraeger.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Versicherungsschutz",UC_AllgemeineVersicherungsdatenXML_Versicherter_Versicherungsschutz.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GKV_Kostenerstattung",UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GKV",UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_Abrechnung_GK_1.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV",UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos",UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML_Versicherter",UC_AllgemeineVersicherungsdatenXML_Versicherter.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_AllgemeineVersicherungsdatenXML",UC_AllgemeineVersicherungsdatenXML.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse",UC_PersoenlicheVersichertendatenXML_Versicherter_Person_PostfachAdresse.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse",UC_PersoenlicheVersichertendatenXML_Versicherter_Person_StrassenAdresse.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_PersoenlicheVersichertendatenXML_Versicherter_Person",UC_PersoenlicheVersichertendatenXML_Versicherter_Person.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_PersoenlicheVersichertendatenXML_Versicherter",UC_PersoenlicheVersichertendatenXML_Versicherter.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_PersoenlicheVersichertendatenXML",UC_PersoenlicheVersichertendatenXML.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_GeschuetzteVersichertendatenXML_Zuzahlungsstatus",UC_GeschuetzteVersichertendatenXML_Zuzahlungsstatus.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_GeschuetzteVersichertendatenXML_Selektivvertraege",UC_GeschuetzteVersichertendatenXML_Selektivvertraege.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_GeschuetzteVersichertendatenXML_RuhenderLeistungsanspruch",UC_GeschuetzteVersichertendatenXML_RuhenderLeistungsanspruch.class);
        classNames.put("http://ws.gematik.de/fa/vsdm/vsd/v5.2^^UC_GeschuetzteVersichertendatenXML",UC_GeschuetzteVersichertendatenXML.class);
        classNames.put("http://ws.gematik.de/fa/phr/v1.1^^RecordIdentifierType",RecordIdentifierType.class);
        classNames.put("http://ws.gematik.de/fa/phr/v1.1^^InsurantIdType",InsurantIdType.class);
        classNames.put("http://ws.gematik.de/fa/phr/v1.1^^DeviceIdType",DeviceIdType.class);
        classNames.put("http://ws.gematik.de/fa/phr/v1.1^^PHRKeyType",PHRKeyType.class);
        classNames.put("http://ws.gematik.de/fa/phr/v1.1^^DischargeLetterContainerType",DischargeLetterContainerType.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^RecordStateType",RecordStateType.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^EncryptedKeyContainerType",EncryptedKeyContainerType.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^AuthorizationKeyType",AuthorizationKeyType.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^AuthorizationInfoType",AuthorizationInfoType.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuthorizationKey",GetAuthorizationKey.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuthorizationKeyResponse",GetAuthorizationKeyResponse.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^PutAuthorizationKey",PutAuthorizationKey.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^DeleteAuthorizationKey",DeleteAuthorizationKey.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^ReplaceAuthorizationKey",ReplaceAuthorizationKey.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^CheckRecordExists",CheckRecordExists.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^CheckRecordExistsResponse",CheckRecordExistsResponse.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuditEvents",GetAuditEvents.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^PutNotificationInfo",PutNotificationInfo.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuthorizationList",GetAuthorizationList.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuthorizationListResponse",GetAuthorizationListResponse.class);
        classNames.put("http://www.w3.org/2000/09/xmldsig#^^TransformsType",TransformsType.class);
        classNames.put("http://www.w3.org/2001/04/xmlenc#^^TransformsType",TransformsType_1.class);
        classNames.put("http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1^^GetAuditEventsResponse",GetAuditEventsResponse.class);
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Signature","http://www.w3.org/2000/09/xmldsig#^^SignatureType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureValue","http://www.w3.org/2000/09/xmldsig#^^SignatureValueType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SignedInfo","http://www.w3.org/2000/09/xmldsig#^^SignedInfoType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^CanonicalizationMethod","http://www.w3.org/2000/09/xmldsig#^^CanonicalizationMethodType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureMethod","http://www.w3.org/2000/09/xmldsig#^^SignatureMethodType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Reference","http://www.w3.org/2000/09/xmldsig#^^ReferenceType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Transforms","http://www.w3.org/2000/09/xmldsig#^^TransformsType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Transform","http://www.w3.org/2000/09/xmldsig#^^TransformType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^DigestMethod","http://www.w3.org/2000/09/xmldsig#^^DigestMethodType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^KeyInfo","http://www.w3.org/2000/09/xmldsig#^^KeyInfoType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^KeyValue","http://www.w3.org/2000/09/xmldsig#^^KeyValueType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^RetrievalMethod","http://www.w3.org/2000/09/xmldsig#^^RetrievalMethodType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^X509Data","http://www.w3.org/2000/09/xmldsig#^^X509DataType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^PGPData","http://www.w3.org/2000/09/xmldsig#^^PGPDataType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SPKIData","http://www.w3.org/2000/09/xmldsig#^^SPKIDataType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Object","http://www.w3.org/2000/09/xmldsig#^^ObjectType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^Manifest","http://www.w3.org/2000/09/xmldsig#^^ManifestType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureProperties","http://www.w3.org/2000/09/xmldsig#^^SignaturePropertiesType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^SignatureProperty","http://www.w3.org/2000/09/xmldsig#^^SignaturePropertyType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^DSAKeyValue","http://www.w3.org/2000/09/xmldsig#^^DSAKeyValueType"); 
        elementNames.put("http://www.w3.org/2000/09/xmldsig#^^RSAKeyValue","http://www.w3.org/2000/09/xmldsig#^^RSAKeyValueType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^CipherData","http://www.w3.org/2001/04/xmlenc#^^CipherDataType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^CipherReference","http://www.w3.org/2001/04/xmlenc#^^CipherReferenceType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptedData","http://www.w3.org/2001/04/xmlenc#^^EncryptedDataType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptedKey","http://www.w3.org/2001/04/xmlenc#^^EncryptedKeyType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^AgreementMethod","http://www.w3.org/2001/04/xmlenc#^^AgreementMethodType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptionProperties","http://www.w3.org/2001/04/xmlenc#^^EncryptionPropertiesType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^EncryptionProperty","http://www.w3.org/2001/04/xmlenc#^^EncryptionPropertyType"); 
        elementNames.put("http://www.w3.org/2001/04/xmlenc#^^DHKeyValue","http://www.w3.org/2001/04/xmlenc#^^DHKeyValueType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^BaseID","urn:oasis:names:tc:SAML:2.0:assertion^^BaseIDAbstractType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^NameID","urn:oasis:names:tc:SAML:2.0:assertion^^NameIDType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedID","urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedElementType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Issuer","urn:oasis:names:tc:SAML:2.0:assertion^^NameIDType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Assertion","urn:oasis:names:tc:SAML:2.0:assertion^^AssertionType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Subject","urn:oasis:names:tc:SAML:2.0:assertion^^SubjectType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmation","urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmationType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmationData","urn:oasis:names:tc:SAML:2.0:assertion^^SubjectConfirmationDataType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Conditions","urn:oasis:names:tc:SAML:2.0:assertion^^ConditionsType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Condition","urn:oasis:names:tc:SAML:2.0:assertion^^ConditionAbstractType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AudienceRestriction","urn:oasis:names:tc:SAML:2.0:assertion^^AudienceRestrictionType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^OneTimeUse","urn:oasis:names:tc:SAML:2.0:assertion^^OneTimeUseType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^ProxyRestriction","urn:oasis:names:tc:SAML:2.0:assertion^^ProxyRestrictionType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Advice","urn:oasis:names:tc:SAML:2.0:assertion^^AdviceType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedAssertion","urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedElementType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Statement","urn:oasis:names:tc:SAML:2.0:assertion^^StatementAbstractType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthnStatement","urn:oasis:names:tc:SAML:2.0:assertion^^AuthnStatementType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^SubjectLocality","urn:oasis:names:tc:SAML:2.0:assertion^^SubjectLocalityType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthnContext","urn:oasis:names:tc:SAML:2.0:assertion^^AuthnContextType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AuthzDecisionStatement","urn:oasis:names:tc:SAML:2.0:assertion^^AuthzDecisionStatementType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Action","urn:oasis:names:tc:SAML:2.0:assertion^^ActionType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Evidence","urn:oasis:names:tc:SAML:2.0:assertion^^EvidenceType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^AttributeStatement","urn:oasis:names:tc:SAML:2.0:assertion^^AttributeStatementType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^Attribute","urn:oasis:names:tc:SAML:2.0:assertion^^AttributeType"); 
        elementNames.put("urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedAttribute","urn:oasis:names:tc:SAML:2.0:assertion^^EncryptedElementType"); 
        elementNames.put("http://ws.gematik.de/fa/phr/v1.1^^RecordIdentifier","http://ws.gematik.de/fa/phr/v1.1^^RecordIdentifierType"); 
        elementNames.put("http://ws.gematik.de/fa/phr/v1.1^^DeviceId","http://ws.gematik.de/fa/phr/v1.1^^DeviceIdType"); 
        elementNames.put("http://ws.gematik.de/fa/phr/v1.1^^PHRKey","http://ws.gematik.de/fa/phr/v1.1^^PHRKeyType"); 
        elementNames.put("http://ws.gematik.de/fa/phr/v1.1^^DischargeLetterContainer","http://ws.gematik.de/fa/phr/v1.1^^DischargeLetterContainerType"); 
    } 

    protected static final int QNAME_NAMESPACE = 0;
    private static final String TYPE_LABEL = "type";
    public boolean createClassesForAny = false;

    public ExtendedSoapSerializationEnvelope() {
        this(SoapEnvelope.VER11);
    }

    public ExtendedSoapSerializationEnvelope(int soapVersion) {
        super(soapVersion);
        implicitTypes = true;
        setAddAdornments(false);
        new MarshalGuid().register(this);
        new MarshalFloat().register(this);
    }


    @Override
    protected void writeProperty(XmlSerializer writer, java.lang.Object obj, PropertyInfo type) throws IOException {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if (obj == null || obj== SoapPrimitive.NullNilElement) {
            writer.attribute(xsi, version >= VER12 ? NIL_LABEL : NULL_LABEL, "true");
            return;
        }
        if(writeReferenceObject(writer,obj))
        {
            return;
        }
        java.lang.Object[] qName = getInfo(null, obj);
        if (!type.multiRef && qName[2] == null )
        {
            if (!implicitTypes || (obj.getClass() != type.type && !(obj instanceof Vector ) && type.type!=java.lang.String.class  )) {
                java.lang.String xmlName=Helper.getKeyByValue(classNames,obj.getClass());
                if(xmlName!=null) {
                    java.lang.String[] parts = xmlName.split("\\^\\^");
                    java.lang.String prefix = writer.getPrefix(parts[0], true);
                    writer.attribute(xsi, TYPE_LABEL, prefix + ":" + parts[1]);
                }
                else
                {
                    if(type.type instanceof String) {
                        java.lang.String xsdPrefix = writer.getPrefix(xsd, true);
                        java.lang.String myType = (java.lang.String) type.type;
                        java.lang.String[] parts = myType.split("\\^\\^");
                        if (parts.length == 2) {
                            xsdPrefix = writer.getPrefix(parts[0], true);
                            myType = parts[1];
                        }

                        writer.attribute(xsi, TYPE_LABEL, xsdPrefix + ":" + myType);
                    }
                    else
                    {
                        java.lang.String prefix = writer.getPrefix(type.namespace, true);
                        writer.attribute(xsi, TYPE_LABEL, prefix + ":" + obj.getClass().getSimpleName());
                    }

                }
            }
            //super.writeProperty(writer,obj,type);

            //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
            //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
            writeElement(writer, obj, type, qName[QNAME_MARSHAL]);
        }
        else {
            super.writeProperty(writer, obj, type);
        }
    }

    public SoapObject GetExceptionDetail(Element detailElement,java.lang.String exceptionElementNS,java.lang.String exceptionElementName)
    {
        int index=detailElement.indexOf(exceptionElementNS,exceptionElementName,0);
        if(index>-1)
        {
            Element errorElement=detailElement.getElement(index);
            return GetSoapObject(errorElement);
        }
        return null;
    }

    public SoapObject GetSoapObject(Element detailElement) {
        try{
            XmlSerializer xmlSerializer = XmlPullParserFactory.newInstance().newSerializer();
            StringWriter writer = new StringWriter();
            xmlSerializer.setOutput(writer);
            detailElement.write(xmlSerializer);
            xmlSerializer.flush();

            XmlPullParser xpp = new KXmlParser();
            xpp.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);

            xpp.setInput(new StringReader(writer.toString()));
            xpp.nextTag();
            SoapObject soapObj = new SoapObject(detailElement.getNamespace(),detailElement.getName());
            readSerializable(xpp,soapObj);
            return soapObj;
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
    }

    public java.lang.Object GetHeader(Element detailElement) {
        if(detailElement.getChildCount()>0 && detailElement.getText(0)!=null)
        {
            SoapPrimitive primitive = new SoapPrimitive(detailElement.getNamespace(),detailElement.getName(),detailElement.getText(0));
            return  primitive;
        }
    
        return GetSoapObject(detailElement);
    }
    public PropertyInfo getAny(PropertyInfo info)
    {
        if(info==null)
        {
            return null;
        }
        try
        {
            java.lang.Class cl=null;
            if(createClassesForAny && info.getValue() instanceof SoapObject)
            {
                java.lang.String key=String.format("%s^^%s",info.getNamespace(),info.getName());
                if(elementNames.containsKey(key))
                {
                    key=elementNames.get(key);
                }
                if(classNames.containsKey(key))
                {
                    cl=classNames.get(key);
                }
                if(cl!=null)
                {
                    java.lang.Object obj=createObject(info.getValue(), cl);
                    info.setValue(obj);
                }
            }
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
        }
        return info;
    }
    private Object createObject(Object soap, Class cl) throws InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {
        Object obj=cl.newInstance();
        Method ctor = obj.getClass().getMethod("loadFromSoap",Object.class,ExtendedSoapSerializationEnvelope.class);
        ctor.invoke(obj,soap,this);
        return obj;
    }

    public java.lang.Object get(java.lang.Object soap,java.lang.Class cl,boolean typeFromClass)
    {
        if(soap==null)
        {
            return null;
        }
        try
        {
            if(typeFromClass)
            {
                return createObject(soap, cl);
            }
            java.lang.Object refAttr=getReference(soap);
            if (refAttr != null)
            {
                return refAttr;
            }
            else
            {
                if(soap instanceof SoapObject)
                {
                    if(cl ==SoapObject.class)
                    {
                        return soap;
                    }
                    java.lang.String key=String.format("%s^^%s",((SoapObject)soap).getNamespace(),((SoapObject)soap).getName());
                    if(classNames.containsKey(key))
                    {
                        cl=classNames.get(key);
                    }
                }
                return createObject(soap, cl);
            }
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
            return null;
        }
    }


    public java.lang.Object getSpecificType(java.lang.Object obj)
    {
        if(obj==null)
        {
            return null;
        }
        if(obj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)obj;
            java.lang.String key=soapObject.getNamespace()+"^^"+soapObject.getName();
            if(classNames.containsKey(key))
            {
                java.lang.Class cl=classNames.get(key);
                try
                {
                    return createObject(soapObject, cl);
                } 
                catch (java.lang.Exception e)
                {
                    e.printStackTrace();
                }
            }
        }

        return obj;
    }

    public static java.lang.Object getXSDType(java.lang.Object param)
    {
        if(param==null)
        {
            return null;
        }
        java.lang.Class obj=param.getClass();
        if(obj.equals(java.lang.String.class))
        {
            return "string";
        }
        if(obj.equals(int.class) || obj.equals(java.lang.Integer.class))
        {
            return "int";
        }
        if(obj.equals(float.class) || obj.equals(java.lang.Float.class))
        {
            return "float";
        }
        if(obj.equals(double.class) || obj.equals(java.lang.Double.class))
        {
            return "double";
        }
        if(obj.equals(java.math.BigDecimal.class))
        {
            return "decimal";
        }
        if(obj.equals(short.class) || obj.equals(java.lang.Short.class))
        {
            return "short";
        }
        if(obj.equals(long.class) || obj.equals(java.lang.Long.class))
        {
            return "long";
        }
        if(obj.equals(boolean.class) || obj.equals(java.lang.Boolean.class))
        {
            return "boolean";
        }
        java.lang.String xmlName=Helper.getKeyByValue(classNames,obj);
        if(xmlName==null)
        {
            return obj;
        }
        return xmlName;
    }} 

