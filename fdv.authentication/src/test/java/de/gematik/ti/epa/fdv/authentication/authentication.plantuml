@startuml

title __AUTHENTICATION's Class Diagram__\n

  namespace de.gematik.ti.epa.fdv.authentication {
    abstract class de.gematik.ti.epa.fdv.authentication.integration.AbstractReaderResource {
        + terminal : ICardReader
        {static} # cardReaders : Collection<ICardReader>
        {static} - LOG : Logger
        # after()
        # before()
        # initializeReader()
        # initializeReader()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest {
        {static} - LOG : Logger
        - authServiceLoader : AuthnService
        + clean()
        + setUp()
        + testSelectOutofAuthnList()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest.MockEpaApp {
        {static} - MY_SELECTION : int
        + handleSelectAuthnProvider()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.AuthnServiceTest {
        {static} - LOG : Logger
        {static} - authServiceLoader : AuthnService
        {static} + setUp()
        + testGetAuthnProviderToUse()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.AuthnIntegrationTest {
        + testAuthService()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource {
        {static} + CARD_SIM_CONFIG_BASE_DIR : String
        ~ connectedCardReaders : Vector<SimulationCardReader>
        {static} - DEFAULT_EGK_CARD_SIM_CONF_FILE : String
        {static} - LOG : Logger
        {static} - READER_IDENTIFIER : String
        - ctControllers : Collection<ICardReaderController>
        - pathToCardSimConfig : String
        - simulationManagerPortNumber : int
        + CardSimReaderResource()
        + CardSimReaderResource()
        # after()
        # before()
        - getCardSimConfigFile()
        - isCardReaderConnected()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource.ConnectionListener {
        + cardReaderConnected()
        + cardReaderDisconnected()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.integration.TestHealthCard {
        + TestHealthCard()
    }
  }
  

  namespace de.gematik.ti.epa.fdv.authentication {
    class de.gematik.ti.epa.fdv.authentication.XmlCanonicalizerTest {
        {static} + EXCLUSIVE_XML_CANONICALIZATION : String
        {static} + EXCLUSIVE_XML_CANONICALIZATION_WITH_COMMENTS : String
        {static} + INCLUSIVE_XML_CANONICALIZATION : String
        {static} + INCLUSIVE_XML_CANONICALIZATION_WITH_COMMENTS : String
        ~ expected : String
        ~ expectedInclusive : String
        ~ xmlSource : String
        + testCanonicalizeXmlExclusive()
        + testCanonicalizeXmlExclusiveWithComments()
        + testCanonicalizeXmlInclusive()
        + testCanonicalizeXmlInclusiveWithComments()
    }
  }
  

  de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest o-- de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest.MockEpaApp : mockEpaApp
  de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest +-down- de.gematik.ti.epa.fdv.authentication.integration.AuthnServiceInteractionWithAppTest.MockEpaApp
  de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource o-- de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource.ConnectionListener : connectionListener
  de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource +-down- de.gematik.ti.epa.fdv.authentication.integration.CardSimReaderResource.ConnectionListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
